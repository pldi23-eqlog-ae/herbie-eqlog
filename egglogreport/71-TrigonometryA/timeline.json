[{"compiler":[[20,14]],"method":["search"],"sampling":[[12,0.2476836433634162,0.0019502649083733559,0.7503660917282104],[11,0.24573337845504284,0.0039005298167467117,0.7503660917282104],[10,0.24573337845504284,0.0039005298167467117,0.7503660917282104],[9,0.24183284863829613,0.0078010596334934235,0.7503660917282104],[8,0.24183284863829613,0.0078010596334934235,0.7503660917282104],[7,0.2340317890048027,0.015602119266986847,0.7503660917282104],[6,0.2340317890048027,0.015602119266986847,0.7503660917282104],[5,0.21842966973781586,0.031204238533973694,0.7503660917282104],[4,0.18722543120384216,0.06240847706794739,0.7503660917282104],[3,0.12481695413589478,0.12481695413589478,0.7503660917282104],[2,0.12481695413589478,0.12481695413589478,0.7503660917282104],[1,0.0,0.24963390827178955,0.7503660917282104],[0,0.0,0.24963390827178955,0.7503660917282104]],"time":6.27392578125,"type":"analyze"},{"outcomes":[["body",512,"valid",159.087158203125,979],["body",1024,"valid",598.042236328125,2146],["body",2048,"valid",5.97314453125,10],["body",256,"valid",393.4306640625,5121]],"time":1165.43701171875,"type":"sample"},{"compiler":[[13,9]],"inputs":[["0","1"],["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 v (sin.f64 e)) (+.f64 1 (*.f64 v (cos.f64 e))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 (cos.f64 v) e 1))","(/.f64 (*.f64 v (sin.f64 e)) (+.f64 1 (*.f64 v (cos.f64 e))))","(/.f64 (*.f64 v (sin.f64 e)) (fma.f64 (cos.f64 e) v 1))"]],"symmetry":[[]],"time":59.816162109375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))","(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))"]],"time":18.044921875,"type":"simplify"},{"compiler":[[23,12]],"time":1.43798828125,"type":"eval"},{"alts":[["(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))","next",0.15234375]],"compiler":[[12,8],[12,8]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.15234375],"time":0.901123046875,"type":"prune"},{"compiler":[[28,11]],"locations":[["(sin.f64 v)",0.0234375,true],["(cos.f64 v)",0.0234375,true],["(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))",0.03125,true],["(*.f64 e (sin.f64 v))",0.1171875,true]],"time":7.725830078125,"type":"localize"},{"count":[[4,56]],"series":[["(sin.f64 v)","v","-inf",0.158935546875],["(sin.f64 v)","v","inf",0.135009765625],["(sin.f64 v)","v","0",0.18408203125],["(cos.f64 v)","v","-inf",0.160888671875],["(cos.f64 v)","v","inf",0.136962890625],["(cos.f64 v)","v","0",0.223876953125],["(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))","v","-inf",0.612060546875],["(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))","v","inf",0.635986328125],["(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))","v","0",1.06884765625],["(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))","e","-inf",0.677978515625],["(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))","e","inf",0.512939453125],["(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))","e","0",0.453125],["(*.f64 e (sin.f64 v))","v","-inf",0.257080078125],["(*.f64 e (sin.f64 v))","v","inf",0.307861328125],["(*.f64 e (sin.f64 v))","v","0",0.5380859375],["(*.f64 e (sin.f64 v))","e","-inf",0.294189453125],["(*.f64 e (sin.f64 v))","e","inf",0.406982421875],["(*.f64 e (sin.f64 v))","e","0",0.7431640625]],"time":7.7890625,"type":"series"},{"count":[[4,127]],"inputs":[["(*.f64 e (sin.f64 v))","(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))","(cos.f64 v)","(sin.f64 v)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 e (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 e (sin.f64 v)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (neg.f64 e) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 e (sin.f64 v)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 e (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 v) e)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 e (cbrt.f64 (sin.f64 v))) (pow.f64 (sin.f64 v) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 v) (cbrt.f64 e)) (pow.f64 e 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 v)) (*.f64 (pow.f64 (sin.f64 v) 2/3) e))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 e) (*.f64 (pow.f64 e 2/3) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 v) 2/3) e) (cbrt.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 e 2/3) (*.f64 (sin.f64 v) (cbrt.f64 e)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 v) 2/3) (*.f64 e (cbrt.f64 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 e 2/3) (sin.f64 v)) (cbrt.f64 e))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v))) (neg.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) 0)) (+.f64 0 (cbrt.f64 (*.f64 e (sin.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (+.f64 0 (*.f64 (cbrt.f64 (*.f64 e (sin.f64 v))) 0))) (-.f64 (cbrt.f64 (*.f64 e (sin.f64 v))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 e) (neg.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 v)) (neg.f64 e))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 e (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 e (sin.f64 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 e) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 e) (sin.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (sin.f64 v)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (+.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (*.f64 0 (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v)))))) (cbrt.f64 (*.f64 e (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 e (sin.f64 v))) (pow.f64 (*.f64 e (sin.f64 v)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (cbrt.f64 (*.f64 e (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 e) (sin.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 e (sin.f64 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 e (sin.f64 v))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 e (sin.f64 v)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 e (sin.f64 v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 e) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 e (sin.f64 v)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3) (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 e (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 (sin.f64 v) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 e (sin.f64 v))) (/.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (fma.f64 e (cos.f64 v) 1)) (cbrt.f64 (*.f64 e (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 v) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (/.f64 e (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 e) (sin.f64 v)) (/.f64 -1 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 v) (/.f64 e (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 e (sin.f64 v)) (/.f64 1 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 e (cos.f64 v) 1)) (*.f64 e (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3) (*.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 e (cos.f64 v) 1)) (*.f64 (neg.f64 e) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (-.f64 -1 (*.f64 e (cos.f64 v))))) (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3) (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v)))) (pow.f64 (-.f64 -1 (*.f64 e (cos.f64 v))) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (/.f64 1 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (+.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3) (*.f64 0 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (-.f64 -1 (*.f64 e (cos.f64 v))))) (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))) (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2) (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2) (*.f64 (neg.f64 e) (sin.f64 v)))) (cbrt.f64 (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 e) (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3) (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v)))) (cbrt.f64 (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3) (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v))))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 0) (cos.f64 v)) (*.f64 (sin.f64 0) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 v) (cos.f64 0)) (*.f64 (sin.f64 v) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (cos.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 v)) (pow.f64 (cos.f64 v) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 v) 2/3) (cbrt.f64 (cos.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (cos.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cos.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cos.f64 v) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cos.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (cos.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 v) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 v)))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (neg.f64 v))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 0) (cos.f64 v)) (*.f64 (cos.f64 0) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 v) (cos.f64 0)) (*.f64 (cos.f64 v) (sin.f64 0)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 v) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 v)) (pow.f64 (sin.f64 v) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 v) 2/3) (cbrt.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (sin.f64 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 v) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 v)))))"]],"rules":[["egg-rr",21],["egg-rr",21],["egg-rr",51],["egg-rr",34]],"time":56.076904296875,"type":"rewrite"},{"count":[[183,171]],"inputs":[["(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 v e)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (*.f64 v e))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 v 5) e)) (*.f64 v e)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 v 5) e)) (+.f64 (*.f64 v e) (*.f64 -1/5040 (*.f64 (pow.f64 v 7) e)))))","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(/.f64 (*.f64 v e) (+.f64 1 e))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))) (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 v 2)))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 v 4)) (*.f64 -1/2 (pow.f64 v 2))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 v 4)) (+.f64 (*.f64 -1/2 (pow.f64 v 2)) (*.f64 -1/720 (pow.f64 v 6)))))","v","(+.f64 v (*.f64 -1/6 (pow.f64 v 3)))","(+.f64 v (+.f64 (*.f64 -1/6 (pow.f64 v 3)) (*.f64 1/120 (pow.f64 v 5))))","(+.f64 v (+.f64 (*.f64 -1/6 (pow.f64 v 3)) (+.f64 (*.f64 -1/5040 (pow.f64 v 7)) (*.f64 1/120 (pow.f64 v 5)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 v e)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (*.f64 v e))","(*.f64 e (fma.f64 -1/6 (pow.f64 v 3) v))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 v 5) e)) (*.f64 v e)))","(+.f64 (*.f64 e (fma.f64 -1/6 (pow.f64 v 3) v)) (*.f64 1/120 (*.f64 (pow.f64 v 5) e)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 v 5) e)) (+.f64 (*.f64 v e) (*.f64 -1/5040 (*.f64 (pow.f64 v 7) e)))))","(+.f64 (*.f64 e (fma.f64 -1/6 (pow.f64 v 3) (*.f64 1/120 (pow.f64 v 5)))) (*.f64 e (+.f64 v (*.f64 -1/5040 (pow.f64 v 7)))))","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(fma.f64 (neg.f64 (sin.f64 v)) (*.f64 (cos.f64 v) (*.f64 e e)) (*.f64 (sin.f64 v) e))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(fma.f64 (neg.f64 (sin.f64 v)) (*.f64 (cos.f64 v) (*.f64 e e)) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(+.f64 (*.f64 (neg.f64 (sin.f64 v)) (+.f64 (*.f64 (cos.f64 v) (*.f64 e e)) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(tan.f64 v)","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (*.f64 e e))) (-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (*.f64 e e))) (-.f64 (-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e)) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(tan.f64 v)","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (*.f64 e e))) (-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (*.f64 e e))) (-.f64 (-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e)) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))))","(/.f64 (*.f64 v e) (+.f64 1 e))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(fma.f64 (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) (pow.f64 v 3) (/.f64 (*.f64 v e) (+.f64 1 e)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) (fma.f64 (pow.f64 v 5) (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 1 e)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 -1/2 (*.f64 (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) e)) (+.f64 1 e)))) (/.f64 (*.f64 v e) (+.f64 1 e))))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))) (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))))) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(+.f64 (fma.f64 (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) (pow.f64 v 3) (/.f64 (*.f64 v e) (+.f64 1 e))) (fma.f64 (pow.f64 v 7) (-.f64 (/.f64 (-.f64 (*.f64 -1/5040 e) (*.f64 1/24 (*.f64 (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) e))) (+.f64 1 e)) (fma.f64 -1/2 (/.f64 (*.f64 (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 1 e)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 -1/2 (*.f64 (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) e)) (+.f64 1 e)))) e) (+.f64 1 e)) (/.f64 (*.f64 -1/720 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2)))) (*.f64 (pow.f64 v 5) (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 1 e)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 -1/2 (*.f64 (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) e)) (+.f64 1 e)))))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 (cos.f64 v) e 1))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 (cos.f64 v) e 1))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 (cos.f64 v) e 1))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 (cos.f64 v) e 1))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 (cos.f64 v) e 1))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 (cos.f64 v) e 1))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 (cos.f64 v) e 1))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (fma.f64 (cos.f64 v) e 1))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 v 2)))","(fma.f64 -1/2 (*.f64 v v) 1)","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 v 4)) (*.f64 -1/2 (pow.f64 v 2))))","(+.f64 1 (fma.f64 1/24 (pow.f64 v 4) (*.f64 -1/2 (*.f64 v v))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 v 4)) (+.f64 (*.f64 -1/2 (pow.f64 v 2)) (*.f64 -1/720 (pow.f64 v 6)))))","(+.f64 1 (fma.f64 1/24 (pow.f64 v 4) (fma.f64 (pow.f64 v 6) -1/720 (*.f64 -1/2 (*.f64 v v)))))","v","(+.f64 v (*.f64 -1/6 (pow.f64 v 3)))","(fma.f64 -1/6 (pow.f64 v 3) v)","(+.f64 v (+.f64 (*.f64 -1/6 (pow.f64 v 3)) (*.f64 1/120 (pow.f64 v 5))))","(+.f64 v (fma.f64 -1/6 (pow.f64 v 3) (*.f64 1/120 (pow.f64 v 5))))","(+.f64 v (+.f64 (*.f64 -1/6 (pow.f64 v 3)) (+.f64 (*.f64 -1/5040 (pow.f64 v 7)) (*.f64 1/120 (pow.f64 v 5)))))","(+.f64 v (fma.f64 (pow.f64 v 3) -1/6 (fma.f64 -1/5040 (pow.f64 v 7) (*.f64 1/120 (pow.f64 v 5)))))"]],"time":202.923095703125,"type":"simplify"},{"compiler":[[3337,1719]],"time":35.748046875,"type":"eval"},{"alts":[["(*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))","next",0.13671875],["(/.f64 (*.f64 (cbrt.f64 (sin.f64 v)) (*.f64 (pow.f64 (sin.f64 v) 2/3) e)) (fma.f64 e (cos.f64 v) 1))","fresh",32.147259533546425],["(/.f64 (*.f64 (*.f64 e (cbrt.f64 (sin.f64 v))) (pow.f64 (sin.f64 v) 2/3)) (fma.f64 e (cos.f64 v) 1))","fresh",32.15493890769409],["(/.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (*.f64 v e)) (fma.f64 e (cos.f64 v) 1))","fresh",32.37309330802875],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)","fresh",0.5964878051370305],["(/.f64 (/.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3) 2)))","fresh",0.14910126953688402]],"compiler":[[21,14],[18,12],[18,12],[19,13],[15,11],[33,23],[21,14],[18,12],[18,12],[19,13],[15,11],[33,23]],"count":[[172,6]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[171,6],"picked":[1,0]}],"min-error":[0.05078125],"time":48.761962890625,"type":"prune"},{"compiler":[[65,34]],"locations":[["(/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))",0.01171875,true],["(sin.f64 v)",0.0234375,false],["(cos.f64 v)",0.0234375,false],["(*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))",0.109375,true]],"time":17.991943359375,"type":"localize"},{"count":[[2,40]],"series":[["(/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","e","-inf",0.703125],["(/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","e","inf",0.989990234375],["(/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","e","0",0.64111328125],["(/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","v","-inf",1.6259765625],["(/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","v","inf",1.66796875],["(/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","v","0",3.069091796875],["(*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))","e","-inf",0.30615234375],["(*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))","e","inf",0.337890625],["(*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))","e","0",0.302001953125],["(*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))","v","-inf",1.162841796875],["(*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))","v","inf",1.3330078125],["(*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))","v","0",1.080078125]],"time":13.494140625,"type":"series"},{"count":[[2,113]],"inputs":[["(*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))","(/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 0) (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 0 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (pow.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (cbrt.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (*.f64 (pow.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) 2/3) (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (/.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 v) (/.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (/.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))) (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 v) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) e)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))) (pow.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (*.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 e (/.f64 (*.f64 (sin.f64 v) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (neg.f64 (sin.f64 v))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) 2/3) (*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3) (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3) (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (neg.f64 (sin.f64 v))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) 2/3) (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (neg.f64 (sin.f64 v))) (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (neg.f64 (sin.f64 v))) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (cbrt.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (neg.f64 (*.f64 (sin.f64 v) e))) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) -1) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (neg.f64 (sin.f64 v))) 1) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) 1) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))) (pow.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 v) (/.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 v)) (*.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (sin.f64 v))) (*.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) 1) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) -1) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (neg.f64 (sin.f64 v))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (neg.f64 (sin.f64 v))) 1) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) 3) (fma.f64 e (cos.f64 v) 1)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (neg.f64 (sin.f64 v))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1)))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (/.f64 (sin.f64 v) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 v) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) 3) (fma.f64 e (cos.f64 v) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 0) (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 0 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (sin.f64 v) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1)))) (/.f64 (sin.f64 v) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (sin.f64 v) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 v)) (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 v)) (cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 2) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 v) (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3) (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)) (/.f64 (sin.f64 v) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 2) (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)) (neg.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 v)) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)) (sin.f64 v)) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (cbrt.f64 (sin.f64 v))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (cbrt.f64 (neg.f64 (sin.f64 v)))) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (pow.f64 (sin.f64 v) 2/3)) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 v) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) 1) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (sin.f64 v)) (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (sin.f64 v))) (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) 1) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (sin.f64 v) -1) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (sin.f64 v)) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (sin.f64 v) 3) (fma.f64 e (cos.f64 v) 1)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sin.f64 v) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 3) (fma.f64 e (cos.f64 v) 1)))))))"]],"rules":[["egg-rr",46],["egg-rr",67]],"time":32.661865234375,"type":"rewrite"},{"count":[[153,152]],"inputs":[["(/.f64 (*.f64 v e) (+.f64 1 e))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))))))) (+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3) v)","(+.f64 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3) v))","(+.f64 (*.f64 (pow.f64 v 5) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 2)) 1/3) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))) (+.f64 (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/4 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))))))) (*.f64 1/120 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3))))) (+.f64 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3) v)))","(+.f64 (*.f64 (pow.f64 v 7) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 2)) 1/3) (+.f64 (*.f64 -1/720 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))) (*.f64 -1/4 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))))) e) (+.f64 1 e))) (+.f64 (*.f64 1/216 (/.f64 (pow.f64 e 3) (pow.f64 (+.f64 1 e) 4))) (+.f64 (*.f64 1/48 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/4 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3)))) e) (+.f64 1 e))))))))) (+.f64 (*.f64 1/720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)) (+.f64 (*.f64 -1/5040 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3)) (*.f64 1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 2)) 1/3) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))) (+.f64 (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/4 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))))))))))) (+.f64 (*.f64 (pow.f64 v 5) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 2)) 1/3) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))) (+.f64 (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/4 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))))))) (*.f64 1/120 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3))))) (+.f64 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3) v))))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(sin.f64 v)","(+.f64 (sin.f64 v) (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))","(+.f64 (sin.f64 v) (+.f64 (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (cos.f64 v) 2)) (*.f64 1/3 (pow.f64 (cos.f64 v) 2))) (pow.f64 e 2)))) (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)))))","(+.f64 (sin.f64 v) (+.f64 (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (cos.f64 v) 2)) (*.f64 1/3 (pow.f64 (cos.f64 v) 2))) (pow.f64 e 2)))) (+.f64 (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (cos.f64 v) (+.f64 (*.f64 -1 (pow.f64 (cos.f64 v) 2)) (*.f64 1/3 (pow.f64 (cos.f64 v) 2))))) (+.f64 (*.f64 -1/27 (pow.f64 (cos.f64 v) 3)) (pow.f64 (cos.f64 v) 3))) (pow.f64 e 3)))) (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 v e) (+.f64 1 e))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) (/.f64 (*.f64 v e) (+.f64 1 e)))","(+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))))))","(+.f64 (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) (/.f64 (*.f64 v e) (+.f64 1 e))) (*.f64 (pow.f64 v 5) (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 1 e)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 -1/2 (*.f64 (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) e)) (+.f64 1 e))))))","(+.f64 (*.f64 (pow.f64 v 7) (-.f64 (*.f64 -1/5040 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))) (+.f64 (*.f64 -1/720 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e))))) e) (+.f64 1 e))))))) (+.f64 (*.f64 (pow.f64 v 3) (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))))) (+.f64 (/.f64 (*.f64 v e) (+.f64 1 e)) (*.f64 (pow.f64 v 5) (-.f64 (*.f64 1/120 (/.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 e (+.f64 1 e))) (*.f64 -1/2 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 2)))) e) (+.f64 1 e)))))))))","(fma.f64 (pow.f64 v 7) (-.f64 (/.f64 (-.f64 (*.f64 -1/5040 e) (*.f64 1/24 (*.f64 (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) e))) (+.f64 1 e)) (fma.f64 -1/720 (/.f64 (*.f64 e e) (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 -1/2 (*.f64 (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 1 e)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 -1/2 (*.f64 (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) e)) (+.f64 1 e)))) e)) (+.f64 1 e)))) (+.f64 (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) (/.f64 (*.f64 v e) (+.f64 1 e))) (*.f64 (pow.f64 v 5) (-.f64 (/.f64 (*.f64 1/120 e) (+.f64 1 e)) (fma.f64 1/24 (/.f64 (*.f64 e e) (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 -1/2 (*.f64 (fma.f64 -1/6 (/.f64 e (+.f64 1 e)) (/.f64 (*.f64 1/2 (*.f64 e e)) (pow.f64 (+.f64 1 e) 2))) e)) (+.f64 1 e)))))))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(-.f64 (*.f64 (sin.f64 v) e) (*.f64 (*.f64 (sin.f64 v) (cos.f64 v)) (*.f64 e e)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(-.f64 (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))) (*.f64 (*.f64 (sin.f64 v) (cos.f64 v)) (*.f64 e e)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) (pow.f64 e 2)))) (+.f64 (*.f64 -1 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3))))))","(+.f64 (*.f64 (neg.f64 (sin.f64 v)) (+.f64 (*.f64 (cos.f64 v) (*.f64 e e)) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 4)))) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 e 3)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(tan.f64 v)","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (*.f64 e e))) (-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (*.f64 e e))) (-.f64 (-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e)) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))))","(/.f64 (sin.f64 v) (cos.f64 v))","(tan.f64 v)","(+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))","(-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (*.f64 e e))) (-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e)))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (pow.f64 e 2))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) e))) (/.f64 (sin.f64 v) (cos.f64 v)))))","(+.f64 (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 3) (*.f64 e e))) (-.f64 (-.f64 (tan.f64 v) (/.f64 (/.f64 (tan.f64 v) (cos.f64 v)) e)) (/.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 4) (pow.f64 e 3)))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3) v)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 e))) v)","(+.f64 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3) v))","(fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (cbrt.f64 (/.f64 1 (+.f64 1 e))) (*.f64 (*.f64 1/6 (cbrt.f64 (pow.f64 (+.f64 1 e) -4))) e)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 e))) v))","(+.f64 (*.f64 (pow.f64 v 5) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 2)) 1/3) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))) (+.f64 (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/4 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))))))) (*.f64 1/120 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3))))) (+.f64 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3) v)))","(fma.f64 (pow.f64 v 5) (fma.f64 -1/36 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 e) -4)) e) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 e) 2)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 (*.f64 e e) -1/6) (pow.f64 (+.f64 1 e) 3)))) (*.f64 1/120 (cbrt.f64 (/.f64 1 (+.f64 1 e)))))) (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (cbrt.f64 (/.f64 1 (+.f64 1 e))) (*.f64 (*.f64 1/6 (cbrt.f64 (pow.f64 (+.f64 1 e) -4))) e)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 e))) v)))","(+.f64 (*.f64 (pow.f64 v 7) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 2)) 1/3) (+.f64 (*.f64 -1/720 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))) (*.f64 -1/4 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))))) e) (+.f64 1 e))) (+.f64 (*.f64 1/216 (/.f64 (pow.f64 e 3) (pow.f64 (+.f64 1 e) 4))) (+.f64 (*.f64 1/48 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/4 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3)))) e) (+.f64 1 e))))))))) (+.f64 (*.f64 1/720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)) (+.f64 (*.f64 -1/5040 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3)) (*.f64 1/18 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 2)) 1/3) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))) (+.f64 (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/4 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))))))))))) (+.f64 (*.f64 (pow.f64 v 5) (+.f64 (*.f64 -1/36 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 2)) 1/3) (+.f64 (*.f64 1/12 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))) (+.f64 (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2))) (*.f64 -1/4 (/.f64 (pow.f64 e 2) (pow.f64 (+.f64 1 e) 3))))))) (*.f64 1/120 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3))))) (+.f64 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/6 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3)) (*.f64 1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 4)) 1/3) e)))) (*.f64 (pow.f64 (/.f64 1 (+.f64 1 e)) 1/3) v))))","(fma.f64 (pow.f64 v 7) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 e) 2)) (fma.f64 -1/720 (/.f64 e (pow.f64 (+.f64 1 e) 2)) (fma.f64 -1/3 (/.f64 (*.f64 (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 (*.f64 e e) -1/6) (pow.f64 (+.f64 1 e) 3))) e) (+.f64 1 e)) (fma.f64 1/216 (*.f64 (pow.f64 e 3) (pow.f64 (+.f64 1 e) -4)) (fma.f64 1/48 (/.f64 (*.f64 e e) (pow.f64 (+.f64 1 e) 3)) (/.f64 (*.f64 1/2 (*.f64 (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 -1/4 (*.f64 e e)) (pow.f64 (+.f64 1 e) 3))) e)) (+.f64 1 e))))))) (fma.f64 1/720 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 e) -4)) e) (fma.f64 -1/5040 (cbrt.f64 (/.f64 1 (+.f64 1 e))) (*.f64 (*.f64 1/18 (cbrt.f64 (pow.f64 (+.f64 1 e) 2))) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 (*.f64 e e) -1/6) (pow.f64 (+.f64 1 e) 3))))))) (fma.f64 (pow.f64 v 5) (fma.f64 -1/36 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 e) -4)) e) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 e) 2)) (fma.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 2)) (/.f64 (*.f64 (*.f64 e e) -1/6) (pow.f64 (+.f64 1 e) 3)))) (*.f64 1/120 (cbrt.f64 (/.f64 1 (+.f64 1 e)))))) (fma.f64 (pow.f64 v 3) (fma.f64 -1/6 (cbrt.f64 (/.f64 1 (+.f64 1 e))) (*.f64 (*.f64 1/6 (cbrt.f64 (pow.f64 (+.f64 1 e) -4))) e)) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 1 e))) v))))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e)))))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e)))))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e)))))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e)))))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e)))))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e)))))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e)))))","(*.f64 (sin.f64 v) (pow.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3))","(*.f64 (sin.f64 v) (cbrt.f64 (/.f64 1 (+.f64 1 (*.f64 (cos.f64 v) e)))))","(sin.f64 v)","(+.f64 (sin.f64 v) (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))","(+.f64 (sin.f64 v) (+.f64 (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (cos.f64 v) 2)) (*.f64 1/3 (pow.f64 (cos.f64 v) 2))) (pow.f64 e 2)))) (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e)))))","(+.f64 (sin.f64 v) (*.f64 (*.f64 -1/3 (sin.f64 v)) (+.f64 (*.f64 (cos.f64 v) e) (*.f64 (*.f64 (pow.f64 (cos.f64 v) 2) -2/3) (*.f64 e e)))))","(+.f64 (sin.f64 v) (+.f64 (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (cos.f64 v) 2)) (*.f64 1/3 (pow.f64 (cos.f64 v) 2))) (pow.f64 e 2)))) (+.f64 (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (cos.f64 v) (+.f64 (*.f64 -1 (pow.f64 (cos.f64 v) 2)) (*.f64 1/3 (pow.f64 (cos.f64 v) 2))))) (+.f64 (*.f64 -1/27 (pow.f64 (cos.f64 v) 3)) (pow.f64 (cos.f64 v) 3))) (pow.f64 e 3)))) (*.f64 -1/3 (*.f64 (sin.f64 v) (*.f64 (cos.f64 v) e))))))","(+.f64 (sin.f64 v) (*.f64 -1/3 (+.f64 (*.f64 (sin.f64 v) (+.f64 (*.f64 (fma.f64 2/3 (*.f64 (cos.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) -2/3)) (*.f64 26/27 (pow.f64 (cos.f64 v) 3))) (pow.f64 e 3)) (*.f64 (cos.f64 v) e))) (*.f64 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) -2/3)) (*.f64 e e)))))"]],"time":169.81591796875,"type":"simplify"},{"compiler":[[7189,4388]],"time":82.56103515625,"type":"eval"},{"alts":[["(/.f64 (*.f64 (*.f64 e (cbrt.f64 (sin.f64 v))) (pow.f64 (sin.f64 v) 2/3)) (fma.f64 e (cos.f64 v) 1))","fresh",32.15493890769409],["(/.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (*.f64 v e)) (fma.f64 e (cos.f64 v) 1))","fresh",32.37309330802875],["(*.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3) (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))","next",0.13671875],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)","fresh",0.5964878051370305],["(*.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))","fresh",32.139447033546425]],"compiler":[[18,12],[19,13],[32,22],[15,11],[34,22],[18,12],[19,13],[32,22],[15,11],[34,22]],"count":[[242,5]],"kept":[{"done":[0,0],"fresh":[5,3],"new":[236,2],"picked":[1,0]}],"min-error":[0.05078125],"time":90.68896484375,"type":"prune"},{"compiler":[[113,61]],"locations":[["(/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))",0.0234375,true],["(sin.f64 v)",0.0234375,false],["(cos.f64 v)",0.0234375,false],["(*.f64 (sin.f64 v) e)",0.1171875,true]],"time":29.89599609375,"type":"localize"},{"count":[[2,28]],"series":[["(/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","e","-inf",5.510009765625],["(/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","e","inf",5.0400390625],["(/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","e","0",4.10791015625],["(/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","v","-inf",10.252197265625],["(/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","v","inf",24.797119140625],["(/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))","v","0",14.62109375],["(*.f64 (sin.f64 v) e)","e","-inf",0.14794921875],["(*.f64 (sin.f64 v) e)","e","inf",0.156005859375],["(*.f64 (sin.f64 v) e)","e","0",0.171142578125],["(*.f64 (sin.f64 v) e)","v","-inf",0.14892578125],["(*.f64 (sin.f64 v) e)","v","inf",0.153076171875],["(*.f64 (sin.f64 v) e)","v","0",0.2451171875]],"time":65.818115234375,"type":"series"},{"count":[[2,94]],"inputs":[["(*.f64 (sin.f64 v) e)","(/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 v) e) 0) (*.f64 (sin.f64 v) e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 v) e) (*.f64 (*.f64 (sin.f64 v) e) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (sin.f64 v) e)) (*.f64 (sin.f64 v) e))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 v) e) (*.f64 0 (*.f64 (sin.f64 v) e)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 e) (*.f64 (pow.f64 e 2/3) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 v) e)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 e (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 e) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 e) (sin.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 e 2/3) (sin.f64 v)) (cbrt.f64 e))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 v) e)) (pow.f64 (*.f64 (sin.f64 v) e) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 v) e) 2/3) (cbrt.f64 (*.f64 (sin.f64 v) e)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 v) (cbrt.f64 e)) (pow.f64 e 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 e (cbrt.f64 (sin.f64 v))) (pow.f64 (sin.f64 v) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 v)) (*.f64 (pow.f64 (sin.f64 v) 2/3) e))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 v) e))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 v) e) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 v) 2/3) (*.f64 e (cbrt.f64 (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 e 2/3) (*.f64 (sin.f64 v) (cbrt.f64 e)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 v) 2/3) e) (cbrt.f64 (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 v) e) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 e) (sin.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 v) e) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 v) e) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 v) e)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 v) e) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 v) e)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 v) e)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 e) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 v) e) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) 0) (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) (*.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))) (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) (*.f64 0 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1)))) (neg.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (/.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))) (pow.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) 2/3) (cbrt.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))) (/.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) 2/3) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sin.f64 v)) (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))) (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 v) (/.f64 (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (/.f64 (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (/.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3) (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)) (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))) (*.f64 (sin.f64 v) e))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) 2/3) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (/.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)) (*.f64 (neg.f64 (sin.f64 v)) (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (sin.f64 v)) (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)) (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (*.f64 (sin.f64 v) e)) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) 2/3) (cbrt.f64 (*.f64 (neg.f64 (sin.f64 v)) (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))))) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) 2/3) (cbrt.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))) (pow.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) 2/3)) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 (sin.f64 v)) (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))))) (pow.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))) (pow.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) 1) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 v) (/.f64 (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (/.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) 1) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 (sin.f64 v)) (*.f64 e (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) -1) (cbrt.f64 (neg.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 (*.f64 (sin.f64 v) e) 3) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (fma.f64 e (cos.f64 v) 1)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (fma.f64 e (cos.f64 v) 1))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (*.f64 (pow.f64 (*.f64 (sin.f64 v) e) 3) (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)) (fma.f64 e (cos.f64 v) 1)))))))"]],"rules":[["egg-rr",64],["egg-rr",30]],"time":30.075927734375,"type":"rewrite"},{"count":[[122,133]],"inputs":[["(*.f64 v e)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (*.f64 v e))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 v 5) e)) (*.f64 v e)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 v 5) e)) (+.f64 (*.f64 v e) (*.f64 -1/5040 (*.f64 (pow.f64 v 7) e)))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 v e))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 v e)) (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e))) (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 v e)) (+.f64 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e))) (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)))) (*.f64 (pow.f64 v 5) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/162 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10))) (*.f64 1/216 (+.f64 (*.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6))))))))) (*.f64 -12 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)))))) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)) (*.f64 1/54 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e))))))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 v e)) (+.f64 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e))) (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)))) (+.f64 (*.f64 (pow.f64 v 5) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/162 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10))) (*.f64 1/216 (+.f64 (*.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6))))))))) (*.f64 -12 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)))))) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)) (*.f64 1/54 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e)))))) (*.f64 (pow.f64 v 7) (+.f64 (*.f64 -1/1080 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 -1/1944 (*.f64 (+.f64 (*.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6))))))))) (*.f64 -12 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)))) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) (pow.f64 (+.f64 1 e) 5)))) (+.f64 (*.f64 -1/4374 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 3) (pow.f64 (+.f64 1 e) 15))) (*.f64 1/6480 (+.f64 (*.f64 -240 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 3) (pow.f64 (+.f64 1 e) 15))) (+.f64 (*.f64 -720 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) (*.f64 (pow.f64 (+.f64 1 e) 10) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6)))))))))) (*.f64 -720 (*.f64 (+.f64 (*.f64 -1/720 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 -1/720 (*.f64 (+.f64 1 e) e)) (+.f64 (*.f64 -1/720 (*.f64 e (+.f64 1 e))) (*.f64 -1/24 (pow.f64 e 2)))) (pow.f64 (+.f64 1 e) 7))) (+.f64 (*.f64 1/12 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (*.f64 2 (*.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 2)))) (+.f64 1 e)) (+.f64 (*.f64 -1 (*.f64 e (*.f64 (pow.f64 (+.f64 1 e) 2) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))))) (*.f64 1/24 (*.f64 (pow.f64 (+.f64 1 e) 4) e))))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 9))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 3))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) e) (pow.f64 (+.f64 1 e) 8))) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6)))))))) (pow.f64 (+.f64 1 e) 5))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (*.f64 2 (*.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 2)))) e) (pow.f64 (+.f64 1 e) 10))))))))) (pow.f64 (+.f64 1 e) 5)))))))) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 e (+.f64 (*.f64 1/162 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10))) (*.f64 1/216 (+.f64 (*.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6))))))))) (*.f64 -12 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10))))))))) (*.f64 -1/5040 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)))))))))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1/9 (*.f64 (sin.f64 v) (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(+.f64 (*.f64 -1/9 (*.f64 (sin.f64 v) (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (*.f64 -2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))))))) (pow.f64 e 3)))))","(+.f64 (*.f64 -1/9 (*.f64 (sin.f64 v) (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 -1/162 (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (*.f64 -2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))))))) (+.f64 (*.f64 -1/4374 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 3)) (*.f64 1/54 (+.f64 (*.f64 -6 (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))))) (+.f64 (*.f64 -6 (+.f64 (*.f64 (cos.f64 v) (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))))) (*.f64 4 (pow.f64 (cos.f64 v) 3)))))) (*.f64 -2 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 3))))))) (pow.f64 e 4))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (*.f64 -2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))))))) (pow.f64 e 3))))))","(*.f64 (sin.f64 v) (*.f64 e (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5))))))))","(+.f64 (*.f64 (sin.f64 v) (*.f64 e (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) (*.f64 -5/9 (/.f64 (*.f64 (sin.f64 v) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5))))))) (cos.f64 v))))","(+.f64 (*.f64 (sin.f64 v) (*.f64 e (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) (+.f64 (*.f64 -5/9 (/.f64 (*.f64 (sin.f64 v) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5))))))) (cos.f64 v))) (/.f64 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 1/18 (-.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 7)))) (pow.f64 (cos.f64 v) 5))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2))))) (*.f64 25/162 (/.f64 1 (pow.f64 (cos.f64 v) 2)))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) e)))","(+.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 (-.f64 (+.f64 (*.f64 -5/162 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 7)))) (pow.f64 (cos.f64 v) 5))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2)))) (cos.f64 v))) (*.f64 1/54 (-.f64 (+.f64 (*.f64 -30 (*.f64 (+.f64 (*.f64 -5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 7)))) (pow.f64 (cos.f64 v) 4))) (*.f64 -6 (*.f64 (pow.f64 (cos.f64 v) 5) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 7)))) (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4)))) (pow.f64 (cos.f64 v) 5))) (+.f64 (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 8))) (*.f64 -5 (/.f64 (+.f64 (*.f64 (cos.f64 v) (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))) (*.f64 4 (pow.f64 (cos.f64 v) 3))) (pow.f64 (cos.f64 v) 11)))))))) (*.f64 250 (/.f64 1 (pow.f64 (cos.f64 v) 3)))))) (*.f64 125/4374 (/.f64 1 (pow.f64 (cos.f64 v) 3)))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) (pow.f64 e 2)) (+.f64 (*.f64 (sin.f64 v) (*.f64 e (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) (+.f64 (*.f64 -5/9 (/.f64 (*.f64 (sin.f64 v) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5))))))) (cos.f64 v))) (/.f64 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 1/18 (-.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 7)))) (pow.f64 (cos.f64 v) 5))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2))))) (*.f64 25/162 (/.f64 1 (pow.f64 (cos.f64 v) 2)))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) e))))","(*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) e))","(+.f64 (*.f64 -5/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (sin.f64 v)) (cos.f64 v))) (*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) e)))","(+.f64 (*.f64 -5/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (sin.f64 v)) (cos.f64 v))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (*.f64 (sin.f64 v) (+.f64 (*.f64 25/162 (/.f64 1 (pow.f64 (cos.f64 v) 2))) (*.f64 1/18 (-.f64 (*.f64 -2 (*.f64 (pow.f64 (cos.f64 v) 5) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (cos.f64 v) 7))) (+.f64 (*.f64 5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (pow.f64 (cos.f64 v) 9))))))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2)))))))) e) (*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) e))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (+.f64 (*.f64 5/162 (/.f64 (-.f64 (*.f64 -2 (*.f64 (pow.f64 (cos.f64 v) 5) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (cos.f64 v) 7))) (+.f64 (*.f64 5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (pow.f64 (cos.f64 v) 9))))))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2)))) (cos.f64 v))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 6 (*.f64 (+.f64 (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 8))) (+.f64 (*.f64 5 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (cos.f64 v))) (*.f64 -4 (pow.f64 (cos.f64 v) 3))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (cos.f64 v) 7))) (+.f64 (*.f64 5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (pow.f64 (cos.f64 v) 9)))))) (pow.f64 (cos.f64 v) 5))))) (pow.f64 (cos.f64 v) 5))) (+.f64 (*.f64 250 (/.f64 1 (pow.f64 (cos.f64 v) 3))) (*.f64 30 (*.f64 (pow.f64 (cos.f64 v) 4) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (cos.f64 v) 7))) (+.f64 (*.f64 5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (pow.f64 (cos.f64 v) 9)))))))))) (*.f64 125/4374 (/.f64 1 (pow.f64 (cos.f64 v) 3))))))) (pow.f64 e 2))) (+.f64 (*.f64 -5/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (sin.f64 v)) (cos.f64 v))) (+.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (+.f64 (*.f64 25/162 (/.f64 1 (pow.f64 (cos.f64 v) 2))) (*.f64 1/18 (-.f64 (*.f64 -2 (*.f64 (pow.f64 (cos.f64 v) 5) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (cos.f64 v) 7))) (+.f64 (*.f64 5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (pow.f64 (cos.f64 v) 9))))))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2)))))))) e) (*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) e)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 v e)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (*.f64 v e))","(fma.f64 -1/6 (*.f64 (pow.f64 v 3) e) (*.f64 v e))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 v 5) e)) (*.f64 v e)))","(fma.f64 -1/6 (*.f64 (pow.f64 v 3) e) (fma.f64 1/120 (*.f64 (pow.f64 v 5) e) (*.f64 v e)))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 v 5) e)) (+.f64 (*.f64 v e) (*.f64 -1/5040 (*.f64 (pow.f64 v 7) e)))))","(fma.f64 -1/6 (*.f64 (pow.f64 v 3) e) (fma.f64 1/120 (*.f64 (pow.f64 v 5) e) (fma.f64 v e (*.f64 -1/5040 (*.f64 (pow.f64 v 7) e)))))","(*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 v e))","(*.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) (*.f64 v e))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 v e)) (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e))) (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)))))","(fma.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) (*.f64 v e) (*.f64 (pow.f64 v 3) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) 40) 1/9) (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) e)) (*.f64 -1/6 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) e)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 v e)) (+.f64 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e))) (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)))) (*.f64 (pow.f64 v 5) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/162 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10))) (*.f64 1/216 (+.f64 (*.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6))))))))) (*.f64 -12 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)))))) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)) (*.f64 1/54 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e))))))))","(fma.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) (*.f64 v e) (fma.f64 (pow.f64 v 3) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) 40) 1/9) (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) e)) (*.f64 -1/6 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) e))) (*.f64 (pow.f64 v 5) (fma.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) (*.f64 (fma.f64 1/162 (*.f64 (pow.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)) (*.f64 1/216 (fma.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (fma.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (neg.f64 (/.f64 (*.f64 e (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 8))) (fma.f64 2 (/.f64 (fma.f64 1/24 (*.f64 e (+.f64 1 e)) (fma.f64 1/4 (*.f64 e e) (*.f64 1/24 (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 7)) (/.f64 (*.f64 1/24 e) (pow.f64 (+.f64 1 e) 6))))))) (*.f64 -12 (*.f64 (pow.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)))))) e) (fma.f64 1/120 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) e) (*.f64 1/54 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) 40) 1/9) (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) e))))))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 v e)) (+.f64 (*.f64 (pow.f64 v 3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e))) (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)))) (+.f64 (*.f64 (pow.f64 v 5) (+.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 (+.f64 (*.f64 1/162 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10))) (*.f64 1/216 (+.f64 (*.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6))))))))) (*.f64 -12 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)))))) e)) (+.f64 (*.f64 1/120 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)) (*.f64 1/54 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e)))))) (*.f64 (pow.f64 v 7) (+.f64 (*.f64 -1/1080 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 1 e) 40)) 1/9) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) e))) (+.f64 (*.f64 (*.f64 (+.f64 (*.f64 -1/1944 (*.f64 (+.f64 (*.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6))))))))) (*.f64 -12 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)))) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) (pow.f64 (+.f64 1 e) 5)))) (+.f64 (*.f64 -1/4374 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 3) (pow.f64 (+.f64 1 e) 15))) (*.f64 1/6480 (+.f64 (*.f64 -240 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 3) (pow.f64 (+.f64 1 e) 15))) (+.f64 (*.f64 -720 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) (*.f64 (pow.f64 (+.f64 1 e) 10) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6)))))))))) (*.f64 -720 (*.f64 (+.f64 (*.f64 -1/720 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 -1/720 (*.f64 (+.f64 1 e) e)) (+.f64 (*.f64 -1/720 (*.f64 e (+.f64 1 e))) (*.f64 -1/24 (pow.f64 e 2)))) (pow.f64 (+.f64 1 e) 7))) (+.f64 (*.f64 1/12 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (*.f64 2 (*.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 2)))) (+.f64 1 e)) (+.f64 (*.f64 -1 (*.f64 e (*.f64 (pow.f64 (+.f64 1 e) 2) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))))) (*.f64 1/24 (*.f64 (pow.f64 (+.f64 1 e) 4) e))))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 9))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 3))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) e) (pow.f64 (+.f64 1 e) 8))) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6)))))))) (pow.f64 (+.f64 1 e) 5))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (*.f64 2 (*.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 2)))) e) (pow.f64 (+.f64 1 e) 10))))))))) (pow.f64 (+.f64 1 e) 5)))))))) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) (*.f64 e (+.f64 (*.f64 1/162 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10))) (*.f64 1/216 (+.f64 (*.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 1 e) e)) (*.f64 -1/2 (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (*.f64 -1 (/.f64 (*.f64 e (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/24 (*.f64 e (+.f64 1 e))) (+.f64 (*.f64 1/4 (pow.f64 e 2)) (*.f64 1/24 (*.f64 (+.f64 1 e) e)))) (pow.f64 (+.f64 1 e) 7))) (*.f64 1/24 (/.f64 e (pow.f64 (+.f64 1 e) 6))))))))) (*.f64 -12 (*.f64 (pow.f64 (+.f64 (*.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6))) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 e (+.f64 1 e))) (*.f64 -1/2 (*.f64 (+.f64 1 e) e))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10))))))))) (*.f64 -1/5040 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 e) 5)) 1/9) e)))))))))","(fma.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) (*.f64 v e) (fma.f64 (pow.f64 v 3) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) 40) 1/9) (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) e)) (*.f64 -1/6 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) e))) (fma.f64 (pow.f64 v 5) (fma.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) (*.f64 (fma.f64 1/162 (*.f64 (pow.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)) (*.f64 1/216 (fma.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (fma.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (neg.f64 (/.f64 (*.f64 e (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 8))) (fma.f64 2 (/.f64 (fma.f64 1/24 (*.f64 e (+.f64 1 e)) (fma.f64 1/4 (*.f64 e e) (*.f64 1/24 (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 7)) (/.f64 (*.f64 1/24 e) (pow.f64 (+.f64 1 e) 6))))))) (*.f64 -12 (*.f64 (pow.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)))))) e) (fma.f64 1/120 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) e) (*.f64 1/54 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) 40) 1/9) (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) e))))) (*.f64 (pow.f64 v 7) (fma.f64 -1/1080 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) 40) 1/9) (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) e)) (fma.f64 (*.f64 (fma.f64 -1/1944 (*.f64 (fma.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (fma.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (neg.f64 (/.f64 (*.f64 e (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 8))) (fma.f64 2 (/.f64 (fma.f64 1/24 (*.f64 e (+.f64 1 e)) (fma.f64 1/4 (*.f64 e e) (*.f64 1/24 (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 7)) (/.f64 (*.f64 1/24 e) (pow.f64 (+.f64 1 e) 6))))))) (*.f64 -12 (*.f64 (pow.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)))) (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (pow.f64 (+.f64 1 e) 5))) (fma.f64 -1/4374 (*.f64 (pow.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) 3) (pow.f64 (+.f64 1 e) 15)) (*.f64 1/6480 (fma.f64 -240 (*.f64 (pow.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) 3) (pow.f64 (+.f64 1 e) 15)) (*.f64 -720 (+.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (*.f64 (pow.f64 (+.f64 1 e) 10) (+.f64 (/.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (fma.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (neg.f64 (/.f64 (*.f64 e (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 8))) (fma.f64 2 (/.f64 (fma.f64 1/24 (*.f64 e (+.f64 1 e)) (fma.f64 1/4 (*.f64 e e) (*.f64 1/24 (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 7)) (/.f64 (*.f64 1/24 e) (pow.f64 (+.f64 1 e) 6)))))))) (*.f64 (fma.f64 -1/720 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (fma.f64 2 (/.f64 (fma.f64 -1/720 (*.f64 e (+.f64 1 e)) (fma.f64 -1/720 (*.f64 e (+.f64 1 e)) (*.f64 -1/24 (*.f64 e e)))) (pow.f64 (+.f64 1 e) 7)) (fma.f64 1/12 (/.f64 (*.f64 e (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 8)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (fma.f64 (+.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) 2) (*.f64 (*.f64 2 (fma.f64 1/24 (*.f64 e (+.f64 1 e)) (fma.f64 1/4 (*.f64 e e) (*.f64 1/24 (*.f64 e (+.f64 1 e)))))) (pow.f64 (+.f64 1 e) 2))) (+.f64 1 e) (+.f64 (neg.f64 (*.f64 e (*.f64 (pow.f64 (+.f64 1 e) 2) (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))))) (*.f64 1/24 (*.f64 (pow.f64 (+.f64 1 e) 4) e))))) (pow.f64 (+.f64 1 e) 5))) (fma.f64 2 (/.f64 (*.f64 (fma.f64 1/24 (*.f64 e (+.f64 1 e)) (fma.f64 1/4 (*.f64 e e) (*.f64 1/24 (*.f64 e (+.f64 1 e))))) (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 9)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e))) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (fma.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (neg.f64 (/.f64 (*.f64 e (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 8))) (+.f64 (/.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) 2) (pow.f64 (+.f64 1 e) 9)) (fma.f64 2 (/.f64 (fma.f64 1/24 (*.f64 e (+.f64 1 e)) (fma.f64 1/4 (*.f64 e e) (*.f64 1/24 (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 7)) (/.f64 (*.f64 1/24 e) (pow.f64 (+.f64 1 e) 6))))))) (pow.f64 (+.f64 1 e) 5))) (/.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) 2) (*.f64 (*.f64 2 (fma.f64 1/24 (*.f64 e (+.f64 1 e)) (fma.f64 1/4 (*.f64 e e) (*.f64 1/24 (*.f64 e (+.f64 1 e)))))) (pow.f64 (+.f64 1 e) 2))) e)) (pow.f64 (+.f64 1 e) 10)))))))) (pow.f64 (+.f64 1 e) 5)))))))) e) (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) (fma.f64 -1/6 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) (*.f64 (fma.f64 1/162 (*.f64 (pow.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)) (*.f64 1/216 (fma.f64 -24 (*.f64 (pow.f64 (+.f64 1 e) 5) (+.f64 (/.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) 2) (pow.f64 (+.f64 1 e) 9)) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) (fma.f64 2 (*.f64 (pow.f64 (+.f64 1 e) 3) (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (*.f64 -1/2 (*.f64 (pow.f64 (+.f64 1 e) 4) e)))) (pow.f64 (+.f64 1 e) 5))) (+.f64 (neg.f64 (/.f64 (*.f64 e (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 8))) (fma.f64 2 (/.f64 (fma.f64 1/24 (*.f64 e (+.f64 1 e)) (fma.f64 1/4 (*.f64 e e) (*.f64 1/24 (*.f64 e (+.f64 1 e))))) (pow.f64 (+.f64 1 e) 7)) (/.f64 (*.f64 1/24 e) (pow.f64 (+.f64 1 e) 6))))))) (*.f64 -12 (*.f64 (pow.f64 (fma.f64 -1/2 (/.f64 e (pow.f64 (+.f64 1 e) 6)) (*.f64 2 (/.f64 (*.f64 -1/2 (+.f64 (*.f64 e (+.f64 1 e)) (*.f64 e (+.f64 1 e)))) (pow.f64 (+.f64 1 e) 7)))) 2) (pow.f64 (+.f64 1 e) 10)))))) e)) (*.f64 -1/5040 (*.f64 (pow.f64 (pow.f64 (+.f64 1 e) (neg.f64 5)) 1/9) e)))))))))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (neg.f64 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (neg.f64 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (neg.f64 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (neg.f64 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (neg.f64 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (neg.f64 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (neg.f64 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (/.f64 1 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) 5)) 1/9))","(*.f64 (*.f64 (sin.f64 v) e) (pow.f64 (pow.f64 (+.f64 1 (*.f64 (cos.f64 v) e)) (neg.f64 5)) 1/9))","(*.f64 (sin.f64 v) e)","(+.f64 (*.f64 -1/9 (*.f64 (sin.f64 v) (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (pow.f64 e 2)))) (*.f64 (sin.f64 v) e))","(fma.f64 -1/9 (*.f64 (sin.f64 v) (*.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) (*.f64 e e))) (*.f64 (sin.f64 v) e))","(+.f64 (*.f64 -1/9 (*.f64 (sin.f64 v) (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (*.f64 -2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))))))) (pow.f64 e 3)))))","(fma.f64 -1/9 (*.f64 (sin.f64 v) (*.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) (*.f64 e e))) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (fma.f64 1/162 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 2) (*.f64 1/18 (+.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 2)) (*.f64 -2 (+.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 2)) (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 8 2))))))) (pow.f64 e 3)))))","(+.f64 (*.f64 -1/9 (*.f64 (sin.f64 v) (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (pow.f64 e 2)))) (+.f64 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 -1/162 (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (*.f64 -2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))))))) (+.f64 (*.f64 -1/4374 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 3)) (*.f64 1/54 (+.f64 (*.f64 -6 (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))))) (+.f64 (*.f64 -6 (+.f64 (*.f64 (cos.f64 v) (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))))) (*.f64 4 (pow.f64 (cos.f64 v) 3)))))) (*.f64 -2 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 3))))))) (pow.f64 e 4))) (+.f64 (*.f64 (sin.f64 v) e) (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 1/162 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (*.f64 1/18 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (*.f64 -2 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (cos.f64 v) (*.f64 4 (cos.f64 v))) 2)) (+.f64 (*.f64 8 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))))))) (pow.f64 e 3))))))","(fma.f64 -1/9 (*.f64 (sin.f64 v) (*.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) (*.f64 e e))) (fma.f64 (sin.f64 v) (*.f64 (fma.f64 -1/162 (*.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) (+.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 2)) (*.f64 -2 (+.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 2)) (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 8 2)))))) (fma.f64 -1/4374 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 3) (*.f64 1/54 (fma.f64 -6 (*.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) (+.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 2)) (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 8 2)))) (fma.f64 -6 (fma.f64 (cos.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 4 2)) (+.f64 (neg.f64 (*.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 8 2)) (*.f64 (+.f64 4 1) (cos.f64 v)))) (+.f64 (neg.f64 (*.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) (+.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 2)) (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 8 2))))) (*.f64 4 (pow.f64 (cos.f64 v) 3))))) (*.f64 -2 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 3))))))) (pow.f64 e 4)) (*.f64 (sin.f64 v) (+.f64 e (*.f64 (fma.f64 1/162 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 2) (*.f64 1/18 (+.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 2)) (*.f64 -2 (+.f64 (neg.f64 (pow.f64 (*.f64 (+.f64 4 1) (cos.f64 v)) 2)) (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 8 2))))))) (pow.f64 e 3))))))","(*.f64 (sin.f64 v) (*.f64 e (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5))))))))","(*.f64 (sin.f64 v) (*.f64 e (pow.f64 (exp.f64 1/9) (fma.f64 5 (neg.f64 (log.f64 e)) (log.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))))))","(+.f64 (*.f64 (sin.f64 v) (*.f64 e (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) (*.f64 -5/9 (/.f64 (*.f64 (sin.f64 v) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5))))))) (cos.f64 v))))","(fma.f64 (sin.f64 v) (*.f64 e (pow.f64 (exp.f64 1/9) (fma.f64 5 (neg.f64 (log.f64 e)) (log.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))))) (/.f64 (*.f64 -5/9 (*.f64 (sin.f64 v) (pow.f64 (exp.f64 1/9) (fma.f64 5 (neg.f64 (log.f64 e)) (log.f64 (pow.f64 (cos.f64 v) (neg.f64 5))))))) (cos.f64 v)))","(+.f64 (*.f64 (sin.f64 v) (*.f64 e (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) (+.f64 (*.f64 -5/9 (/.f64 (*.f64 (sin.f64 v) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5))))))) (cos.f64 v))) (/.f64 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 1/18 (-.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 7)))) (pow.f64 (cos.f64 v) 5))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2))))) (*.f64 25/162 (/.f64 1 (pow.f64 (cos.f64 v) 2)))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) e)))","(fma.f64 (sin.f64 v) (*.f64 e (pow.f64 (exp.f64 1/9) (fma.f64 5 (neg.f64 (log.f64 e)) (log.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))))) (fma.f64 -5/9 (/.f64 (*.f64 (sin.f64 v) (pow.f64 (exp.f64 1/9) (fma.f64 5 (neg.f64 (log.f64 e)) (log.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))))) (cos.f64 v)) (/.f64 (*.f64 (sin.f64 v) (*.f64 (fma.f64 1/18 (fma.f64 -2 (*.f64 (fma.f64 -5 (/.f64 (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4)) (pow.f64 (cos.f64 v) 11)) (/.f64 10 (pow.f64 (cos.f64 v) 7))) (pow.f64 (cos.f64 v) 5)) (neg.f64 (/.f64 25 (pow.f64 (cos.f64 v) 2)))) (/.f64 25/162 (pow.f64 (cos.f64 v) 2))) (pow.f64 (exp.f64 1/9) (fma.f64 5 (neg.f64 (log.f64 e)) (log.f64 (pow.f64 (cos.f64 v) (neg.f64 5))))))) e)))","(+.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 (-.f64 (+.f64 (*.f64 -5/162 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 7)))) (pow.f64 (cos.f64 v) 5))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2)))) (cos.f64 v))) (*.f64 1/54 (-.f64 (+.f64 (*.f64 -30 (*.f64 (+.f64 (*.f64 -5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 7)))) (pow.f64 (cos.f64 v) 4))) (*.f64 -6 (*.f64 (pow.f64 (cos.f64 v) 5) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 7)))) (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4)))) (pow.f64 (cos.f64 v) 5))) (+.f64 (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 8))) (*.f64 -5 (/.f64 (+.f64 (*.f64 (cos.f64 v) (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2)))) (*.f64 4 (pow.f64 (cos.f64 v) 3))) (pow.f64 (cos.f64 v) 11)))))))) (*.f64 250 (/.f64 1 (pow.f64 (cos.f64 v) 3)))))) (*.f64 125/4374 (/.f64 1 (pow.f64 (cos.f64 v) 3)))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) (pow.f64 e 2)) (+.f64 (*.f64 (sin.f64 v) (*.f64 e (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) (+.f64 (*.f64 -5/9 (/.f64 (*.f64 (sin.f64 v) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5))))))) (cos.f64 v))) (/.f64 (*.f64 (sin.f64 v) (*.f64 (+.f64 (*.f64 1/18 (-.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 7)))) (pow.f64 (cos.f64 v) 5))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2))))) (*.f64 25/162 (/.f64 1 (pow.f64 (cos.f64 v) 2)))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 5 (log.f64 (/.f64 1 e))) (log.f64 (/.f64 1 (pow.f64 (cos.f64 v) 5)))))))) e))))","(+.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 (-.f64 (fma.f64 -5/162 (/.f64 (fma.f64 -2 (*.f64 (fma.f64 -5 (/.f64 (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4)) (pow.f64 (cos.f64 v) 11)) (/.f64 10 (pow.f64 (cos.f64 v) 7))) (pow.f64 (cos.f64 v) 5)) (neg.f64 (/.f64 25 (pow.f64 (cos.f64 v) 2)))) (cos.f64 v)) (*.f64 1/54 (-.f64 (fma.f64 -30 (*.f64 (fma.f64 -5 (/.f64 (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4)) (pow.f64 (cos.f64 v) 11)) (/.f64 10 (pow.f64 (cos.f64 v) 7))) (pow.f64 (cos.f64 v) 4)) (*.f64 -6 (*.f64 (pow.f64 (cos.f64 v) 5) (+.f64 (neg.f64 (/.f64 (*.f64 (fma.f64 -5 (/.f64 (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4)) (pow.f64 (cos.f64 v) 11)) (/.f64 10 (pow.f64 (cos.f64 v) 7))) (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 5))) (fma.f64 10 (pow.f64 (cos.f64 v) (neg.f64 8)) (/.f64 (*.f64 -5 (fma.f64 (cos.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 4 2)) (*.f64 4 (pow.f64 (cos.f64 v) 3)))) (pow.f64 (cos.f64 v) 11))))))) (/.f64 250 (pow.f64 (cos.f64 v) 3))))) (/.f64 125/4374 (pow.f64 (cos.f64 v) 3))) (pow.f64 (exp.f64 1/9) (fma.f64 5 (neg.f64 (log.f64 e)) (log.f64 (pow.f64 (cos.f64 v) (neg.f64 5))))))) (*.f64 e e)) (fma.f64 (sin.f64 v) (*.f64 e (pow.f64 (exp.f64 1/9) (fma.f64 5 (neg.f64 (log.f64 e)) (log.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))))) (fma.f64 -5/9 (/.f64 (*.f64 (sin.f64 v) (pow.f64 (exp.f64 1/9) (fma.f64 5 (neg.f64 (log.f64 e)) (log.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))))) (cos.f64 v)) (/.f64 (*.f64 (sin.f64 v) (*.f64 (fma.f64 1/18 (fma.f64 -2 (*.f64 (fma.f64 -5 (/.f64 (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4)) (pow.f64 (cos.f64 v) 11)) (/.f64 10 (pow.f64 (cos.f64 v) 7))) (pow.f64 (cos.f64 v) 5)) (neg.f64 (/.f64 25 (pow.f64 (cos.f64 v) 2)))) (/.f64 25/162 (pow.f64 (cos.f64 v) 2))) (pow.f64 (exp.f64 1/9) (fma.f64 5 (neg.f64 (log.f64 e)) (log.f64 (pow.f64 (cos.f64 v) (neg.f64 5))))))) e))))","(*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) e))","(*.f64 (sin.f64 v) (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (neg.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))) (*.f64 5 (log.f64 (/.f64 -1 e))))) e))","(+.f64 (*.f64 -5/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (sin.f64 v)) (cos.f64 v))) (*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) e)))","(fma.f64 -5/9 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (neg.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))) (*.f64 5 (log.f64 (/.f64 -1 e))))) (sin.f64 v)) (cos.f64 v)) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (neg.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))) (*.f64 5 (log.f64 (/.f64 -1 e))))) e)))","(+.f64 (*.f64 -5/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (sin.f64 v)) (cos.f64 v))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (*.f64 (sin.f64 v) (+.f64 (*.f64 25/162 (/.f64 1 (pow.f64 (cos.f64 v) 2))) (*.f64 1/18 (-.f64 (*.f64 -2 (*.f64 (pow.f64 (cos.f64 v) 5) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (cos.f64 v) 7))) (+.f64 (*.f64 5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (pow.f64 (cos.f64 v) 9))))))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2)))))))) e) (*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) e))))","(fma.f64 -5/9 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (neg.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))) (*.f64 5 (log.f64 (/.f64 -1 e))))) (sin.f64 v)) (cos.f64 v)) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (neg.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))) (*.f64 5 (log.f64 (/.f64 -1 e))))) (*.f64 (sin.f64 v) (fma.f64 25/162 (pow.f64 (cos.f64 v) (neg.f64 2)) (*.f64 1/18 (fma.f64 -2 (*.f64 (pow.f64 (cos.f64 v) 5) (-.f64 (/.f64 4 (pow.f64 (cos.f64 v) 7)) (fma.f64 5 (/.f64 (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4)) (pow.f64 (cos.f64 v) 11)) (neg.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 4 2)) (pow.f64 (cos.f64 v) 9)))))) (neg.f64 (/.f64 25 (pow.f64 (cos.f64 v) 2)))))))) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (neg.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))) (*.f64 5 (log.f64 (/.f64 -1 e))))) e))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (+.f64 (*.f64 5/162 (/.f64 (-.f64 (*.f64 -2 (*.f64 (pow.f64 (cos.f64 v) 5) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (cos.f64 v) 7))) (+.f64 (*.f64 5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (pow.f64 (cos.f64 v) 9))))))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2)))) (cos.f64 v))) (+.f64 (*.f64 1/54 (+.f64 (*.f64 6 (*.f64 (+.f64 (*.f64 10 (/.f64 1 (pow.f64 (cos.f64 v) 8))) (+.f64 (*.f64 5 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (cos.f64 v))) (*.f64 -4 (pow.f64 (cos.f64 v) 3))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (cos.f64 v) 7))) (+.f64 (*.f64 5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (pow.f64 (cos.f64 v) 9)))))) (pow.f64 (cos.f64 v) 5))))) (pow.f64 (cos.f64 v) 5))) (+.f64 (*.f64 250 (/.f64 1 (pow.f64 (cos.f64 v) 3))) (*.f64 30 (*.f64 (pow.f64 (cos.f64 v) 4) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (cos.f64 v) 7))) (+.f64 (*.f64 5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (pow.f64 (cos.f64 v) 9)))))))))) (*.f64 125/4374 (/.f64 1 (pow.f64 (cos.f64 v) 3))))))) (pow.f64 e 2))) (+.f64 (*.f64 -5/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (sin.f64 v)) (cos.f64 v))) (+.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) (+.f64 (*.f64 25/162 (/.f64 1 (pow.f64 (cos.f64 v) 2))) (*.f64 1/18 (-.f64 (*.f64 -2 (*.f64 (pow.f64 (cos.f64 v) 5) (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (cos.f64 v) 7))) (+.f64 (*.f64 5 (/.f64 (+.f64 (pow.f64 (cos.f64 v) 4) (*.f64 4 (pow.f64 (cos.f64 v) 4))) (pow.f64 (cos.f64 v) 11))) (*.f64 -1 (/.f64 (+.f64 (*.f64 4 (pow.f64 (cos.f64 v) 2)) (*.f64 2 (pow.f64 (cos.f64 v) 2))) (pow.f64 (cos.f64 v) 9))))))) (*.f64 25 (/.f64 1 (pow.f64 (cos.f64 v) 2)))))))) e) (*.f64 (sin.f64 v) (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (/.f64 -1 (pow.f64 (cos.f64 v) 5))) (*.f64 5 (log.f64 (/.f64 -1 e)))))) e)))))","(+.f64 (neg.f64 (/.f64 (*.f64 (sin.f64 v) (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (neg.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))) (*.f64 5 (log.f64 (/.f64 -1 e))))) (fma.f64 5/162 (/.f64 (fma.f64 -2 (*.f64 (pow.f64 (cos.f64 v) 5) (-.f64 (/.f64 4 (pow.f64 (cos.f64 v) 7)) (fma.f64 5 (/.f64 (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4)) (pow.f64 (cos.f64 v) 11)) (neg.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 4 2)) (pow.f64 (cos.f64 v) 9)))))) (neg.f64 (/.f64 25 (pow.f64 (cos.f64 v) 2)))) (cos.f64 v)) (fma.f64 1/54 (fma.f64 6 (*.f64 (+.f64 (/.f64 10 (pow.f64 (cos.f64 v) 8)) (fma.f64 5 (/.f64 (+.f64 (neg.f64 (*.f64 (cos.f64 v) (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 4 2)))) (*.f64 -4 (pow.f64 (cos.f64 v) 3))) (pow.f64 (cos.f64 v) 11)) (neg.f64 (/.f64 (*.f64 (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4)) (-.f64 (/.f64 4 (pow.f64 (cos.f64 v) 7)) (fma.f64 5 (/.f64 (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4)) (pow.f64 (cos.f64 v) 11)) (neg.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 4 2)) (pow.f64 (cos.f64 v) 9)))))) (pow.f64 (cos.f64 v) 5))))) (pow.f64 (cos.f64 v) 5)) (fma.f64 250 (pow.f64 (cos.f64 v) (neg.f64 3)) (*.f64 30 (*.f64 (pow.f64 (cos.f64 v) 4) (-.f64 (/.f64 4 (pow.f64 (cos.f64 v) 7)) (fma.f64 5 (/.f64 (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4)) (pow.f64 (cos.f64 v) 11)) (neg.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 4 2)) (pow.f64 (cos.f64 v) 9))))))))) (/.f64 125/4374 (pow.f64 (cos.f64 v) 3)))))) (*.f64 e e))) (fma.f64 -5/9 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (neg.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))) (*.f64 5 (log.f64 (/.f64 -1 e))))) (sin.f64 v)) (cos.f64 v)) (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (neg.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))) (*.f64 5 (log.f64 (/.f64 -1 e))))) (*.f64 (sin.f64 v) (fma.f64 25/162 (pow.f64 (cos.f64 v) (neg.f64 2)) (*.f64 1/18 (fma.f64 -2 (*.f64 (pow.f64 (cos.f64 v) 5) (-.f64 (/.f64 4 (pow.f64 (cos.f64 v) 7)) (fma.f64 5 (/.f64 (*.f64 (+.f64 4 1) (pow.f64 (cos.f64 v) 4)) (pow.f64 (cos.f64 v) 11)) (neg.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (+.f64 4 2)) (pow.f64 (cos.f64 v) 9)))))) (neg.f64 (/.f64 25 (pow.f64 (cos.f64 v) 2)))))))) e) (*.f64 (sin.f64 v) (*.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 (neg.f64 (pow.f64 (cos.f64 v) (neg.f64 5)))) (*.f64 5 (log.f64 (/.f64 -1 e))))) e)))))"]],"time":126.73095703125,"type":"simplify"},{"compiler":[[15464,10487]],"time":171.05615234375,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3) (/.f64 (*.f64 (fma.f64 -1/6 (*.f64 (pow.f64 v 3) e) (*.f64 v e)) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))","fresh",32.36528080802875],["(*.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3) (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))","done",0.13671875],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)","next",0.5964878051370305],["(*.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))","fresh",32.139447033546425],["(/.f64 (*.f64 (*.f64 e (cbrt.f64 (sin.f64 v))) (pow.f64 (sin.f64 v) 2/3)) (fma.f64 e (cos.f64 v) 1))","fresh",32.15493890769409]],"compiler":[[38,26],[32,22],[15,11],[34,22],[18,12],[38,26],[15,11],[34,22],[18,12]],"count":[[250,5]],"kept":[{"done":[0,0],"fresh":[4,3],"new":[245,1],"picked":[1,1]}],"min-error":[0.05078125],"time":94.40087890625,"type":"prune"},{"compiler":[[53,22]],"locations":[["(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))",0.03125,false],["(*.f64 e (sin.f64 v))",0.1171875,false],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)",0.5590401856003985,true],["(cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))",11.526436241088959,true]],"time":12.839111328125,"type":"localize"},{"count":[[2,32]],"series":[["(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)","v","-inf",0.702880859375],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)","v","inf",0.772216796875],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)","v","0",2.447998046875],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)","e","-inf",3.2919921875],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)","e","inf",3.27197265625],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)","e","0",1.947998046875],["(cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))","v","-inf",1.169921875],["(cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))","v","inf",1.194091796875],["(cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))","v","0",1.131103515625],["(cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))","e","-inf",1.947998046875],["(cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))","e","inf",1.31689453125],["(cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))","e","0",0.991943359375]],"time":20.56689453125,"type":"series"},{"count":[[2,106]],"inputs":[["(cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))","(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) (*.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 0) (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) (*.f64 0 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v))) (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (/.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 v)) (cbrt.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 e) (cbrt.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 4/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 e (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (/.f64 (sin.f64 v) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 e (sin.f64 v))) (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3) (cbrt.f64 (*.f64 e (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 e (sin.f64 v)))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3)) (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3)) (cbrt.f64 (cbrt.f64 (*.f64 e (sin.f64 v))))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 e (sin.f64 v)))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v))) 1) (*.f64 (cbrt.f64 (-.f64 -1 (*.f64 e (cos.f64 v)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 e (sin.f64 v))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v))) (cbrt.f64 (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v))) 1) (cbrt.f64 (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (*.f64 e (sin.f64 v))) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) (*.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 0) (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) (*.f64 0 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 -1 (*.f64 e (cos.f64 v)))) (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 e (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (pow.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 e) (sin.f64 v)) (/.f64 -1 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 e (sin.f64 v))) (/.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 e (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 (sin.f64 v) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (/.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 v) (/.f64 e (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 e (sin.f64 v)) (/.f64 1 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3) (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 e (cos.f64 v) 1)) (*.f64 e (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 7/3) (cbrt.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 4/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3) (/.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)) (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (fma.f64 e (cos.f64 v) 1)) e)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 e (cos.f64 v) 1)) (*.f64 (neg.f64 e) (sin.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 v) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)) (/.f64 e (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 e (fma.f64 e (cos.f64 v) 1)) (sin.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)) (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 4/3) 2) (cbrt.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (fma.f64 e (cos.f64 v) 1)) (cbrt.f64 (*.f64 e (sin.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 e (sin.f64 v)))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 4/3) 2)) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 e) (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3) (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v)))) (cbrt.f64 (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -1/3) (*.f64 e (sin.f64 v))) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) (pow.f64 (*.f64 e (sin.f64 v)) 2/3)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) (/.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) e) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 e (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v))) (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 2/3)) (cbrt.f64 (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)) 1) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 1) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 e (/.f64 (sin.f64 v) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 v) (/.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (neg.f64 e) (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 1) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 e (sin.f64 v)) -1) (-.f64 -1 (*.f64 e (cos.f64 v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)) 1) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 e (sin.f64 v))) (/.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v))) (/.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (*.f64 (neg.f64 e) (sin.f64 v)))) (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (*.f64 e (sin.f64 v)) 2/3) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (*.f64 e (sin.f64 v)))) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 e (sin.f64 v)) (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))) (neg.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 e (sin.f64 v)) (-.f64 -1 (*.f64 e (cos.f64 v)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1)) 3))))))"]],"rules":[["egg-rr",70],["egg-rr",36]],"time":30.900146484375,"type":"rewrite"},{"count":[[138,139]],"inputs":[["(pow.f64 (/.f64 (sin.f64 v) (cos.f64 v)) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/9) (/.f64 1 e))) (pow.f64 (/.f64 (sin.f64 v) (cos.f64 v)) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9))) (pow.f64 e 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/9) (/.f64 1 e))) (pow.f64 (/.f64 (sin.f64 v) (cos.f64 v)) 1/3)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3) (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3)) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) 1) (pow.f64 (cos.f64 v) 13)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)) (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)))))))) (pow.f64 e 3)))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9))) (pow.f64 e 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/9) (/.f64 1 e))) (pow.f64 (/.f64 (sin.f64 v) (cos.f64 v)) 1/3))))","(*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) (/.f64 1 e)))) (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) (/.f64 1 e)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3) (/.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (cbrt.f64 -1) (pow.f64 e 2))))) (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (pow.f64 (cbrt.f64 -1) 2))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3) (/.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 13)) 1/9) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))))) (*.f64 (cbrt.f64 -1) (pow.f64 e 3))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) (/.f64 1 e)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3) (/.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (cbrt.f64 -1) (pow.f64 e 2))))) (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))))","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(*.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (pow.f64 1 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e))) (+.f64 (*.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (pow.f64 1 1/3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e)))))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) 1) (pow.f64 (cos.f64 v) 32)) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)))))) (pow.f64 e 2))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)) (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)))) (pow.f64 e 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e))) (+.f64 (*.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (pow.f64 1 1/3)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 1 (pow.f64 e 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e))))))))","(+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)) (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)))) (pow.f64 e 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (/.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (pow.f64 (cos.f64 v) 10)) 1/9) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9))))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3)) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) 1) (pow.f64 (cos.f64 v) 13)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)) (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))))))))))) (pow.f64 e 3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/9) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) 1) (pow.f64 (cos.f64 v) 32)) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)))))) (pow.f64 e 3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) 1) (pow.f64 (cos.f64 v) 13)) 1/9) (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)) (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)))) (pow.f64 e 3)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) 1) (pow.f64 (cos.f64 v) 32)) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)))))) (pow.f64 e 2))) (+.f64 (*.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (pow.f64 1 1/3)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 1 (pow.f64 e 2)))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3)) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) 1) (pow.f64 (cos.f64 v) 13)) 1/9) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9))))))) (pow.f64 e 3)))))))))))))","(*.f64 (/.f64 (*.f64 (sin.f64 v) (pow.f64 (cbrt.f64 -1) 6)) (cos.f64 v)) (pow.f64 1 1/3))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3)))) e)) (*.f64 (/.f64 (*.f64 (sin.f64 v) (pow.f64 (cbrt.f64 -1) 6)) (cos.f64 v)) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3)))) e)) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1)))))) (pow.f64 e 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3) (/.f64 1 (pow.f64 e 2))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 e 2)))) (*.f64 (/.f64 (*.f64 (sin.f64 v) (pow.f64 (cbrt.f64 -1) 6)) (cos.f64 v)) (pow.f64 1 1/3))))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3)))) e)) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1)))))) (pow.f64 e 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3) (/.f64 1 (pow.f64 e 2))))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1)))))))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 10)) 1/9) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 13)) 1/9) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))))))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 13)) 1/9) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 13)) 1/9) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))))))) (pow.f64 e 3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 e 2)))) (*.f64 (/.f64 (*.f64 (sin.f64 v) (pow.f64 (cbrt.f64 -1) 6)) (cos.f64 v)) (pow.f64 1 1/3)))))))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (/.f64 (sin.f64 v) (cos.f64 v)) 1/3)","(cbrt.f64 (tan.f64 v))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/9) (/.f64 1 e))) (pow.f64 (/.f64 (sin.f64 v) (cos.f64 v)) 1/3))","(fma.f64 -1/3 (/.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16)) 1/9) e) (cbrt.f64 (tan.f64 v)))","(+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9))) (pow.f64 e 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/9) (/.f64 1 e))) (pow.f64 (/.f64 (sin.f64 v) (cos.f64 v)) 1/3)))","(+.f64 (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3)))) (cbrt.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 (sin.f64 v) -2)))) (pow.f64 e -2)) (/.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16)) 1/9) e))) (cbrt.f64 (tan.f64 v)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3) (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3)) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) 1) (pow.f64 (cos.f64 v) 13)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)) (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)))))))) (pow.f64 e 3)))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9))) (pow.f64 e 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/9) (/.f64 1 e))) (pow.f64 (/.f64 (sin.f64 v) (cos.f64 v)) 1/3))))","(fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 (sin.f64 v) -2))) (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16))) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (*.f64 (*.f64 2/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 (cos.f64 v) 13)) 1/9)) (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3)))))))) (pow.f64 e 3)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 (*.f64 (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3)))) (cbrt.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 (sin.f64 v) -2)))) (pow.f64 e -2)) (/.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16)) 1/9) e))) (cbrt.f64 (tan.f64 v))))","(*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(cbrt.f64 (tan.f64 v))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) (/.f64 1 e)))) (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))","(fma.f64 1/3 (/.f64 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16)) 1/9)) e) (cbrt.f64 (tan.f64 v)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) (/.f64 1 e)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3) (/.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (cbrt.f64 -1) (pow.f64 e 2))))) (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (pow.f64 (cbrt.f64 -1) 2))))","(fma.f64 1/3 (/.f64 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16)) 1/9)) e) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 (sin.f64 v) -2))) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9))))) (neg.f64 (pow.f64 e -2))) (cbrt.f64 (tan.f64 v))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3) (/.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 13)) 1/9) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))))) (*.f64 (cbrt.f64 -1) (pow.f64 e 3))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) (/.f64 1 e)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (cos.f64 v) 2) 1) (pow.f64 (sin.f64 v) 2)) 1/3) (/.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (*.f64 (cbrt.f64 -1) (pow.f64 e 2))))) (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))))","(+.f64 (*.f64 1/3 (+.f64 (/.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 (sin.f64 v) -2))) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16))) (*.f64 2/3 (neg.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 (cos.f64 v) 13)) 1/9) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9)))))))))) (neg.f64 (pow.f64 e 3))) (/.f64 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16)) 1/9)) e))) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (cos.f64 v) 2) (pow.f64 (sin.f64 v) -2))) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9))))) (neg.f64 (pow.f64 e -2))) (cbrt.f64 (tan.f64 v))))","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(cbrt.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))))","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(cbrt.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))))","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(cbrt.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))))","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(cbrt.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))))","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(cbrt.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))))","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(cbrt.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))))","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(cbrt.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))))","(pow.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) 1/3)","(cbrt.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))))","(*.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (pow.f64 1 1/3))","(tan.f64 v)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e))) (+.f64 (*.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (pow.f64 1 1/3)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e)))))","(-.f64 (tan.f64 v) (/.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 (cos.f64 v) 22)) 1/9) e))","(+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) 1) (pow.f64 (cos.f64 v) 32)) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)))))) (pow.f64 e 2))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)) (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)))) (pow.f64 e 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e))) (+.f64 (*.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (pow.f64 1 1/3)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 1 (pow.f64 e 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e))))))))","(fma.f64 (cbrt.f64 (tan.f64 v)) (*.f64 (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 (cos.f64 v) 32)) 1/9) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 (cos.f64 v) (sin.f64 v)))) (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3)))))) (pow.f64 e -2)) (fma.f64 -1/3 (*.f64 (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3)))) (pow.f64 e -2)) (+.f64 (-.f64 (tan.f64 v) (/.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 (cos.f64 v) 22)) 1/9) e)) (/.f64 (*.f64 2/9 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9)) (*.f64 e e)))))","(+.f64 (*.f64 -1/3 (*.f64 (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)) (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)))) (pow.f64 e 2)) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (/.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (pow.f64 (cos.f64 v) 10)) 1/9) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9))))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3)) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) 1) (pow.f64 (cos.f64 v) 13)) 1/9) (+.f64 (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)) (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))))))))))) (pow.f64 e 3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/9) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) 1) (pow.f64 (cos.f64 v) 32)) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)))))) (pow.f64 e 3)))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) 1) (pow.f64 (cos.f64 v) 13)) 1/9) (/.f64 (+.f64 (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)) (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)))) (pow.f64 e 3)))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) 1) (pow.f64 (cos.f64 v) 22)) 1/9) (/.f64 1 e))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (/.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) 1) (pow.f64 (cos.f64 v) 32)) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9)))))) (pow.f64 e 2))) (+.f64 (*.f64 (/.f64 (sin.f64 v) (cos.f64 v)) (pow.f64 1 1/3)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 1 (pow.f64 e 2)))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3)) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) 1) (pow.f64 (cos.f64 v) 13)) 1/9) (+.f64 (*.f64 -1 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) 1) (pow.f64 (cos.f64 v) 35)) 1/9))))))) (pow.f64 e 3)))))))))))))","(+.f64 (*.f64 -1/3 (+.f64 (*.f64 (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3)))) (pow.f64 e -2)) (/.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 (cos.f64 v) 22)) 1/9) e))) (fma.f64 (cbrt.f64 (tan.f64 v)) (/.f64 (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 10)) 1/9) (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3))))) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (cos.f64 v) (sin.f64 v))) (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16))) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (*.f64 (*.f64 2/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 (cos.f64 v) 13)) 1/9)) (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3)))))))))) (pow.f64 e 3)) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16)) 1/9) (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 (cos.f64 v) 32)) 1/9) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 (cos.f64 v) (sin.f64 v)))) (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3))))))) (pow.f64 e 3)) (fma.f64 2/9 (/.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 (cos.f64 v) 13)) 1/9) (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3))))) (pow.f64 e 3)) (fma.f64 -2/3 (/.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 (cos.f64 v) 22)) 1/9) e) (fma.f64 (cbrt.f64 (tan.f64 v)) (*.f64 (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 (cos.f64 v) 32)) 1/9) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 (cos.f64 v) (sin.f64 v)))) (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3)))))) (pow.f64 e -2)) (+.f64 (tan.f64 v) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 e -2)) (/.f64 (*.f64 -1/3 (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16))) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (*.f64 (*.f64 2/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 (cos.f64 v) 13)) 1/9)) (fma.f64 1/3 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (/.f64 (sin.f64 v) (neg.f64 (pow.f64 (cos.f64 v) 3)))))))) (pow.f64 e 3))))))))))","(*.f64 (/.f64 (*.f64 (sin.f64 v) (pow.f64 (cbrt.f64 -1) 6)) (cos.f64 v)) (pow.f64 1 1/3))","(tan.f64 v)","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3)))) e)) (*.f64 (/.f64 (*.f64 (sin.f64 v) (pow.f64 (cbrt.f64 -1) 6)) (cos.f64 v)) (pow.f64 1 1/3)))","(-.f64 (tan.f64 v) (/.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 (cos.f64 v) 22)) 1/9) e))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3)))) e)) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1)))))) (pow.f64 e 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3) (/.f64 1 (pow.f64 e 2))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 e 2)))) (*.f64 (/.f64 (*.f64 (sin.f64 v) (pow.f64 (cbrt.f64 -1) 6)) (cos.f64 v)) (pow.f64 1 1/3))))))","(-.f64 (fma.f64 (cbrt.f64 (tan.f64 v)) (*.f64 (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 (cos.f64 v) 32)) 1/9) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (cos.f64 v) (sin.f64 v))) (neg.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9)))))))) (pow.f64 e -2)) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 e -2)) (fma.f64 1/3 (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9)))) (pow.f64 e -2)) (tan.f64 v)))) (/.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 (cos.f64 v) 22)) 1/9) e))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 22)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 13) 1/3)))) e)) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1)))))) (pow.f64 e 2))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 -1) 8) 1/3) (/.f64 1 (pow.f64 e 2))))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 16)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 32)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 2) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (cbrt.f64 -1)))))))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) 1) (cos.f64 v)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 v) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 10)) 1/9) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (cos.f64 v) 1) (sin.f64 v)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 13)) 1/9) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))))))))) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 7) 1) (pow.f64 (cos.f64 v) 16)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 13)) 1/9) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 13)) 1/9) (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))))))) (pow.f64 e 3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (/.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 1 4)) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) (pow.f64 e 2)))) (*.f64 (/.f64 (*.f64 (sin.f64 v) (pow.f64 (cbrt.f64 -1) 6)) (cos.f64 v)) (pow.f64 1 1/3)))))))","(-.f64 (fma.f64 (cbrt.f64 (tan.f64 v)) (*.f64 (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 (cos.f64 v) 32)) 1/9) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (cos.f64 v) (sin.f64 v))) (neg.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9)))))))) (pow.f64 e -2)) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9) (pow.f64 e -2)) (-.f64 (fma.f64 1/3 (*.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9)))) (pow.f64 e -2)) (tan.f64 v)) (/.f64 (fma.f64 -1/3 (*.f64 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16)) 1/9)) (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 14) (pow.f64 (cos.f64 v) 32)) 1/9) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (cos.f64 v) (sin.f64 v))) (neg.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9))))))))) (fma.f64 (cbrt.f64 (tan.f64 v)) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 10)) 1/9) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9))))) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 (cos.f64 v) (sin.f64 v)))) (neg.f64 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16))) (*.f64 2/3 (neg.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 (cos.f64 v) 13)) 1/9) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9)))))))))))) (fma.f64 1/3 (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 4)) (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 (sin.f64 v) 7) (pow.f64 (cos.f64 v) 16))) (*.f64 2/3 (neg.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 (cos.f64 v) 13)) 1/9) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9))))))))) (*.f64 (*.f64 2/9 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 4) (pow.f64 (cos.f64 v) 13)) 1/9)) (+.f64 (/.f64 (sin.f64 v) (pow.f64 (cos.f64 v) 3)) (*.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 17) (pow.f64 (cos.f64 v) 35)) 1/9)))))))) (pow.f64 e 3))))) (/.f64 (pow.f64 (/.f64 (pow.f64 (sin.f64 v) 13) (pow.f64 (cos.f64 v) 22)) 1/9) e))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))","(*.f64 (/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e))) (pow.f64 1 1/3))","(/.f64 (*.f64 (sin.f64 v) e) (+.f64 1 (*.f64 (cos.f64 v) e)))"]],"time":168.056884765625,"type":"simplify"},{"compiler":[[8842,5358]],"time":98.22802734375,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3) (/.f64 (*.f64 (fma.f64 -1/6 (*.f64 (pow.f64 v 3) e) (*.f64 v e)) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))","fresh",32.36528080802875],["(*.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3) (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))","done",0.13671875],["(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)","done",0.5964878051370305],["(*.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))","fresh",32.139447033546425],["(/.f64 (*.f64 (*.f64 e (cbrt.f64 (sin.f64 v))) (pow.f64 (sin.f64 v) 2/3)) (fma.f64 e (cos.f64 v) 1))","fresh",32.15493890769409]],"compiler":[[38,26],[32,22],[15,11],[34,22],[18,12]],"count":[[259,5]],"kept":[{"done":[1,1],"fresh":[3,3],"new":[254,0],"picked":[1,1]}],"min-error":[0.05078125],"time":65.178955078125,"type":"prune"},{"accuracy":[0.13671875],"baseline":[0.13671875],"branch":[["e",0.13671875,1],["v",0.13671875,1],["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))",0.13671875,1]],"compiler":[[3,2],[3,2],[13,9],[233,129]],"count":[[11,1]],"inputs":[["(*.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3) (/.f64 (*.f64 (fma.f64 -1/6 (*.f64 (pow.f64 v 3) e) (*.f64 v e)) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))","(*.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3) (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))","(*.f64 (*.f64 (pow.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) 2/3) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))))","(*.f64 (/.f64 (sin.f64 v) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (*.f64 e (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3)))","(/.f64 (*.f64 (cbrt.f64 (sin.f64 v)) (*.f64 (pow.f64 (sin.f64 v) 2/3) e)) (fma.f64 e (cos.f64 v) 1))","(/.f64 (*.f64 (*.f64 e (cbrt.f64 (sin.f64 v))) (pow.f64 (sin.f64 v) 2/3)) (fma.f64 e (cos.f64 v) 1))","(/.f64 (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 v 3) e)) (*.f64 v e)) (fma.f64 e (cos.f64 v) 1))","(pow.f64 (cbrt.f64 (/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))) 3)","(/.f64 (/.f64 (/.f64 (*.f64 e (sin.f64 v)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3))) (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) 2/3) 2)))","(/.f64 (*.f64 e (sin.f64 v)) (fma.f64 e (cos.f64 v) 1))","(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))"]],"link":["."],"name":["Trigonometry A"],"oracle":[49.97712723309508],"outputs":[["(*.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3) (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))"]],"time":17.320068359375,"times":[["e",4.552001953125],["v",4.64501953125],["(/.f64 (*.f64 e (sin.f64 v)) (+.f64 1 (*.f64 e (cos.f64 v))))",4.208984375]],"type":"regimes"},{"compiler":[[32,22]],"inputs":[["(*.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3) (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) 2/3) (/.f64 (*.f64 (*.f64 (sin.f64 v) e) (cbrt.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3))) (cbrt.f64 (fma.f64 e (cos.f64 v) 1))))","(/.f64 (*.f64 (pow.f64 (fma.f64 e (cos.f64 v) 1) -2/3) (*.f64 (sin.f64 v) e)) (cbrt.f64 (fma.f64 e (cos.f64 v) 1)))"]],"stop":[["fuel",1]],"time":20.7099609375,"type":"simplify"},{"time":0.051025390625,"type":"soundness"},{"compiler":[[32,22]],"remove-preprocessing":[[]],"time":15.592041015625,"type":"end"}]