[{"compiler":[[8,5]],"method":["search"],"sampling":[[12,0.7024385221302509,0.11804869608022273,0.17951278178952634],[11,0.6868287771940231,0.1463413587771356,0.16682986402884126],[10,0.6556092873215675,0.22243886534124613,0.12195184733718634],[9,0.6243897974491119,0.2731705363839865,0.10243966616690159],[8,0.5619508177042007,0.39024362340569496,0.047805558890104294],[7,0.49951183795928955,0.46829234808683395,0.032195813953876495],[6,0.37463387846946716,0.6243897974491119,0.0009763240814208984],[5,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":24.698974609375,"type":"analyze"},{"outcomes":[["body",256,"invalid",25.2529296875,803],["body",256,"valid",261.190185546875,8256]],"time":294.68212890625,"type":"sample"},{"compiler":[[7,4]],"inputs":[["0","1"],["(/.f64 x (*.f64 y y))","(/.f64 y (*.f64 x x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 x (*.f64 y y))","(/.f64 (/.f64 x y) y)","(/.f64 y (*.f64 x x))","(/.f64 (/.f64 y x) x)"]],"symmetry":[[]],"time":57.594970703125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 x (*.f64 y y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (*.f64 y y))","(/.f64 (/.f64 x y) y)"]],"time":36.35791015625,"type":"simplify"},{"compiler":[[12,6]],"time":0.2861328125,"type":"eval"},{"alts":[["(/.f64 (/.f64 x y) y)","next",0.17578125],["(/.f64 x (*.f64 y y))","fresh",8.857365164819884]],"compiler":[[7,4],[7,4],[7,4],[7,4]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.10546875],"time":2.245849609375,"type":"prune"},{"compiler":[[12,4]],"locations":[["(/.f64 (/.f64 x y) y)",0.17578125,true]],"time":2.6591796875,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (/.f64 x y) y)","y","-inf",0.196044921875],["(/.f64 (/.f64 x y) y)","y","inf",0.298095703125],["(/.f64 (/.f64 x y) y)","y","0",0.678955078125],["(/.f64 (/.f64 x y) y)","x","-inf",0.385009765625],["(/.f64 (/.f64 x y) y)","x","inf",0.606201171875],["(/.f64 (/.f64 x y) y)","x","0",0.6328125]],"time":2.872802734375,"type":"series"},{"count":[[1,119]],"inputs":[["(/.f64 (/.f64 x y) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (*.f64 y y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x (*.f64 y y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x y)) (/.f64 (pow.f64 (/.f64 x y) 2/3) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x y) 2/3) y) (cbrt.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x y)) (/.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 y)) (/.f64 (pow.f64 (cbrt.f64 y) -4) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 y -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x y) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1/3) (*.f64 (/.f64 x y) (pow.f64 y -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -2) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) -4) (cbrt.f64 y)) (/.f64 x (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 y) (neg.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x y) (pow.f64 y -2/3)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (neg.f64 (pow.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x (*.f64 y y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (cbrt.f64 y)) (/.f64 1 (*.f64 (neg.f64 y) (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 x y))) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (neg.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (neg.f64 (/.f64 x y)))) (neg.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (neg.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 y (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y -1/3) x) (/.f64 1 (pow.f64 y (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 x y)) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (/.f64 (pow.f64 (cbrt.f64 y) -4) (cbrt.f64 y))) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x y))) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (*.f64 y (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y -1/3) (/.f64 x y)) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (cbrt.f64 y)) y) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 y) (/.f64 x (cbrt.f64 y))) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x y) 2/3)) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 y 2/3))) (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y -1/3) (neg.f64 x)) (/.f64 1 (*.f64 (pow.f64 y 2/3) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (cbrt.f64 y)) -1) (/.f64 1 (*.f64 (pow.f64 y 2/3) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y -1/3) (/.f64 x (cbrt.f64 y))) (/.f64 1 (pow.f64 (cbrt.f64 y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 y -2/3)) (/.f64 1 (pow.f64 (cbrt.f64 y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (+.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (*.f64 0 (cbrt.f64 (neg.f64 (/.f64 x (*.f64 y y))))))) (cbrt.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x y) (cbrt.f64 (neg.f64 y))) (neg.f64 (pow.f64 y -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 y -1/3) x)) (neg.f64 (pow.f64 y (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x y)) (pow.f64 (/.f64 x (*.f64 y y)) 2/3))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x (/.f64 (pow.f64 (cbrt.f64 y) -4) (cbrt.f64 y)))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x y)))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 y 2/3)))) (neg.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 y -1/3) (neg.f64 x))) (neg.f64 (*.f64 (pow.f64 y 2/3) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 x (cbrt.f64 y)) -1)) (neg.f64 (*.f64 (pow.f64 y 2/3) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 y -1/3) (/.f64 x (cbrt.f64 y)))) (neg.f64 (pow.f64 (cbrt.f64 y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (pow.f64 y -2/3)) (neg.f64 (pow.f64 (cbrt.f64 y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (/.f64 (/.f64 x y) (cbrt.f64 y)))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (neg.f64 (/.f64 x y)) (pow.f64 (/.f64 x (*.f64 y y)) 2))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (neg.f64 (/.f64 x y)))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (pow.f64 (/.f64 x (*.f64 y y)) 2))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 y)) -1) (*.f64 (pow.f64 y 2/3) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y -1/3) x) (pow.f64 y (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y -1/3) (neg.f64 x)) (*.f64 (pow.f64 y 2/3) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x y) 2/3)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y) (/.f64 x (cbrt.f64 y))) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y -1/3) (/.f64 x y)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 y)) y) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (pow.f64 (cbrt.f64 y) -4) (cbrt.f64 y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x y)) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x y) (pow.f64 y -2/3)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 y)) (*.f64 (neg.f64 y) (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (pow.f64 y -2/3)) (pow.f64 (cbrt.f64 y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 y)) (pow.f64 y (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y -1/3) (/.f64 x (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x y) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (neg.f64 (/.f64 x y)))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 x y))) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x y) (cbrt.f64 (neg.f64 y))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 y 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 y)) (*.f64 y (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 y)) (*.f64 1 (*.f64 (neg.f64 y) (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 y)) (*.f64 1 (pow.f64 y (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y -1/3) x) (*.f64 1 (pow.f64 y (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 y)) (*.f64 1 (*.f64 y (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y -1/3) (neg.f64 x)) (*.f64 1 (*.f64 (pow.f64 y 2/3) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 y)) -1) (*.f64 1 (*.f64 (pow.f64 y 2/3) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y -1/3) (/.f64 x (cbrt.f64 y))) (*.f64 1 (pow.f64 (cbrt.f64 y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (pow.f64 y -2/3)) (*.f64 1 (pow.f64 (cbrt.f64 y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (*.f64 y y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 y)) (neg.f64 (*.f64 (neg.f64 y) (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 x y))) (pow.f64 (/.f64 x (*.f64 y y)) 2/3))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (neg.f64 (/.f64 x y))))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 (/.f64 x y) 2/3) y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 y)) (neg.f64 (pow.f64 y (+.f64 2/3 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 x y)) (pow.f64 y -2/3)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 y)) (neg.f64 (*.f64 y (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 y -1/3) (/.f64 x y))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 x (cbrt.f64 y)) y)) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 1 y) (/.f64 x (cbrt.f64 y)))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x y) 2/3))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) x)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (/.f64 x y) (pow.f64 (/.f64 x (*.f64 y y)) 2))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (/.f64 x y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (neg.f64 x))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (neg.f64 x) (pow.f64 (/.f64 x (*.f64 y y)) 2))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 x (pow.f64 (/.f64 x (*.f64 y y)) 2))) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (*.f64 y y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 y y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (*.f64 y y)) 3))))))"]],"rules":[["egg-rr",119]],"time":42.403076171875,"type":"rewrite"},{"count":[[143,120]],"inputs":[["(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)"]],"time":102.590087890625,"type":"simplify"},{"compiler":[[1498,656]],"time":15.076904296875,"type":"eval"},{"alts":[["(*.f64 (/.f64 (pow.f64 (cbrt.f64 y) -4) (cbrt.f64 y)) (/.f64 x (cbrt.f64 y)))","fresh",6.112153434115738],["(*.f64 (pow.f64 y -2) x)","fresh",8.920751142782125],["(*.f64 (/.f64 1 y) (/.f64 x y))","next",0.25619125976844204],["(/.f64 (/.f64 x y) y)","done",0.17578125],["(/.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (cbrt.f64 y))","fresh",30.84773736956332],["(/.f64 (/.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 y 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4))","fresh",32.676785904794635],["(/.f64 x (*.f64 y y))","fresh",8.857365164819884],["(pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) 3)","fresh",9.105537783361584]],"compiler":[[14,8],[7,5],[9,6],[7,4],[15,10],[19,13],[7,4],[10,7],[14,8],[7,5],[9,6],[15,10],[19,13],[7,4],[10,7]],"count":[[122,8]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[120,7],"picked":[1,1]}],"min-error":[0.03515625],"time":23.9599609375,"type":"prune"},{"compiler":[[18,9]],"locations":[["(*.f64 (/.f64 1 y) (/.f64 x y))",0.25619125976844204,true]],"time":4.066162109375,"type":"localize"},{"count":[[1,24]],"series":[["(*.f64 (/.f64 1 y) (/.f64 x y))","x","-inf",0.14794921875],["(*.f64 (/.f64 1 y) (/.f64 x y))","x","inf",0.1650390625],["(*.f64 (/.f64 1 y) (/.f64 x y))","x","0",0.14208984375],["(*.f64 (/.f64 1 y) (/.f64 x y))","y","-inf",0.153076171875],["(*.f64 (/.f64 1 y) (/.f64 x y))","y","inf",0.173828125],["(*.f64 (/.f64 1 y) (/.f64 x y))","y","0",0.18017578125]],"time":1.02978515625,"type":"series"},{"count":[[1,103]],"inputs":[["(*.f64 (/.f64 1 y) (/.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (*.f64 y y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x (*.f64 y y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) y) (/.f64 (pow.f64 x 2/3) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 x y)) y) (pow.f64 (/.f64 x y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) y) (/.f64 (cbrt.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x y) 2/3) (/.f64 (cbrt.f64 (/.f64 x y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x y)) (/.f64 (pow.f64 (/.f64 x y) 2/3) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 y)) (/.f64 (pow.f64 y -4/3) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x y) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1/3) (*.f64 (pow.f64 y -2/3) (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x y) 2/3) y) (cbrt.f64 (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y -4/3) (cbrt.f64 y)) (/.f64 x (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -2/3) (/.f64 (/.f64 x y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y -2/3) (/.f64 x y)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (neg.f64 (pow.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x y)) (/.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x (*.f64 y y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 y -4/3)) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y -4/3) x) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 y) (/.f64 x (cbrt.f64 y))) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x y) 2/3)) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 x)) (pow.f64 y -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 y) (*.f64 (pow.f64 y -2/3) x)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x y))) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (/.f64 (pow.f64 y -4/3) (cbrt.f64 y))) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 x y)) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 y 2/3))) (/.f64 1 (cbrt.f64 (pow.f64 y 4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y -2/3) x) (pow.f64 y -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (/.f64 x y)) (pow.f64 y -2/3)) (neg.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (neg.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -4/3) (*.f64 (pow.f64 y -2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 y -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -2) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (/.f64 x y)) (cbrt.f64 y)) (neg.f64 (pow.f64 y -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (/.f64 x y)) (pow.f64 y -2/3)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 1 y) (*.f64 (pow.f64 y -2/3) x))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x y)))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x (/.f64 (pow.f64 y -4/3) (cbrt.f64 y)))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x y)) (pow.f64 (/.f64 x (*.f64 y y)) 2/3))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 y 2/3)))) (neg.f64 (cbrt.f64 (pow.f64 y 4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (/.f64 (/.f64 x y) (cbrt.f64 y)))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (neg.f64 (/.f64 x y)))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (pow.f64 (/.f64 x (*.f64 y y)) 2))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (neg.f64 (/.f64 x y)) (pow.f64 (/.f64 x (*.f64 y y)) 2))) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 x)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y -4/3) x) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y) (/.f64 x (cbrt.f64 y))) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x y) 2/3)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 y 2/3))) (cbrt.f64 (pow.f64 y 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x y) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x y)) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 y) (*.f64 (pow.f64 y -2/3) x)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x y)) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y -2/3) (/.f64 x y)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (pow.f64 y -4/3) (cbrt.f64 y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 5))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (pow.f64 y -4/3)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y -2/3) x) (pow.f64 y 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (/.f64 x y)) (cbrt.f64 y)) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (*.f64 y y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (*.f64 (pow.f64 y -1/3) (cbrt.f64 (neg.f64 x))) 3) (neg.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x (pow.f64 y -4/3))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 y -4/3) x)) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 1 y) (/.f64 x (cbrt.f64 y)))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x y) 2/3))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (*.f64 y y)) 2/3))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 x))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) (neg.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (pow.f64 y 2/3)) (neg.f64 (pow.f64 y 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 (/.f64 x y) 2/3) y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (neg.f64 x))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (neg.f64 x) (pow.f64 (/.f64 x (*.f64 y y)) 2))) (neg.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) x)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (/.f64 x y) (pow.f64 (/.f64 x (*.f64 y y)) 2))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2) (/.f64 x y))) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 x (pow.f64 (/.f64 x (*.f64 y y)) 2))) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (*.f64 y y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 y -2/3) (neg.f64 (/.f64 x y))) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 y y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (*.f64 y y)) 3))))))"]],"rules":[["egg-rr",103]],"time":42.795166015625,"type":"rewrite"},{"count":[[127,104]],"inputs":[["(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)","(/.f64 x (pow.f64 y 2))","(/.f64 (/.f64 x y) y)"]],"time":102.2958984375,"type":"simplify"},{"compiler":[[1216,531]],"time":13.02099609375,"type":"eval"},{"alts":[["(*.f64 x (pow.f64 y -2))","fresh",8.920751142782125],["(*.f64 (/.f64 1 y) (/.f64 x y))","done",0.25619125976844204],["(/.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (cbrt.f64 y))","fresh",30.84773736956332],["(/.f64 (/.f64 x y) y)","done",0.17578125],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))","next",6.7406078542052414],["(/.f64 (/.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 y 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4))","fresh",32.676785904794635],["(pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) 3)","fresh",9.105537783361584],["(/.f64 x (*.f64 y y))","fresh",8.857365164819884]],"compiler":[[7,5],[9,6],[15,10],[7,4],[13,9],[19,13],[10,7],[7,4],[7,5],[15,10],[13,9],[19,13],[10,7],[7,4]],"count":[[112,8]],"kept":[{"done":[1,1],"fresh":[6,2],"new":[104,4],"picked":[1,1]}],"min-error":[0.03515625],"time":20.149169921875,"type":"prune"},{"compiler":[[33,17]],"locations":[["(/.f64 x (cbrt.f64 y))",0.25390625,true],["(pow.f64 (cbrt.f64 y) 5)",0.7045543453678325,true],["(/.f64 1 (pow.f64 (cbrt.f64 y) 5))",0.8068851853982453,true],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))",5.42421450299136,true]],"time":8.134765625,"type":"localize"},{"count":[[4,36]],"series":[["(/.f64 x (cbrt.f64 y))","y","-inf",0.411865234375],["(/.f64 x (cbrt.f64 y))","y","inf",0.286865234375],["(/.f64 x (cbrt.f64 y))","y","0",0.3291015625],["(/.f64 x (cbrt.f64 y))","x","-inf",0.302978515625],["(/.f64 x (cbrt.f64 y))","x","inf",0.365966796875],["(/.f64 x (cbrt.f64 y))","x","0",2.30615234375],["(pow.f64 (cbrt.f64 y) 5)","y","-inf",1.27392578125],["(pow.f64 (cbrt.f64 y) 5)","y","inf",0.68505859375],["(pow.f64 (cbrt.f64 y) 5)","y","0",0.946044921875],["(/.f64 1 (pow.f64 (cbrt.f64 y) 5))","y","-inf",0.537109375],["(/.f64 1 (pow.f64 (cbrt.f64 y) 5))","y","inf",0.375],["(/.f64 1 (pow.f64 (cbrt.f64 y) 5))","y","0",0.419921875],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))","y","-inf",2.078125],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))","y","inf",0.265869140625],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))","y","0",0.93505859375],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))","x","-inf",0.2900390625],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))","x","inf",0.26806640625],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))","x","0",1.76904296875]],"time":14.06201171875,"type":"series"},{"count":[[4,208]],"inputs":[["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))","(/.f64 1 (pow.f64 (cbrt.f64 y) 5))","(pow.f64 (cbrt.f64 y) 5)","(/.f64 x (cbrt.f64 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (*.f64 y y)) 0) (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (*.f64 y y)) (*.f64 (/.f64 x (*.f64 y y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (*.f64 y y))) (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (*.f64 y y)) (*.f64 0 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 y y))) (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x (*.f64 y y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (*.f64 (pow.f64 y -1/3) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y))) (/.f64 (pow.f64 (cbrt.f64 y) -5) (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) -5) (/.f64 x (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (cbrt.f64 (/.f64 x (cbrt.f64 y)))) (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (/.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) -5) (cbrt.f64 (pow.f64 y 2/3))) (/.f64 x (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5))) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5)) (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (/.f64 x (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1/3) (*.f64 x (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x (*.f64 y y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y -1/3) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5))) (*.f64 x (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (*.f64 (pow.f64 (cbrt.f64 y) -5) (cbrt.f64 (/.f64 x (cbrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 (cbrt.f64 y) (neg.f64 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) (neg.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (neg.f64 x)) (neg.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 (cbrt.f64 y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) (neg.f64 6)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 5))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (neg.f64 x)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) (neg.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (pow.f64 y -1/3)) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3)) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) -1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x (cbrt.f64 y)))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 x)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) 1) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (/.f64 x (cbrt.f64 (cbrt.f64 y)))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (*.f64 (pow.f64 y -1/3) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5)))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (neg.f64 x)) 1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (pow.f64 (cbrt.f64 y) -5) (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5))) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -5))) (neg.f64 (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -5))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (neg.f64 x)) (cbrt.f64 (cbrt.f64 y))) (neg.f64 (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (neg.f64 x)) 1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (pow.f64 y 2/3))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) -1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) 1) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 y)) -1) (neg.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y))) (*.f64 (cbrt.f64 (pow.f64 y 2/3)) (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 y) 5)))) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 y 2/3)) (pow.f64 (pow.f64 y 2/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (neg.f64 (*.f64 y y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (*.f64 y y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)))) (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y)))) (neg.f64 (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (*.f64 y y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5)) (/.f64 x (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (/.f64 x (cbrt.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (*.f64 y y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) 0) (pow.f64 (cbrt.f64 y) -5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 y) -5) (*.f64 (pow.f64 (cbrt.f64 y) -5) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 y) -5)) (pow.f64 (cbrt.f64 y) -5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 y) -5) (*.f64 0 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 y) -5))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (cbrt.f64 y) -5) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5))) (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5))) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 y) -5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) -5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (neg.f64 (pow.f64 (cbrt.f64 y) 5))) (neg.f64 (pow.f64 (cbrt.f64 y) 5))) (*.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5)) (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (cbrt.f64 y) 5))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 y) -5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5)) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5)) -1) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5))) -1) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5)))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) -5))) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5))) (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 y) -5)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 y) 5) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 y) -5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) -3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 y) 5) 0) (pow.f64 (cbrt.f64 y) 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 y) 5) (*.f64 (pow.f64 (cbrt.f64 y) 5) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 y) 5)) (pow.f64 (cbrt.f64 y) 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 y) 5) (*.f64 0 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 -1) (neg.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 y) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))) (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 y 2/3) 5)) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 y) 5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 y) 5)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 y) 5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (neg.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 3)) -1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) 0) (/.f64 x (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (cbrt.f64 y)) 0) (/.f64 x (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (cbrt.f64 y)) (*.f64 (/.f64 x (cbrt.f64 y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (cbrt.f64 (neg.f64 y)))) (/.f64 x (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (cbrt.f64 y))) (/.f64 x (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (cbrt.f64 y)) (*.f64 0 (/.f64 x (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 y))) (/.f64 x (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (*.f64 x x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (cbrt.f64 (/.f64 x (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (neg.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (/.f64 (pow.f64 x 2/3) (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 y -1/3)) (/.f64 x (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 y 2/3))) (cbrt.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x x) y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 y -1/3)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (cbrt.f64 (pow.f64 y 2/3))) (cbrt.f64 (/.f64 x (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 (cbrt.f64 y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (pow.f64 x 2/3)) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (cbrt.f64 (neg.f64 x))) (neg.f64 (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (cbrt.f64 x)) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 y -1/3)) x) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 y 2/3))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 x 2/3) (cbrt.f64 (pow.f64 y 2/3)))) (neg.f64 (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3)) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (cbrt.f64 y))) (neg.f64 (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 y)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y)))) (neg.f64 (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (cbrt.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) y))))))"]],"rules":[["egg-rr",53],["egg-rr",24],["egg-rr",39],["egg-rr",92]],"time":36.9501953125,"type":"rewrite"},{"count":[[244,210]],"inputs":[["(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(/.f64 x (cbrt.f64 y))"]],"time":108.171875,"type":"simplify"},{"compiler":[[3133,1639]],"time":33.657958984375,"type":"eval"},{"alts":[["(/.f64 (/.f64 x y) y)","done",0.17578125],["(*.f64 (*.f64 (pow.f64 y -1/3) x) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))","fresh",35.9697227951496],["(pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) 3)","fresh",9.105537783361584],["(/.f64 (/.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4)))","fresh",35.28578011019076],["(*.f64 x (pow.f64 y -2))","fresh",8.920751142782125],["(*.f64 (/.f64 1 y) (/.f64 x y))","done",0.25619125976844204],["(/.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (cbrt.f64 y))","fresh",30.84773736956332],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3)))","next",6.7518690737951275],["(/.f64 x (*.f64 y y))","fresh",8.857365164819884]],"compiler":[[7,4],[14,11],[10,7],[25,17],[7,5],[9,6],[15,10],[16,12],[7,4],[14,11],[10,7],[25,17],[7,5],[15,10],[16,12],[7,4]],"count":[[218,9]],"kept":[{"done":[2,2],"fresh":[5,2],"new":[210,5],"picked":[1,0]}],"min-error":[0.02734375],"time":54.10009765625,"type":"prune"},{"compiler":[[52,32]],"locations":[["(pow.f64 (cbrt.f64 y) 5)",0.7045543453678325,false],["(/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3))",0.8068851853982453,true],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3)))",5.42421450299136,true],["(cbrt.f64 (pow.f64 (cbrt.f64 y) 5))",19.56611070374599,true]],"time":14.4541015625,"type":"localize"},{"count":[[3,36]],"series":[["(/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3))","y","-inf",0.26806640625],["(/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3))","y","inf",0.196044921875],["(/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3))","y","0",0.205078125],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3)))","y","-inf",0.18310546875],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3)))","y","inf",0.174072265625],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3)))","y","0",0.1630859375],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3)))","x","-inf",0.157958984375],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3)))","x","inf",0.161865234375],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3)))","x","0",0.200927734375],["(cbrt.f64 (pow.f64 (cbrt.f64 y) 5))","y","-inf",1.73583984375],["(cbrt.f64 (pow.f64 (cbrt.f64 y) 5))","y","inf",5.6201171875],["(cbrt.f64 (pow.f64 (cbrt.f64 y) 5))","y","0",15.18017578125]],"time":24.4248046875,"type":"series"},{"count":[[3,179]],"inputs":[["(cbrt.f64 (pow.f64 (cbrt.f64 y) 5))","(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3)))","(/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 0) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) (*.f64 0 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 y) 5) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cbrt.f64 y) 5))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (*.f64 y y)) (*.f64 (/.f64 x (*.f64 y y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (*.f64 y y)) 0) (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (*.f64 y y)) (*.f64 0 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (*.f64 y y))) (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 (*.f64 y y))) (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 (cbrt.f64 y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x (*.f64 y y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y))) (/.f64 (pow.f64 (cbrt.f64 y) -5) (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (*.f64 (pow.f64 y -1/3) (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)) (*.f64 (pow.f64 y -1/3) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) -5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) -5) (/.f64 x (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (cbrt.f64 (/.f64 x (cbrt.f64 y)))) (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (pow.f64 y -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (/.f64 x (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (/.f64 x (cbrt.f64 y))) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y -1/3) (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)) (*.f64 x (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (*.f64 (pow.f64 (cbrt.f64 y) -5) (cbrt.f64 (/.f64 x (cbrt.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1/3) (*.f64 x (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 y -1/3) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (*.f64 x (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (/.f64 x (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 y) -5) (cbrt.f64 (pow.f64 y 2/3))) (/.f64 x (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 x (*.f64 y y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) (neg.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 (cbrt.f64 y) (neg.f64 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (neg.f64 x)) (neg.f64 (pow.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) (neg.f64 6)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (pow.f64 y -1/3)) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3)) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) 1) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (*.f64 (pow.f64 y -1/3) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)))) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)))) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))) (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (/.f64 x (cbrt.f64 y))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (*.f64 y (pow.f64 (cbrt.f64 y) 5)))) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 y)) (pow.f64 (cbrt.f64 y) 5))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (neg.f64 x)) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) (neg.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (/.f64 x (cbrt.f64 y))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (/.f64 x (cbrt.f64 y))) -1) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (/.f64 x (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (/.f64 x (cbrt.f64 (cbrt.f64 y)))) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)) (pow.f64 y -1/3)) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y))) (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)) (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3)) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 x)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (*.f64 y y)) 2/3) (cbrt.f64 (/.f64 x (cbrt.f64 y)))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) -1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 (pow.f64 (cbrt.f64 y) -5) (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (*.f64 (pow.f64 y -1/3) (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -5))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 y)) 2/3) (pow.f64 (cbrt.f64 y) -5))) (neg.f64 (cbrt.f64 (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (/.f64 x (cbrt.f64 y)))) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5))) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (pow.f64 y 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 y))) (pow.f64 (/.f64 x (*.f64 y y)) 2/3)) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (neg.f64 x)) 1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (neg.f64 x)) (cbrt.f64 (cbrt.f64 y))) (neg.f64 (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (neg.f64 x)) 1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (pow.f64 y 2/3))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) -1) (cbrt.f64 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 y)) (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) (+.f64 2 1/3))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 y)) -1) (neg.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) (neg.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 y 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (/.f64 x (cbrt.f64 y))) -1) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (/.f64 x (cbrt.f64 y))) 1) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (/.f64 x (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) 4)) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (cbrt.f64 y))) (*.f64 (cbrt.f64 (pow.f64 y 2/3)) (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 y 2/3)) (pow.f64 (pow.f64 y 2/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (*.f64 (cbrt.f64 y) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (*.f64 y y) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (neg.f64 (*.f64 y y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y)))) (neg.f64 (cbrt.f64 (pow.f64 y 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (/.f64 x (cbrt.f64 y)))) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)))) (neg.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (*.f64 y y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 y y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 x (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (cbrt.f64 (neg.f64 y))) (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5)) (/.f64 x (cbrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) (/.f64 x (cbrt.f64 (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (cbrt.f64 y)) (neg.f64 (pow.f64 (cbrt.f64 y) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (*.f64 y y)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 y) -5) (*.f64 (pow.f64 (cbrt.f64 y) -5) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 y) -5) 0) (pow.f64 (cbrt.f64 y) -5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 y) -5) (*.f64 0 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 y) -5)) (pow.f64 (cbrt.f64 y) -5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 y) -5))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (cbrt.f64 y) -5) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5))) (neg.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 y) -5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) -5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5))) -1) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5))) (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)) (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (neg.f64 (pow.f64 (cbrt.f64 y) 5))) (neg.f64 (pow.f64 (cbrt.f64 y) 5))) (*.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5)) (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (cbrt.f64 y) 5))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) -1) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)) -1) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 y) -5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3)) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3))) (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) (+.f64 2 1/3))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5))) (neg.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) -1) (cbrt.f64 (neg.f64 (pow.f64 (cbrt.f64 y) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (pow.f64 (cbrt.f64 y) -5) 2/3) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) 4)) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 y) -5)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 y) 5) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 y) -5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 y) -5)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 y) 5) -3))))))"]],"rules":[["egg-rr",47],["egg-rr",112],["egg-rr",20]],"time":34.97216796875,"type":"rewrite"},{"count":[[215,183]],"inputs":[["(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(*.f64 (pow.f64 (*.f64 -1 (pow.f64 y 5)) 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))","(*.f64 (pow.f64 (*.f64 -1 (pow.f64 y 5)) 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))","(*.f64 (pow.f64 (*.f64 -1 (pow.f64 y 5)) 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))","(*.f64 (pow.f64 (*.f64 -1 (pow.f64 y 5)) 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))","(/.f64 x (pow.f64 y 2))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(pow.f64 (pow.f64 y 5) 1/9)","(*.f64 (pow.f64 (*.f64 -1 (pow.f64 y 5)) 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))","(neg.f64 (pow.f64 (neg.f64 (pow.f64 y 5)) 1/9))","(*.f64 (pow.f64 (*.f64 -1 (pow.f64 y 5)) 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))","(neg.f64 (pow.f64 (neg.f64 (pow.f64 y 5)) 1/9))","(*.f64 (pow.f64 (*.f64 -1 (pow.f64 y 5)) 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))","(neg.f64 (pow.f64 (neg.f64 (pow.f64 y 5)) 1/9))","(*.f64 (pow.f64 (*.f64 -1 (pow.f64 y 5)) 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3))","(neg.f64 (pow.f64 (neg.f64 (pow.f64 y 5)) 1/9))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))"]],"time":108.7080078125,"type":"simplify"},{"compiler":[[3377,1866]],"time":37.7109375,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) 3)","fresh",9.105537783361584],["(/.f64 (/.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4)))","fresh",35.28578011019076],["(*.f64 x (pow.f64 y -2))","fresh",8.920751142782125],["(*.f64 (/.f64 1 y) (/.f64 x y))","done",0.25619125976844204],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) (+.f64 2 3))))","fresh",6.87952415194266],["(/.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (cbrt.f64 y))","fresh",30.84773736956332],["(/.f64 (/.f64 x y) y)","done",0.17578125],["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) 3) 3)))","fresh",7.030298192316129]],"compiler":[[10,7],[25,17],[7,5],[9,6],[30,22],[15,10],[7,4],[19,15]],"count":[[216,8]],"kept":[{"done":[2,2],"fresh":[6,4],"new":[207,2],"picked":[1,0]}],"min-error":[0.0234375],"time":51.0390625,"type":"prune"},{"accuracy":[0.17578125],"baseline":[0.17578125],"branch":[["x",0.17578125,1],["y",0.17578125,1],["(/.f64 x (*.f64 y y))",0.17578125,1],["(/.f64 x (*.f64 y y))",0.17578125,1],["(*.f64 y y)",0.17578125,1],["(*.f64 y y)",0.17578125,1]],"compiler":[[3,2],[3,2],[7,4],[7,4],[5,3],[5,3],[220,109]],"count":[[20,1]],"inputs":[["(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)))) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) (+.f64 2 3))))","(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5))) 3) 3)))","(*.f64 (*.f64 (pow.f64 y -1/3) x) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))","(pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) 3)","(/.f64 (/.f64 (/.f64 (*.f64 x (pow.f64 (cbrt.f64 y) -5)) (cbrt.f64 (cbrt.f64 y))) (cbrt.f64 (cbrt.f64 (pow.f64 y 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4)))","(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 y) 5)) 3)))","(/.f64 x (*.f64 y y))","(*.f64 x (pow.f64 y -2))","(/.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (cbrt.f64 y))","(*.f64 (/.f64 x (cbrt.f64 y)) (/.f64 1 (pow.f64 (cbrt.f64 y) 5)))","(/.f64 x (*.f64 y y))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 y) -4) (cbrt.f64 y)) (/.f64 x (cbrt.f64 y)))","(*.f64 (pow.f64 y -2) x)","(*.f64 (/.f64 1 y) (/.f64 x y))","(/.f64 (*.f64 (cbrt.f64 x) (/.f64 (pow.f64 (/.f64 x y) 2/3) y)) (cbrt.f64 y))","(/.f64 (/.f64 (/.f64 (/.f64 x y) (cbrt.f64 y)) (cbrt.f64 (pow.f64 y 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 y)) 4))","(/.f64 x (*.f64 y y))","(pow.f64 (cbrt.f64 (/.f64 x (*.f64 y y))) 3)","(/.f64 (/.f64 x y) y)","(/.f64 x (*.f64 y y))"]],"link":["."],"name":["Physics.ForceLayout:coulombForce from force-layout-0.4.0.2"],"oracle":[49.503344225467536],"outputs":[["(/.f64 (/.f64 x y) y)"]],"time":37.328857421875,"times":[["x",6.554931640625],["y",6.536865234375],["(/.f64 x (*.f64 y y))",4.5419921875],["(/.f64 x (*.f64 y y))",4.41796875],["(*.f64 y y)",5.674072265625],["(*.f64 y y)",5.6669921875]],"type":"regimes"},{"compiler":[[7,4]],"inputs":[["(/.f64 (/.f64 x y) y)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 x y) y)","(/.f64 x (*.f64 y y))"]],"stop":[["fuel",1]],"time":36.674072265625,"type":"simplify"},{"time":0.014892578125,"type":"soundness"},{"compiler":[[7,4]],"remove-preprocessing":[[]],"time":10.044189453125,"type":"end"}]