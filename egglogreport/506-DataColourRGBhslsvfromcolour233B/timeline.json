[{"compiler":[[19,14]],"method":["search"],"sampling":[[12,0.11690167696545961,0.8806592998064624,0.0024390232280779856],[11,0.07793445131030641,0.9196265254616156,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":180.55908203125,"type":"analyze"},{"outcomes":[["body",256,"invalid",37.38671875,681],["body",4096,"valid",0.679931640625,3],["body",1024,"valid",6.404296875,46],["body",512,"valid",2.867919921875,30],["body",2048,"valid",7.4765625,39],["body",256,"valid",446.460693359375,8138]],"time":511.45703125,"type":"sample"},{"compiler":[[18,13]],"inputs":[["0","1","2","3","4"],["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 z t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 z y)) (-.f64 x t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 t y)) (-.f64 z x)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 a y)) (-.f64 z t)) (*.f64 x 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x z)) (-.f64 y t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x t)) (-.f64 z y)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x a)) (-.f64 z t)) (*.f64 y 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 t z)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 a t)) (*.f64 z 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z a)) (*.f64 t 120))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))","(fma.f64 a 120 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))","(+.f64 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 z t)) (*.f64 a 120))","(fma.f64 a 120 (/.f64 (-.f64 y x) (/.f64 (-.f64 z t) 60)))","(+.f64 (/.f64 (*.f64 60 (-.f64 z y)) (-.f64 x t)) (*.f64 a 120))","(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y z) 60) (-.f64 t x)))","(+.f64 (/.f64 (*.f64 60 (-.f64 t y)) (-.f64 z x)) (*.f64 a 120))","(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y t) 60) (-.f64 x z)))","(+.f64 (/.f64 (*.f64 60 (-.f64 a y)) (-.f64 z t)) (*.f64 x 120))","(fma.f64 x 120 (/.f64 (*.f64 (-.f64 y a) 60) (-.f64 t z)))","(+.f64 (/.f64 (*.f64 60 (-.f64 x z)) (-.f64 y t)) (*.f64 a 120))","(fma.f64 a 120 (/.f64 (*.f64 (-.f64 z x) 60) (-.f64 t y)))","(+.f64 (/.f64 (*.f64 60 (-.f64 x t)) (-.f64 z y)) (*.f64 a 120))","(fma.f64 a 120 (/.f64 (*.f64 (-.f64 t x) 60) (-.f64 y z)))","(+.f64 (/.f64 (*.f64 60 (-.f64 x a)) (-.f64 z t)) (*.f64 y 120))","(fma.f64 y 120 (/.f64 (*.f64 (-.f64 a x) 60) (-.f64 t z)))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 t z)) (*.f64 a 120))","(fma.f64 a 120 (/.f64 (-.f64 y x) (/.f64 (-.f64 z t) 60)))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 a t)) (*.f64 z 120))","(fma.f64 120 z (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 a t)))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z a)) (*.f64 t 120))","(fma.f64 120 t (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z a)))"]],"symmetry":[[]],"time":86.294921875,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))","(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))"]],"time":21.089111328125,"type":"simplify"},{"compiler":[[30,20]],"time":0.4619140625,"type":"eval"},{"alts":[["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","next",0.3984375]],"compiler":[[17,12],[17,12]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.3984375],"time":0.965087890625,"type":"prune"},{"compiler":[[44,19]],"locations":[["(*.f64 (-.f64 y x) 60)",0.0234375,true],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))",0.0234375,true],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))",0.47919001813361184,true]],"time":9.767822265625,"type":"localize"},{"count":[[3,132]],"series":[["(*.f64 (-.f64 y x) 60)","x","-inf",0.23291015625],["(*.f64 (-.f64 y x) 60)","x","inf",0.20703125],["(*.f64 (-.f64 y x) 60)","x","0",0.234130859375],["(*.f64 (-.f64 y x) 60)","y","-inf",0.2080078125],["(*.f64 (-.f64 y x) 60)","y","inf",0.823974609375],["(*.f64 (-.f64 y x) 60)","y","0",0.223876953125],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","z","-inf",0.218994140625],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","z","inf",0.205810546875],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","z","0",0.281005859375],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","t","-inf",0.208984375],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","t","inf",0.242919921875],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","t","0",0.31396484375],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","x","-inf",0.180908203125],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","x","inf",0.197998046875],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","x","0",0.222900390625],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","y","-inf",0.199951171875],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","y","inf",0.19091796875],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","y","0",0.27294921875],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","a","-inf",0.30810546875],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","a","inf",0.2919921875],["(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","a","0",0.4970703125],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","z","-inf",0.35498046875],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","z","inf",0.47998046875],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","z","0",0.47900390625],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","t","-inf",0.4140625],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","t","inf",0.8740234375],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","t","0",0.626953125],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","x","-inf",0.406982421875],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","x","inf",0.471923828125],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","x","0",0.60009765625],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","y","-inf",0.42578125],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","y","inf",0.6181640625],["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","y","0",0.570068359375]],"time":12.60009765625,"type":"series"},{"count":[[3,167]],"inputs":[["(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","(*.f64 (-.f64 y x) 60)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60)) (*.f64 (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 60 y)) (*.f64 (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 60 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) (*.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 0) (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 (*.f64 x 60)) (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 60 y) (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 (*.f64 60 x)) (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) (*.f64 0 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (/.f64 x (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (/.f64 x (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 y x) (*.f64 (-.f64 z t) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (*.f64 (-.f64 t z) 1/60)) (/.f64 (-.f64 y x) (*.f64 (-.f64 z t) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 z t)) (/.f64 (-.f64 y x) (*.f64 (-.f64 z t) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (*.f64 (-.f64 z t) 1/60)) (/.f64 y (*.f64 (-.f64 z t) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (-.f64 z t)) -60)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 2)) (cbrt.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 y x) 60)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) 60) 2)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (/.f64 60 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 216000 (-.f64 t z))) (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) 60) (/.f64 1 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) (*.f64 (-.f64 y x) 60))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -60 (-.f64 y x)) (/.f64 1 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (/.f64 (-.f64 y x) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 y x) (*.f64 (-.f64 z t) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (-.f64 t z)) 60)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) (pow.f64 (cbrt.f64 (-.f64 t z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (*.f64 (-.f64 z t) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 2)) (cbrt.f64 (*.f64 (-.f64 y x) 60))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 2)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) (/.f64 60 (cbrt.f64 (pow.f64 (-.f64 t z) 2)))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 60 (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) 1/60)) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 y x) 60)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 2))) (cbrt.f64 (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (sqrt.f64 1/60)) (*.f64 (-.f64 t z) (sqrt.f64 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 1/60)) (/.f64 (-.f64 t z) (cbrt.f64 3600)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (*.f64 (-.f64 t z) 1/60))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 t z) 1/60)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (*.f64 (cbrt.f64 (-.f64 t z)) (sqrt.f64 1/60))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) (sqrt.f64 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (-.f64 t z)) 1/60)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y (*.f64 (-.f64 t z) 1/60)) (*.f64 (*.f64 (-.f64 t z) 1/60) x)) (*.f64 (*.f64 (-.f64 t z) 1/60) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) 1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) 60) 2))) (*.f64 (cbrt.f64 (*.f64 (-.f64 t z) 1/60)) (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -60 (-.f64 y x)) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (*.f64 (-.f64 z t) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) 60) 2))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (*.f64 (-.f64 y x) 60)) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 2)) (cbrt.f64 (*.f64 -60 (-.f64 y x)))) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 216000 (-.f64 t z))) (-.f64 y x)) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) 60) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 -60 (-.f64 y x))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 2))) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 y x) 60) -1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -60 (-.f64 y x)) (cbrt.f64 (-.f64 t z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 t z) 2) 3600)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 z t) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 -60 (-.f64 y x)) (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 z t) 1/60)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 -60 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) (*.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) 0) (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) (*.f64 0 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))) (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a 120) (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 a 120) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (/.f64 x (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (-.f64 (/.f64 x (*.f64 (-.f64 t z) 1/60)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 a 120) (/.f64 (-.f64 y x) (*.f64 (-.f64 z t) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (pow.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) 2)) (cbrt.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a 120 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a 120) 1 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 (*.f64 a a) 1728000)) (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a 120) (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 120)) (cbrt.f64 14400) (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a 120)) (cbrt.f64 (*.f64 (*.f64 a a) 14400)) (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (sqrt.f64 120)) (sqrt.f64 120) (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -60 (-.f64 y x)) (/.f64 1 (-.f64 z t)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 y x) 60)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) 60) 2)) (-.f64 t z)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 216000 (-.f64 t z))) (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 (-.f64 y x) 60) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (/.f64 60 (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (/.f64 (-.f64 y x) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) 1/60)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 2)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y x) 60) (/.f64 1 (-.f64 t z)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 1 (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (-.f64 y x) (*.f64 (-.f64 z t) 1/60)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)) 2)) (cbrt.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 y x) (-.f64 t z)) 60 (*.f64 a 120))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 60 y) (neg.f64 (*.f64 60 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y 60) (neg.f64 (*.f64 x 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 x 60)) (*.f64 y 60))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 60 x)) (*.f64 60 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 y 60)) (*.f64 1 (neg.f64 (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 60 y)) (*.f64 1 (neg.f64 (*.f64 60 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) 60) (*.f64 (*.f64 (-.f64 y x) 60) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 y x) 60) 0) (*.f64 (-.f64 y x) 60))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y 60) 1) (*.f64 (neg.f64 (*.f64 x 60)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 60 y) 1) (*.f64 (neg.f64 (*.f64 60 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) 60) (*.f64 0 (*.f64 (-.f64 y x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 y x) 60)) (*.f64 (-.f64 y x) 60))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 -60 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 y x) 60)) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) 60) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) 60) 2)) (cbrt.f64 (*.f64 (-.f64 y x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (cbrt.f64 60)) (cbrt.f64 3600))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (sqrt.f64 60)) (sqrt.f64 60))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 216000 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 60) (*.f64 (cbrt.f64 3600) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 60) (*.f64 (sqrt.f64 60) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) 60))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) 60)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 60 (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 y x) 60))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) 60) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -60 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) -60)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -60 (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -60 (-.f64 y x))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) 60) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) 60) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 y x) 60) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -60 (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) 1/60)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) 60)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) 60)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) 60)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 y x) 60) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 y x) 60) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -60 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) 60) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 60 y (neg.f64 (*.f64 60 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y 60 (neg.f64 (*.f64 x 60)))))))"]],"rules":[["egg-rr",42],["egg-rr",47],["egg-rr",78]],"time":35.9541015625,"type":"rewrite"},{"count":[[299,240]],"inputs":[["(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 -60 x)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(*.f64 60 y)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(*.f64 60 y)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(*.f64 60 y)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(*.f64 -60 x)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(*.f64 -60 x)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (/.f64 (*.f64 (*.f64 60 t) (-.f64 x y)) (*.f64 z z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (fma.f64 t (/.f64 (/.f64 (-.f64 x y) z) z) (/.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (+.f64 (fma.f64 (*.f64 (pow.f64 t 3) (/.f64 (/.f64 (-.f64 x y) z) z)) (pow.f64 z (neg.f64 2)) (/.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) z)) (/.f64 (*.f64 t (-.f64 x y)) (*.f64 z z)))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(/.f64 (*.f64 60 (-.f64 y x)) t)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(*.f64 60 (+.f64 (fma.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t (neg.f64 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))) (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (fma.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t (neg.f64 4)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(/.f64 (*.f64 60 (-.f64 y x)) t)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(*.f64 60 (+.f64 (fma.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t (neg.f64 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))) (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (fma.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t (neg.f64 4)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(/.f64 (*.f64 60 (-.f64 y x)) t)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(*.f64 60 (+.f64 (fma.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t (neg.f64 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))) (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (fma.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t (neg.f64 4)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (fma.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z (neg.f64 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (fma.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z (neg.f64 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)) (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4)))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (fma.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z (neg.f64 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (fma.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z (neg.f64 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)) (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4)))))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 -60 x) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 y) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (fma.f64 -60 x (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(fma.f64 (/.f64 (-.f64 y x) z) -60 (fma.f64 120 a (/.f64 (*.f64 (*.f64 60 t) (-.f64 x y)) (*.f64 z z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(fma.f64 (/.f64 (-.f64 y x) z) -60 (fma.f64 120 a (*.f64 60 (fma.f64 t (/.f64 (/.f64 (-.f64 x y) z) z) (/.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) z)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(fma.f64 (/.f64 (-.f64 y x) z) -60 (fma.f64 120 a (*.f64 60 (+.f64 (fma.f64 (*.f64 (pow.f64 t 3) (/.f64 (/.f64 (-.f64 x y) z) z)) (pow.f64 z (neg.f64 2)) (/.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) z)) (/.f64 (*.f64 t (-.f64 x y)) (*.f64 z z))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (+.f64 (fma.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t (neg.f64 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))) (/.f64 (-.f64 y x) t))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (+.f64 (fma.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t (neg.f64 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))) (/.f64 (-.f64 y x) t))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) t)))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (+.f64 (fma.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t (neg.f64 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))) (/.f64 (-.f64 y x) t))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(fma.f64 (/.f64 (-.f64 y x) t) 60 (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (fma.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t (neg.f64 4)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z))) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(+.f64 (*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (fma.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z (neg.f64 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z))) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(+.f64 (*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (fma.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z (neg.f64 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)))) (*.f64 120 a))","(*.f64 -60 x)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(*.f64 60 y)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(*.f64 60 y)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(*.f64 60 y)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(*.f64 -60 x)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(*.f64 -60 x)","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))","(+.f64 (*.f64 -60 x) (*.f64 60 y))","(fma.f64 -60 x (*.f64 60 y))"]],"time":425.23291015625,"type":"simplify"},{"compiler":[[4874,2424]],"time":48.52197265625,"type":"eval"},{"alts":[["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","fresh",0.140625],["(fma.f64 a 120 (/.f64 (*.f64 (*.f64 (-.f64 y x) (sqrt.f64 60)) (sqrt.f64 60)) (-.f64 t z)))","fresh",0.4638862793053261],["(fma.f64 (*.f64 a (sqrt.f64 120)) (sqrt.f64 120) (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","fresh",0.3125],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","next",0.1328125]],"compiler":[[17,12],[21,16],[21,16],[17,12],[17,12],[21,16],[21,16],[17,12]],"count":[[241,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[240,4],"picked":[1,0]}],"min-error":[0],"time":92.06494140625,"type":"prune"},{"compiler":[[40,16]],"locations":[["(/.f64 (-.f64 y x) (-.f64 t z))",0.015625,true],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))",0.12109375,true]],"time":8.02197265625,"type":"localize"},{"count":[[2,108]],"series":[["(/.f64 (-.f64 y x) (-.f64 t z))","z","-inf",0.237060546875],["(/.f64 (-.f64 y x) (-.f64 t z))","z","inf",0.265869140625],["(/.f64 (-.f64 y x) (-.f64 t z))","z","0",0.264892578125],["(/.f64 (-.f64 y x) (-.f64 t z))","t","-inf",0.279052734375],["(/.f64 (-.f64 y x) (-.f64 t z))","t","inf",0.283935546875],["(/.f64 (-.f64 y x) (-.f64 t z))","t","0",0.283203125],["(/.f64 (-.f64 y x) (-.f64 t z))","x","-inf",0.162841796875],["(/.f64 (-.f64 y x) (-.f64 t z))","x","inf",0.1630859375],["(/.f64 (-.f64 y x) (-.f64 t z))","x","0",0.18212890625],["(/.f64 (-.f64 y x) (-.f64 t z))","y","-inf",0.165771484375],["(/.f64 (-.f64 y x) (-.f64 t z))","y","inf",0.18701171875],["(/.f64 (-.f64 y x) (-.f64 t z))","y","0",0.304931640625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","a","-inf",0.27099609375],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","a","inf",0.260009765625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","a","0",0.2509765625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","z","-inf",0.197998046875],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","z","inf",0.2158203125],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","z","0",0.258056640625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","t","-inf",0.26904296875],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","t","inf",0.22802734375],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","t","0",0.303955078125],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","x","-inf",0.2119140625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","x","inf",0.194091796875],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","x","0",0.238037109375],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","y","-inf",0.35009765625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","y","inf",0.225830078125],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","y","0",0.322021484375]],"time":7.004150390625,"type":"series"},{"count":[[2,114]],"inputs":[["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","(/.f64 (-.f64 y x) (-.f64 t z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a 120) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 0) (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) (*.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))) (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) (*.f64 0 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))) (cbrt.f64 (pow.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 2)) (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) 1 (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 (*.f64 a a) 1728000)) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 a 120)) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a 120 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 120) (*.f64 (cbrt.f64 14400) a) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 1728000 a)) (cbrt.f64 (*.f64 a a)) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 a a) 14400)) (cbrt.f64 (*.f64 a 120)) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a 120)) (cbrt.f64 (*.f64 (*.f64 a a) 14400)) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a 120) 1 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a 120) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 120)) (cbrt.f64 14400) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 120) (*.f64 (sqrt.f64 120) a) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 120 a (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (sqrt.f64 120)) (sqrt.f64 120) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 60 (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 60 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 60) (*.f64 (sqrt.f64 60) (/.f64 (-.f64 x y) (-.f64 z t))) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 60 (-.f64 y x)) (/.f64 1 (-.f64 t z)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) 2)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 60) (*.f64 (cbrt.f64 3600) (/.f64 (-.f64 x y) (-.f64 z t))) (*.f64 a 120))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z t)) (/.f64 y (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 0) (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) (*.f64 (/.f64 1 (-.f64 t z)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (-.f64 t z)) (neg.f64 x)) (*.f64 (/.f64 1 (-.f64 t z)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (-.f64 t z)) 1) (*.f64 (/.f64 x (-.f64 z t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 x y) (-.f64 z t))) (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 0 (/.f64 (-.f64 x y) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 y x) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 z t)) (/.f64 (-.f64 y x) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 z t)) (/.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 y (-.f64 t z)) (pow.f64 (-.f64 t z) 2)) (/.f64 (*.f64 (-.f64 t z) x) (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 t z)) (/.f64 (-.f64 y x) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (/.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (pow.f64 (cbrt.f64 (-.f64 t z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 1 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 y x) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (-.f64 t z) (neg.f64 (*.f64 (-.f64 t z) x))) (/.f64 1 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (-.f64 y x)) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t))) (cbrt.f64 (pow.f64 (-.f64 y x) 2))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (*.f64 (-.f64 t z) (/.f64 x (cbrt.f64 (-.f64 t z))))) (*.f64 (-.f64 t z) (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y (-.f64 z t)) (*.f64 (-.f64 t z) (neg.f64 x))) (*.f64 (-.f64 t z) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 y) (-.f64 t z)) (*.f64 (-.f64 z t) x)) (*.f64 (-.f64 z t) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 y) (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (*.f64 (-.f64 z t) (/.f64 x (cbrt.f64 (-.f64 t z))))) (*.f64 (-.f64 z t) (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) (-.f64 t z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) (/.f64 x (cbrt.f64 (-.f64 t z))))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) (-.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) 1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 y (-.f64 t z) (neg.f64 (*.f64 (-.f64 t z) x)))) (neg.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 y (-.f64 t z) (neg.f64 (*.f64 (-.f64 t z) x))) (pow.f64 (-.f64 t z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2)) (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 y (-.f64 t z) (neg.f64 (*.f64 (-.f64 t z) x))) 1) (pow.f64 (-.f64 t z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2))) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 t z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) -1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 y (-.f64 t z) (neg.f64 (*.f64 (-.f64 t z) x))) (-.f64 t z)) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 y) (-.f64 z t)) (*.f64 (-.f64 z t) (neg.f64 x))) (pow.f64 (-.f64 t z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y x) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 y x) (-.f64 z t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 t z)) 2)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 t z)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (/.f64 y (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 (-.f64 t z)) (/.f64 x (-.f64 z t)))))))"]],"rules":[["egg-rr",71],["egg-rr",43]],"time":30.5419921875,"type":"rewrite"},{"count":[[222,180]],"inputs":[["(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 y x) z)))","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2)) (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t)) (/.f64 x t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))) (/.f64 x t))","(-.f64 (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 y x)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t)) (/.f64 x t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))) (/.f64 x t))","(-.f64 (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))) (/.f64 x t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t))) (/.f64 x t))","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 -60 x) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 y) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(fma.f64 120 a (fma.f64 -60 (/.f64 (-.f64 y x) z) (/.f64 (*.f64 (*.f64 60 t) (-.f64 x y)) (*.f64 z z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (+.f64 (/.f64 (*.f64 t (-.f64 x y)) (*.f64 z z)) (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (pow.f64 z 3))))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(fma.f64 120 a (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (+.f64 (+.f64 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 x y)) (pow.f64 z 4)) (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (pow.f64 z 3))) (/.f64 (*.f64 t (-.f64 x y)) (*.f64 z z))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)) (/.f64 (-.f64 y x) t))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)) (/.f64 (-.f64 y x) t))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)) (/.f64 (-.f64 y x) t))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(fma.f64 120 a (fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 (/.f64 -60 z) (/.f64 (*.f64 t (-.f64 y x)) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (+.f64 (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z) (/.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z 3))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 (/.f64 -60 z) (/.f64 (*.f64 t (-.f64 y x)) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (+.f64 (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z) (/.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z 3))))))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(neg.f64 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(neg.f64 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(neg.f64 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 x y) (-.f64 z t))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(/.f64 (-.f64 x y) z)","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 y x) z)))","(fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (-.f64 x y) z))","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))","(fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) (-.f64 x y)) z))","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2)) (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(+.f64 (fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) (-.f64 x y)) z)) (/.f64 (*.f64 (pow.f64 t 3) (-.f64 x y)) (pow.f64 z 4)))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t)) (/.f64 x t))","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)) (/.f64 (-.f64 y x) t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))) (/.f64 x t))","(+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)) (/.f64 (-.f64 y x) t)))","(-.f64 (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 y x)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(+.f64 (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))) (/.f64 (-.f64 y x) t))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t)) (/.f64 x t))","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)) (/.f64 (-.f64 y x) t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))) (/.f64 x t))","(+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)) (/.f64 (-.f64 y x) t)))","(-.f64 (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(+.f64 (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))) (/.f64 (-.f64 y x) t))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))) (/.f64 x t))","(+.f64 (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)) (/.f64 (-.f64 y x) t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t))) (/.f64 x t))","(+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)) (/.f64 (-.f64 y x) t)))","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(+.f64 (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))) (/.f64 (-.f64 y x) t))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(/.f64 (-.f64 x y) z)","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (-.f64 x y) z))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3)))))","(fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) (-.f64 x y)) z))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))))))","(+.f64 (fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) (-.f64 x y)) z)) (/.f64 (*.f64 (pow.f64 t 3) (-.f64 x y)) (pow.f64 z 4)))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(/.f64 (-.f64 x y) z)","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (-.f64 x y) z))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3)))))","(fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) (-.f64 x y)) z))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))))))","(+.f64 (fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) (-.f64 x y)) z)) (/.f64 (*.f64 (pow.f64 t 3) (-.f64 x y)) (pow.f64 z 4)))"]],"time":373.0048828125,"type":"simplify"},{"compiler":[[3897,1771]],"time":35.2470703125,"type":"eval"},{"alts":[["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","fresh",0.140625],["(fma.f64 (sqrt.f64 60) (*.f64 (sqrt.f64 60) (/.f64 (-.f64 x y) (-.f64 z t))) (*.f64 a 120))","fresh",0.240566259768442],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","next",0.12890625],["(fma.f64 (sqrt.f64 120) (*.f64 (sqrt.f64 120) a) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))","fresh",0.546875]],"compiler":[[17,12],[21,16],[21,13],[21,16],[17,12],[21,16],[21,13],[21,16]],"count":[[184,4]],"kept":[{"done":[0,0],"fresh":[3,1],"new":[180,3],"picked":[1,0]}],"min-error":[0],"time":58.37109375,"type":"prune"},{"compiler":[[55,17]],"locations":[["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))",0.0078125,true],["(/.f64 x (-.f64 t z))",0.0078125,true],["(/.f64 y (-.f64 t z))",0.0078125,true],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))",0.12109375,true]],"time":9.36279296875,"type":"localize"},{"count":[[4,156]],"series":[["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","x","-inf",0.16015625],["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","x","inf",0.201171875],["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","x","0",0.1611328125],["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","z","-inf",0.31689453125],["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","z","inf",0.32080078125],["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","z","0",0.302001953125],["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","t","-inf",0.343017578125],["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","t","inf",0.364013671875],["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","t","0",0.272216796875],["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","y","-inf",0.18603515625],["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","y","inf",0.159912109375],["(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))","y","0",0.1669921875],["(/.f64 x (-.f64 t z))","z","-inf",0.22900390625],["(/.f64 x (-.f64 t z))","z","inf",0.22509765625],["(/.f64 x (-.f64 t z))","z","0",0.212158203125],["(/.f64 x (-.f64 t z))","t","-inf",0.221923828125],["(/.f64 x (-.f64 t z))","t","inf",0.280029296875],["(/.f64 x (-.f64 t z))","t","0",0.27587890625],["(/.f64 x (-.f64 t z))","x","-inf",0.27197265625],["(/.f64 x (-.f64 t z))","x","inf",0.276123046875],["(/.f64 x (-.f64 t z))","x","0",0.2099609375],["(/.f64 y (-.f64 t z))","z","-inf",0.491943359375],["(/.f64 y (-.f64 t z))","z","inf",0.237060546875],["(/.f64 y (-.f64 t z))","z","0",0.195068359375],["(/.f64 y (-.f64 t z))","t","-inf",0.241943359375],["(/.f64 y (-.f64 t z))","t","inf",0.26318359375],["(/.f64 y (-.f64 t z))","t","0",0.280029296875],["(/.f64 y (-.f64 t z))","y","-inf",0.364990234375],["(/.f64 y (-.f64 t z))","y","inf",0.2890625],["(/.f64 y (-.f64 t z))","y","0",0.2548828125],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","a","-inf",0.197998046875],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","a","inf",0.218017578125],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","a","0",0.416015625],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","x","-inf",0.24609375],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","x","inf",1.57177734375],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","x","0",0.443115234375],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","z","-inf",0.345947265625],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","z","inf",0.426025390625],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","z","0",0.60791015625],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","t","-inf",0.49609375],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","t","inf",0.434814453125],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","t","0",0.576171875],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","y","-inf",0.345947265625],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","y","inf",0.510009765625],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","y","0",0.594970703125]],"time":15.880126953125,"type":"series"},{"count":[[4,228]],"inputs":[["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","(/.f64 y (-.f64 t z))","(/.f64 x (-.f64 t z))","(-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a 120) (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 60 y) (-.f64 t z)) (+.f64 (/.f64 (*.f64 60 x) (-.f64 z t)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y 60) (-.f64 t z)) (+.f64 (/.f64 (*.f64 x 60) (-.f64 z t)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 0) (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) (*.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))) (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) (*.f64 0 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 a 120) (/.f64 (*.f64 60 y) (-.f64 t z))) (/.f64 (*.f64 60 x) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 a 120) (/.f64 (*.f64 y 60) (-.f64 t z))) (/.f64 (*.f64 x 60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 a 120) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))) (cbrt.f64 (pow.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 2)) (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)) 1 (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a 120)) (cbrt.f64 (*.f64 (*.f64 a a) 14400)) (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 a a) 14400)) (cbrt.f64 (*.f64 a 120)) (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 120 (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)) (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a 120) 1 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 120) (*.f64 (cbrt.f64 14400) a) (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a 120 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (*.f64 (cbrt.f64 (*.f64 a a)) 120) (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a 120) (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 a 120)) (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 120) (*.f64 (sqrt.f64 120) a) (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 120)) (cbrt.f64 14400) (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (sqrt.f64 120)) (sqrt.f64 120) (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 60) (*.f64 (cbrt.f64 3600) (/.f64 (-.f64 x y) (-.f64 z t))) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 60) (*.f64 (sqrt.f64 60) (/.f64 (-.f64 x y) (-.f64 z t))) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z))) (pow.f64 (cbrt.f64 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z))) 2) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 60 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 60 (*.f64 a 120))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (-.f64 t z)) 0) (/.f64 y (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 t z)) (*.f64 (/.f64 y (-.f64 t z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 y (-.f64 t z))) (/.f64 y (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 t z)) (*.f64 0 (/.f64 y (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 z t)) (/.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 t z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 t z)) 2)) (cbrt.f64 (/.f64 y (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 t z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) y) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 t z)) 2)) (cbrt.f64 y)) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 t z)) 2)) (cbrt.f64 (neg.f64 y))) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (*.f64 y y))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 y) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 t z)) 2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 y)) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 t z)) 2))) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (cbrt.f64 (pow.f64 (-.f64 t z) -2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y -1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 t z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 t z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 t z)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (-.f64 t z)) 0) (/.f64 x (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 x (-.f64 t z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (-.f64 t z))) (/.f64 x (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 t z)) (*.f64 0 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 z t)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 t z))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 t z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (cbrt.f64 (*.f64 x x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (*.f64 x (cbrt.f64 (pow.f64 (-.f64 t z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 t z)) 2)) (cbrt.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 t z))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 t z)) 2)) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 t z)) 2)) (cbrt.f64 x)) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) x) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 t z)) 2))) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 t z)) 2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 t z) -2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (-.f64 t z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (-.f64 t z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (-.f64 t z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 t z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 t z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 t z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 t z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 t z)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z t)) (/.f64 y (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 0) (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 x y) (-.f64 z t))) (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 0 (/.f64 (-.f64 x y) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 z t)) (*.f64 (/.f64 y (-.f64 z t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (-.f64 t z)) (pow.f64 (-.f64 t z) -2)) (neg.f64 (*.f64 (*.f64 (-.f64 t z) x) (pow.f64 (-.f64 t z) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 y (-.f64 t z)) (pow.f64 (-.f64 t z) -2)) (*.f64 (*.f64 (-.f64 t z) x) (pow.f64 (-.f64 t z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 y x) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 z t)) (/.f64 y (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 y (-.f64 t z)) 0) (/.f64 x (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 t z) (-.f64 y x)) (pow.f64 (-.f64 t z) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 1 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 y x) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (/.f64 y (-.f64 z t)) (/.f64 x (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (-.f64 (*.f64 y (cbrt.f64 (pow.f64 (-.f64 t z) -2))) (*.f64 x (cbrt.f64 (pow.f64 (-.f64 t z) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z t)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 z t)))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 z t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 z t))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 z t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 t z) (-.f64 x y)) (/.f64 1 (neg.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 t z)) 2)) (+.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 t z)) 2)) (cbrt.f64 (*.f64 (*.f64 y x) (pow.f64 (-.f64 t z) -2))))) (-.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 x (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 t z) (-.f64 y x)) (pow.f64 (-.f64 t z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 t z) (-.f64 x y)) (neg.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2)) (cbrt.f64 (*.f64 (-.f64 t z) (-.f64 y x)))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) -1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 t z) (-.f64 y x)) 1) (pow.f64 (-.f64 t z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 t z) (-.f64 y x))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 y x)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (-.f64 y x)) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 t z) (-.f64 x y)) 1) (neg.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 x y) 1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 t z) (-.f64 y x)) (cbrt.f64 (-.f64 t z))) (pow.f64 (cbrt.f64 (-.f64 t z)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 t z) (-.f64 y x)) (-.f64 z t)) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 t z) (-.f64 y x)) (pow.f64 (cbrt.f64 (-.f64 t z)) 4)) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 t z) (-.f64 y x)) (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (pow.f64 (cbrt.f64 (-.f64 t z)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (cbrt.f64 (-.f64 t z))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) 1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 t z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 t z) (-.f64 x y)) (-.f64 t z)) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 y x) -1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) (-.f64 t z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) (neg.f64 x))) (pow.f64 (cbrt.f64 (-.f64 t z)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) (-.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 x) (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (*.f64 (-.f64 t z) (/.f64 y (cbrt.f64 (-.f64 t z))))) (*.f64 (-.f64 t z) (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (*.f64 (-.f64 z t) (/.f64 y (cbrt.f64 (-.f64 t z))))) (*.f64 (-.f64 z t) (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (*.f64 (-.f64 t z) (/.f64 x (cbrt.f64 (-.f64 t z))))) (*.f64 (-.f64 t z) (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) (/.f64 x (cbrt.f64 (-.f64 t z))))) (pow.f64 (cbrt.f64 (-.f64 t z)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) (-.f64 t z)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) x)) (pow.f64 (cbrt.f64 (-.f64 t z)) (+.f64 2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 t z))) (-.f64 z t)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) (neg.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 y) (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (*.f64 (-.f64 z t) (/.f64 x (cbrt.f64 (-.f64 t z))))) (*.f64 (-.f64 z t) (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y (-.f64 t z)) (pow.f64 (-.f64 t z) 2)) (*.f64 (pow.f64 (-.f64 t z) 2) (*.f64 (-.f64 t z) x))) (*.f64 (pow.f64 (-.f64 t z) 2) (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y x) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (-.f64 y x) (-.f64 z t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 (-.f64 t z)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 t z)) 2)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (-.f64 t z)) (/.f64 y (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 t z))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 t z)) 2))) (/.f64 y (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 z t)) (/.f64 y (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 t z)) 2)) (/.f64 y (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (-.f64 z t)) (/.f64 y (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 y (-.f64 z t)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 t z)) y (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (*.f64 y (cbrt.f64 (pow.f64 (-.f64 t z) -2))) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 1 (-.f64 z t)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (/.f64 (cbrt.f64 (*.f64 y y)) (-.f64 t z)) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 t z)) 2)) (cbrt.f64 (/.f64 y (-.f64 t z))) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 t z)) 1 (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x (-.f64 t z)) (/.f64 y (-.f64 t z)))))))"]],"rules":[["egg-rr",99],["egg-rr",41],["egg-rr",41],["egg-rr",47]],"time":44.22998046875,"type":"rewrite"},{"count":[[384,352]],"inputs":[["(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 60 (-.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 x z)))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (-.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 x z)))) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (-.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 x z)))) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y (pow.f64 z 3))))))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (-.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 x z)))) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 y (pow.f64 z 4))))) (*.f64 60 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y (pow.f64 z 3)))))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (*.f64 y z))) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (*.f64 y z))) (pow.f64 t 2))) (*.f64 60 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) x)) (*.f64 -1 (*.f64 y (pow.f64 z 2)))) (pow.f64 t 3))))))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (*.f64 -60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (+.f64 (*.f64 -60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t)) (*.f64 -60 (/.f64 (-.f64 (*.f64 -1 (*.f64 y (pow.f64 z 2))) (*.f64 -1 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3))))))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y t) (/.f64 x t))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2)))))) (*.f64 60 (-.f64 (/.f64 y t) (/.f64 x t)))))","(+.f64 (*.f64 60 (*.f64 (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 3))) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2))) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2)))))) (*.f64 60 (-.f64 (/.f64 y t) (/.f64 x t))))))","(+.f64 (*.f64 60 (*.f64 (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 3))) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2))) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2)))))) (+.f64 (*.f64 60 (-.f64 (/.f64 y t) (/.f64 x t))) (*.f64 60 (*.f64 (pow.f64 z 3) (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 4))) (*.f64 -1 (/.f64 y (pow.f64 t 4))))))))))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 t x) (*.f64 y t)) (pow.f64 z 2))) (*.f64 60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) z))))","(+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 (pow.f64 t 2) x) (*.f64 y (pow.f64 t 2))) (pow.f64 z 3))) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 t x) (*.f64 y t)) (pow.f64 z 2))) (*.f64 60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) z)))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 (*.f64 t x) (*.f64 y t)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 t x) (*.f64 y t)) (pow.f64 z 2))) (*.f64 -60 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) x)) (*.f64 -1 (*.f64 y (pow.f64 t 2)))) (pow.f64 z 3))))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))))","(/.f64 y t)","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (/.f64 y t))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (/.f64 y t)))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)))))","(/.f64 y t)","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (/.f64 y t))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (/.f64 y t)))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)))))","(/.f64 y t)","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (/.f64 y t))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (/.f64 y t)))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))))","(*.f64 -1 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))))","(*.f64 -1 (/.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (*.f64 -1 (/.f64 x z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))))))","(/.f64 x t)","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (/.f64 x t))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t)))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t))))","(/.f64 x t)","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (/.f64 x t))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t)))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t))))","(/.f64 x t)","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (/.f64 x t))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t)))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t))))","(*.f64 -1 (/.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (*.f64 -1 (/.f64 x z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))))))","(*.f64 -1 (/.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (*.f64 -1 (/.f64 x z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))))))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(-.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 x z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 -1 (/.f64 x z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y (pow.f64 z 3)))))) (*.f64 -1 (/.f64 x z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y (pow.f64 z 3)))) (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 y (pow.f64 z 4))))))) (*.f64 -1 (/.f64 x z)))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 t 2))) (/.f64 y t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 t 2))) (/.f64 x t)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))) (/.f64 y t))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3))) (/.f64 x t))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))) (/.f64 y t)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)))))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(-.f64 (+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))) (/.f64 (*.f64 z x) (pow.f64 t 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y (pow.f64 z 2))) (*.f64 -1 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t)))) (/.f64 (*.f64 z x) (pow.f64 t 2)))","(-.f64 (+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y (pow.f64 z 2))) (*.f64 -1 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))))) (+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))))","(-.f64 (/.f64 y t) (/.f64 x t))","(-.f64 (+.f64 (/.f64 y t) (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2)))))) (/.f64 x t))","(-.f64 (+.f64 (/.f64 y t) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 3))) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2)) (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2))))))) (/.f64 x t))","(-.f64 (+.f64 (*.f64 (pow.f64 z 3) (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 4))) (*.f64 -1 (/.f64 y (pow.f64 t 4))))) (+.f64 (/.f64 y t) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 3))) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2)) (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2)))))))) (/.f64 x t))","(/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) z)","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 y t) (pow.f64 z 2)) (*.f64 -1 (/.f64 x z))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2)))) (+.f64 (/.f64 (*.f64 y t) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3)) (*.f64 -1 (/.f64 x z)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))) (+.f64 (/.f64 (*.f64 y t) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3)) (*.f64 -1 (/.f64 x z))))))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (/.f64 (*.f64 t x) (pow.f64 z 2))) (/.f64 (*.f64 y t) (pow.f64 z 2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) x)) (*.f64 -1 (*.f64 y (pow.f64 t 2)))) (pow.f64 z 3))))) (/.f64 (*.f64 y t) (pow.f64 z 2)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4)) (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) x)) (*.f64 -1 (*.f64 y (pow.f64 t 2)))) (pow.f64 z 3)))))) (+.f64 (/.f64 (*.f64 y t) (pow.f64 z 2)) (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 -60 x) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 60 (-.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 x z)))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 x y) 60) z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (-.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 x z)))) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 x y) z) (/.f64 (/.f64 (*.f64 t (-.f64 x y)) z) z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (-.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 x z)))) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y (pow.f64 z 3))))))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 x y) z) (fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (pow.f64 z 3))))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (-.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 x z)))) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 y (pow.f64 z 4))))) (*.f64 60 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y (pow.f64 z 3)))))))))","(fma.f64 120 a (*.f64 60 (+.f64 (+.f64 (/.f64 (-.f64 x y) z) (/.f64 (/.f64 (*.f64 t (-.f64 x y)) z) z)) (fma.f64 (*.f64 t t) (/.f64 (-.f64 x y) (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 t 3) (-.f64 x y)) (pow.f64 z 4))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) 60) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (*.f64 y z))) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 t t)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 -1 (*.f64 z x)) (*.f64 -1 (*.f64 y z))) (pow.f64 t 2))) (*.f64 60 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 z 2) x)) (*.f64 -1 (*.f64 y (pow.f64 z 2)))) (pow.f64 t 3))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 t t)) (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3))))))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t)))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 x y) -60) t))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (*.f64 -60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))))","(fma.f64 120 a (fma.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 t t)) (/.f64 (*.f64 (-.f64 x y) -60) t)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 y z) (*.f64 z x)) (pow.f64 t 2))) (+.f64 (*.f64 -60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t)) (*.f64 -60 (/.f64 (-.f64 (*.f64 -1 (*.f64 y (pow.f64 z 2))) (*.f64 -1 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3))))))","(fma.f64 120 a (fma.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (*.f64 t t)) (*.f64 -60 (+.f64 (/.f64 (-.f64 x y) t) (/.f64 (*.f64 (*.f64 z z) (-.f64 x y)) (pow.f64 t 3))))))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y t) (/.f64 x t))))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) 60) t))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2)))))) (*.f64 60 (-.f64 (/.f64 y t) (/.f64 x t)))))","(fma.f64 120 a (*.f64 60 (+.f64 (*.f64 z (/.f64 (-.f64 y x) (*.f64 t t))) (/.f64 (-.f64 y x) t))))","(+.f64 (*.f64 60 (*.f64 (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 3))) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2))) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2)))))) (*.f64 60 (-.f64 (/.f64 y t) (/.f64 x t))))))","(fma.f64 60 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (fma.f64 120 a (*.f64 60 (+.f64 (*.f64 z (/.f64 (-.f64 y x) (*.f64 t t))) (/.f64 (-.f64 y x) t)))))","(+.f64 (*.f64 60 (*.f64 (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 3))) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2))) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2)))))) (+.f64 (*.f64 60 (-.f64 (/.f64 y t) (/.f64 x t))) (*.f64 60 (*.f64 (pow.f64 z 3) (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 4))) (*.f64 -1 (/.f64 y (pow.f64 t 4))))))))))","(fma.f64 60 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (fma.f64 120 a (*.f64 60 (+.f64 (+.f64 (*.f64 z (/.f64 (-.f64 y x) (*.f64 t t))) (/.f64 (-.f64 y x) t)) (*.f64 (pow.f64 z 3) (/.f64 (-.f64 y x) (pow.f64 t 4)))))))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) z)))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 x y) 60) z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 t x) (*.f64 y t)) (pow.f64 z 2))) (*.f64 60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) z))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 x y) z) (/.f64 (/.f64 (*.f64 t (-.f64 x y)) z) z))))","(+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 (pow.f64 t 2) x) (*.f64 y (pow.f64 t 2))) (pow.f64 z 3))) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 t x) (*.f64 y t)) (pow.f64 z 2))) (*.f64 60 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) z)))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 x y) z) (fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (pow.f64 z 3))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 (*.f64 t x) (*.f64 y t)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (/.f64 (*.f64 (*.f64 60 t) (-.f64 x y)) (*.f64 z z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 (*.f64 t x) (*.f64 y t)) (pow.f64 z 2))) (*.f64 -60 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) x)) (*.f64 -1 (*.f64 y (pow.f64 t 2)))) (pow.f64 z 3))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (fma.f64 60 (/.f64 (/.f64 (*.f64 t (-.f64 x y)) z) z) (/.f64 (*.f64 -60 (*.f64 (*.f64 t t) (-.f64 y x))) (pow.f64 z 3)))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 y) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 -60 x) (*.f64 60 y)) (-.f64 t z)))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))","(-.f64 (neg.f64 (/.f64 y z)) (/.f64 (*.f64 y t) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2)))))","(-.f64 (-.f64 (neg.f64 (/.f64 y z)) (/.f64 (*.f64 y (*.f64 t t)) (pow.f64 z 3))) (/.f64 (*.f64 y t) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 y z)) (/.f64 (*.f64 y (*.f64 t t)) (pow.f64 z 3))) (/.f64 (*.f64 y t) (*.f64 z z))) (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4)))","(/.f64 y t)","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (/.f64 y t))","(+.f64 (/.f64 (/.f64 (*.f64 y z) t) t) (/.f64 y t))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (/.f64 y t)))","(+.f64 (/.f64 (/.f64 (*.f64 y z) t) t) (+.f64 (/.f64 (*.f64 y (*.f64 z z)) (pow.f64 t 3)) (/.f64 y t)))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)))))","(+.f64 (/.f64 (/.f64 (*.f64 y z) t) t) (+.f64 (/.f64 (*.f64 y (*.f64 z z)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)))))","(/.f64 y t)","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (/.f64 y t))","(+.f64 (/.f64 (/.f64 (*.f64 y z) t) t) (/.f64 y t))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (/.f64 y t)))","(+.f64 (/.f64 (/.f64 (*.f64 y z) t) t) (+.f64 (/.f64 (*.f64 y (*.f64 z z)) (pow.f64 t 3)) (/.f64 y t)))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)))))","(+.f64 (/.f64 (/.f64 (*.f64 y z) t) t) (+.f64 (/.f64 (*.f64 y (*.f64 z z)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)))))","(/.f64 y t)","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (/.f64 y t))","(+.f64 (/.f64 (/.f64 (*.f64 y z) t) t) (/.f64 y t))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (/.f64 y t)))","(+.f64 (/.f64 (/.f64 (*.f64 y z) t) t) (+.f64 (/.f64 (*.f64 y (*.f64 z z)) (pow.f64 t 3)) (/.f64 y t)))","(+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)))))","(+.f64 (/.f64 (/.f64 (*.f64 y z) t) t) (+.f64 (/.f64 (*.f64 y (*.f64 z z)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)))))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))","(-.f64 (neg.f64 (/.f64 y z)) (/.f64 (*.f64 y t) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2)))))","(-.f64 (-.f64 (neg.f64 (/.f64 y z)) (/.f64 (*.f64 y (*.f64 t t)) (pow.f64 z 3))) (/.f64 (*.f64 y t) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 y z)) (/.f64 (*.f64 y (*.f64 t t)) (pow.f64 z 3))) (/.f64 (*.f64 y t) (*.f64 z z))) (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4)))","(*.f64 -1 (/.f64 y z))","(neg.f64 (/.f64 y z))","(+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))","(-.f64 (neg.f64 (/.f64 y z)) (/.f64 (*.f64 y t) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2)))))","(-.f64 (-.f64 (neg.f64 (/.f64 y z)) (/.f64 (*.f64 y (*.f64 t t)) (pow.f64 z 3))) (/.f64 (*.f64 y t) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 y t) (pow.f64 z 2))))))","(-.f64 (-.f64 (-.f64 (neg.f64 (/.f64 y z)) (/.f64 (*.f64 y (*.f64 t t)) (pow.f64 z 3))) (/.f64 (*.f64 y t) (*.f64 z z))) (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4)))","(*.f64 -1 (/.f64 x z))","(neg.f64 (/.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (*.f64 -1 (/.f64 x z)))","(-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 t x) z) z)) (/.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 t x) z) z)) (/.f64 x z)) (/.f64 (*.f64 (*.f64 t t) x) (pow.f64 z 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 (pow.f64 t 3)) x) (pow.f64 z 4)) (/.f64 x z)) (/.f64 (*.f64 (*.f64 t t) x) (pow.f64 z 3))) (/.f64 (/.f64 (*.f64 t x) z) z))","(/.f64 x t)","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (/.f64 x t))","(+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 x t))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t)))","(+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (+.f64 (/.f64 (*.f64 (*.f64 z z) x) (pow.f64 t 3)) (/.f64 x t)))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t))))","(+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (*.f64 z z) x) (pow.f64 t 3)) (/.f64 x t))))","(/.f64 x t)","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (/.f64 x t))","(+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 x t))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t)))","(+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (+.f64 (/.f64 (*.f64 (*.f64 z z) x) (pow.f64 t 3)) (/.f64 x t)))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t))))","(+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (*.f64 z z) x) (pow.f64 t 3)) (/.f64 x t))))","(/.f64 x t)","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (/.f64 x t))","(+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 x t))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t)))","(+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (+.f64 (/.f64 (*.f64 (*.f64 z z) x) (pow.f64 t 3)) (/.f64 x t)))","(+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)) (/.f64 x t))))","(+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (*.f64 z z) x) (pow.f64 t 3)) (/.f64 x t))))","(*.f64 -1 (/.f64 x z))","(neg.f64 (/.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (*.f64 -1 (/.f64 x z)))","(-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 t x) z) z)) (/.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 t x) z) z)) (/.f64 x z)) (/.f64 (*.f64 (*.f64 t t) x) (pow.f64 z 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 (pow.f64 t 3)) x) (pow.f64 z 4)) (/.f64 x z)) (/.f64 (*.f64 (*.f64 t t) x) (pow.f64 z 3))) (/.f64 (/.f64 (*.f64 t x) z) z))","(*.f64 -1 (/.f64 x z))","(neg.f64 (/.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (*.f64 -1 (/.f64 x z)))","(-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 t x) z) z)) (/.f64 x z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3)))))","(-.f64 (-.f64 (neg.f64 (/.f64 (/.f64 (*.f64 t x) z) z)) (/.f64 x z)) (/.f64 (*.f64 (*.f64 t t) x) (pow.f64 z 3)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 x z)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 (pow.f64 t 3)) x) (pow.f64 z 4)) (/.f64 x z)) (/.f64 (*.f64 (*.f64 t t) x) (pow.f64 z 3))) (/.f64 (/.f64 (*.f64 t x) z) z))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(/.f64 x (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(-.f64 (*.f64 -1 (/.f64 y z)) (*.f64 -1 (/.f64 x z)))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 -1 (/.f64 x z)))","(+.f64 (/.f64 (-.f64 x y) z) (/.f64 (/.f64 (*.f64 t (-.f64 x y)) z) z))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y (pow.f64 z 3)))))) (*.f64 -1 (/.f64 x z)))","(+.f64 (/.f64 (-.f64 x y) z) (fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (pow.f64 z 3))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 3)) (/.f64 y (pow.f64 z 3)))) (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 4)) (/.f64 y (pow.f64 z 4))))))) (*.f64 -1 (/.f64 x z)))","(+.f64 (fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (fma.f64 (*.f64 t t) (/.f64 (-.f64 x y) (pow.f64 z 3)) (/.f64 (*.f64 (pow.f64 t 3) (-.f64 x y)) (pow.f64 z 4)))) (/.f64 (-.f64 x y) z))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 t 2))) (/.f64 y t)) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 t 2))) (/.f64 x t)))","(-.f64 (+.f64 (/.f64 y t) (/.f64 (*.f64 z (-.f64 y x)) (*.f64 t t))) (/.f64 x t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))) (/.f64 y t))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3))) (/.f64 x t))))","(-.f64 (+.f64 (-.f64 (/.f64 y t) (/.f64 (*.f64 (*.f64 z z) x) (pow.f64 t 3))) (/.f64 (*.f64 z (-.f64 y x)) (*.f64 t t))) (-.f64 (/.f64 x t) (/.f64 (*.f64 y (*.f64 z z)) (pow.f64 t 3))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))) (/.f64 y t)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y z) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (/.f64 x t) (*.f64 -1 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)))))))","(-.f64 (+.f64 (-.f64 (-.f64 (/.f64 y t) (/.f64 (*.f64 (*.f64 z z) x) (pow.f64 t 3))) (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (/.f64 (*.f64 z (-.f64 y x)) (*.f64 t t))) (-.f64 (-.f64 (/.f64 x t) (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4))) (/.f64 (*.f64 y (*.f64 z z)) (pow.f64 t 3))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))) (/.f64 (*.f64 z x) (pow.f64 t 2)))","(+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 z (-.f64 y x)) (*.f64 t t)))","(-.f64 (+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y (pow.f64 z 2))) (*.f64 -1 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t)))) (/.f64 (*.f64 z x) (pow.f64 t 2)))","(+.f64 (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (-.f64 y x) t)) (/.f64 (*.f64 z (-.f64 y x)) (*.f64 t t)))","(-.f64 (+.f64 (/.f64 (*.f64 y z) (pow.f64 t 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y (pow.f64 z 2))) (*.f64 -1 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) t))))) (+.f64 (/.f64 (*.f64 z x) (pow.f64 t 2)) (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))))","(-.f64 (+.f64 (+.f64 (+.f64 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4)) (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3))) (/.f64 (-.f64 y x) t)) (/.f64 (*.f64 z (-.f64 y x)) (*.f64 t t))) (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4)))","(-.f64 (/.f64 y t) (/.f64 x t))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 y t) (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2)))))) (/.f64 x t))","(+.f64 (*.f64 z (/.f64 (-.f64 y x) (*.f64 t t))) (/.f64 (-.f64 y x) t))","(-.f64 (+.f64 (/.f64 y t) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 3))) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2)) (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2))))))) (/.f64 x t))","(+.f64 (fma.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z) (*.f64 z (/.f64 (-.f64 y x) (*.f64 t t)))) (/.f64 (-.f64 y x) t))","(-.f64 (+.f64 (*.f64 (pow.f64 z 3) (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 4))) (*.f64 -1 (/.f64 y (pow.f64 t 4))))) (+.f64 (/.f64 y t) (+.f64 (*.f64 (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 3))) (*.f64 -1 (/.f64 y (pow.f64 t 3)))) (pow.f64 z 2)) (*.f64 z (-.f64 (*.f64 -1 (/.f64 x (pow.f64 t 2))) (*.f64 -1 (/.f64 y (pow.f64 t 2)))))))) (/.f64 x t))","(+.f64 (*.f64 (pow.f64 z 3) (/.f64 (-.f64 y x) (pow.f64 t 4))) (+.f64 (fma.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z) (*.f64 z (/.f64 (-.f64 y x) (*.f64 t t)))) (/.f64 (-.f64 y x) t)))","(/.f64 (-.f64 (*.f64 -1 y) (*.f64 -1 x)) z)","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (/.f64 (*.f64 t x) (pow.f64 z 2))) (+.f64 (/.f64 (*.f64 y t) (pow.f64 z 2)) (*.f64 -1 (/.f64 x z))))","(+.f64 (/.f64 (-.f64 x y) z) (/.f64 (/.f64 (*.f64 t (-.f64 x y)) z) z))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2)))) (+.f64 (/.f64 (*.f64 y t) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3)) (*.f64 -1 (/.f64 x z)))))","(-.f64 (+.f64 (+.f64 (neg.f64 (/.f64 y z)) (/.f64 (*.f64 (*.f64 t t) x) (pow.f64 z 3))) (/.f64 (/.f64 (*.f64 t (-.f64 x y)) z) z)) (-.f64 (/.f64 (*.f64 y (*.f64 t t)) (pow.f64 z 3)) (/.f64 x z)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 y z)) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3)) (/.f64 (*.f64 t x) (pow.f64 z 2))))) (+.f64 (/.f64 (*.f64 y t) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3)) (*.f64 -1 (/.f64 x z))))))","(-.f64 (+.f64 (+.f64 (-.f64 (/.f64 (/.f64 (*.f64 t x) z) z) (/.f64 y z)) (/.f64 (*.f64 (*.f64 t t) x) (pow.f64 z 3))) (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (+.f64 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4)) (+.f64 (-.f64 (/.f64 (*.f64 y t) (*.f64 z z)) (/.f64 x z)) (/.f64 (*.f64 y (*.f64 t t)) (pow.f64 z 3)))))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(/.f64 (-.f64 x y) z)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (/.f64 (*.f64 t x) (pow.f64 z 2))) (/.f64 (*.f64 y t) (pow.f64 z 2)))","(+.f64 (/.f64 (-.f64 x y) z) (/.f64 (/.f64 (*.f64 t (-.f64 x y)) z) z))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) x)) (*.f64 -1 (*.f64 y (pow.f64 t 2)))) (pow.f64 z 3))))) (/.f64 (*.f64 y t) (pow.f64 z 2)))","(+.f64 (/.f64 (-.f64 x y) z) (fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (pow.f64 z 3))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4)) (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (/.f64 (*.f64 t x) (pow.f64 z 2)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 (pow.f64 t 2) x)) (*.f64 -1 (*.f64 y (pow.f64 t 2)))) (pow.f64 z 3)))))) (+.f64 (/.f64 (*.f64 y t) (pow.f64 z 2)) (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (-.f64 x y) z) (fma.f64 t (/.f64 (-.f64 x y) (*.f64 z z)) (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (pow.f64 z 3))))) (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4)))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(/.f64 x (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(/.f64 x (-.f64 z t))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))"]],"time":597.218994140625,"type":"simplify"},{"compiler":[[8558,3923]],"time":77.678955078125,"type":"eval"},{"alts":[["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","next",0.140625],["(fma.f64 (sqrt.f64 60) (*.f64 (sqrt.f64 60) (/.f64 (-.f64 x y) (-.f64 z t))) (*.f64 a 120))","fresh",0.240566259768442],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","done",0.12890625],["(fma.f64 (sqrt.f64 120) (*.f64 (sqrt.f64 120) a) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))","fresh",0.546875]],"compiler":[[17,12],[21,16],[21,13],[21,16],[17,12],[21,16],[21,16]],"count":[[356,4]],"kept":[{"done":[0,0],"fresh":[3,3],"new":[352,0],"picked":[1,1]}],"min-error":[0],"time":170.64697265625,"type":"prune"},{"compiler":[[44,19]],"locations":[["(/.f64 60 (-.f64 t z))",0.0078125,true],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))",0.0234375,true],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))",0.23828125,true]],"time":8.694091796875,"type":"localize"},{"count":[[3,132]],"series":[["(/.f64 60 (-.f64 t z))","z","-inf",0.261962890625],["(/.f64 60 (-.f64 t z))","z","inf",0.239990234375],["(/.f64 60 (-.f64 t z))","z","0",0.282958984375],["(/.f64 60 (-.f64 t z))","t","-inf",0.22119140625],["(/.f64 60 (-.f64 t z))","t","inf",0.323974609375],["(/.f64 60 (-.f64 t z))","t","0",0.358154296875],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","z","-inf",0.179931640625],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","z","inf",0.208984375],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","z","0",0.2109375],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","t","-inf",0.20703125],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","t","inf",0.18310546875],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","t","0",0.23681640625],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","x","-inf",0.172119140625],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","x","inf",0.1748046875],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","x","0",0.203125],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","y","-inf",0.18115234375],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","y","inf",0.218017578125],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","y","0",0.390869140625],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","a","-inf",0.1611328125],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","a","inf",0.18017578125],["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","a","0",0.1669921875],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","z","-inf",0.22998046875],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","z","inf",0.212890625],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","z","0",0.218994140625],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","t","-inf",0.212890625],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","t","inf",0.22998046875],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","t","0",0.22509765625],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","x","-inf",0.18994140625],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","x","inf",0.171875],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","x","0",0.1689453125],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","y","-inf",0.19091796875],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","y","inf",0.179931640625],["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","y","0",0.237060546875]],"time":7.718994140625,"type":"series"},{"count":[[3,176]],"inputs":[["(*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))","(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","(/.f64 60 (-.f64 t z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y 60) (-.f64 t z)) (*.f64 (/.f64 -60 (-.f64 z t)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -60 (-.f64 z t)) (neg.f64 x)) (/.f64 (*.f64 y 60) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (/.f64 (*.f64 y 60) (-.f64 t z))) (*.f64 1 (*.f64 (/.f64 -60 (-.f64 z t)) (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 0) (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) (*.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 y 60) (-.f64 t z)) 1) (*.f64 (*.f64 (/.f64 -60 (-.f64 z t)) (neg.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) (*.f64 0 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 y 60) (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (-.f64 t z) 60)) (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) (pow.f64 (cbrt.f64 (-.f64 t z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -60 (-.f64 z t))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (/.f64 -60 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 2)) (cbrt.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (cbrt.f64 (/.f64 -60 (-.f64 z t)))) (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 -60 (-.f64 z t)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (/.f64 60 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 -60 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -60 (-.f64 z t)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) 60) (/.f64 1 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 60)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 60 (-.f64 z t)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 60 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) -60) (/.f64 1 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (/.f64 (-.f64 t z) 60))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) 1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) (cbrt.f64 (/.f64 216000 (-.f64 t z)))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 y x) 60) -1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 2)) (cbrt.f64 (*.f64 (-.f64 y x) 60))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) 60) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 60) (*.f64 (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2)) (-.f64 y x))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -60) (*.f64 (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2)) (-.f64 y x))) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 y x) -60) 1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 216000 (-.f64 t z))) (-.f64 y x)) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) (/.f64 60 (cbrt.f64 (pow.f64 (-.f64 t z) 2)))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (-.f64 y x) 60)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) (cbrt.f64 (-.f64 t z))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 y x) -60) (cbrt.f64 (-.f64 t z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 y x) 60) -1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (-.f64 y x) 60) (cbrt.f64 (-.f64 t z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x y) (neg.f64 (/.f64 (-.f64 t z) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -60 (/.f64 (-.f64 x y) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 t z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 60 (-.f64 z t)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (-.f64 y x) -60) (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 -60 (-.f64 z t)) (*.f64 (/.f64 -60 (-.f64 z t)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -60 (-.f64 z t)) y (*.f64 (/.f64 -60 (-.f64 z t)) (neg.f64 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 a 120) (/.f64 (*.f64 y 60) (-.f64 t z))) (*.f64 (/.f64 -60 (-.f64 z t)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 y 60) (-.f64 t z)) (+.f64 (*.f64 (/.f64 -60 (-.f64 z t)) (neg.f64 x)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) 0) (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) (*.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))) (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) (*.f64 0 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a 120) (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 a 120) (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))) (cbrt.f64 (pow.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) 2)) (cbrt.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a 120) 1 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a 120) (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 120)) (cbrt.f64 14400) (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a 120)) (cbrt.f64 (*.f64 14400 (*.f64 a a))) (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (cbrt.f64 (*.f64 (*.f64 a a) 1728000)) (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 120 a (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (sqrt.f64 120)) (sqrt.f64 120) (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y x) 60) (/.f64 1 (-.f64 t z)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y x) (/.f64 -60 (-.f64 z t)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 1 (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (/.f64 -60 (-.f64 z t))) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))) (/.f64 60 (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -60 (-.f64 z t))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2)) (-.f64 y x)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 -60 (-.f64 z t)) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 2)) (cbrt.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -60 (-.f64 z t)) (-.f64 y x) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 t z)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 (-.f64 y x) -60) (-.f64 z t)) 2)) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y x) (cbrt.f64 (/.f64 -60 (-.f64 z t)))) (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2)) (*.f64 a 120))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -60 (-.f64 z t)) 0) (/.f64 -60 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -60 (-.f64 z t)) (*.f64 (/.f64 -60 (-.f64 z t)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 -60 (-.f64 z t))) (/.f64 -60 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -60 (-.f64 z t)) (*.f64 0 (/.f64 -60 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 60 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (/.f64 (-.f64 t z) 60)) (/.f64 60 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -60 (-.f64 z t)) (/.f64 0 (/.f64 (-.f64 t z) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 z t)) (/.f64 60 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 60) (/.f64 (cbrt.f64 3600) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 60 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 216000 (-.f64 t z))) (pow.f64 (cbrt.f64 (-.f64 t z)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -60 (-.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2)) (cbrt.f64 (/.f64 -60 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 60 (/.f64 1 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -60 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) 60)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -60 (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -60 (/.f64 1 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 60) (cbrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 60) (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 60) (/.f64 (sqrt.f64 60) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) (/.f64 60 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 t z) 60))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -60 (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 216000 (-.f64 t z))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 t z))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (-.f64 z t) 60))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (/.f64 (-.f64 t z) 60) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (/.f64 (-.f64 t z) -60))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 216000 (-.f64 t z))) 1) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) 60) (*.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (-.f64 t z) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -60 (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 216000 (-.f64 t z))) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 60 (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2)) (cbrt.f64 60)) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2)) (cbrt.f64 -60)) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 t z))) 60) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (sqrt.f64 60) (cbrt.f64 (-.f64 t z))) (sqrt.f64 60)) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -60 (-.f64 z t))) (cbrt.f64 3600)) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 60) (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -60) (cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 2))) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 60) (/.f64 (sqrt.f64 60) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 216000 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 60 (cbrt.f64 (pow.f64 (-.f64 t z) 2))) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 (/.f64 216000 (-.f64 t z))) 1) (cbrt.f64 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -60 (cbrt.f64 (-.f64 t z))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 60 -1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (/.f64 216000 (-.f64 t z)))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 t z) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -60 (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 t z) 60) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -60 (-.f64 z t))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -60 (-.f64 z t))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -60 (-.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 60 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -60 (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 60 (-.f64 z t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) -60))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -60 (-.f64 z t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 -60 (-.f64 z t)) 3))))))"]],"rules":[["egg-rr",59],["egg-rr",46],["egg-rr",71]],"time":35.493896484375,"type":"rewrite"},{"count":[[308,260]],"inputs":[["(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (/.f64 (*.f64 (*.f64 60 t) (-.f64 x y)) (*.f64 z z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (+.f64 (/.f64 (*.f64 t (-.f64 x y)) (*.f64 z z)) (/.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (+.f64 (+.f64 (/.f64 (/.f64 (*.f64 (pow.f64 t 3) (/.f64 (/.f64 (-.f64 x y) z) z)) z) z) (/.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) z)) (/.f64 (*.f64 t (-.f64 x y)) (*.f64 z z)))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(/.f64 (*.f64 60 (-.f64 y x)) t)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(/.f64 (*.f64 60 (-.f64 y x)) t)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(/.f64 (*.f64 60 (-.f64 y x)) t)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)))))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 -60 x) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 y) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (/.f64 (+.f64 (*.f64 60 y) (*.f64 -60 x)) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(fma.f64 120 a (/.f64 (*.f64 -60 (-.f64 y x)) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (/.f64 (*.f64 (*.f64 60 t) (-.f64 x y)) (*.f64 z z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (*.f64 t (-.f64 x y)) (*.f64 z z)) (/.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) z)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 60 (+.f64 (+.f64 (/.f64 (/.f64 (*.f64 (pow.f64 t 3) (/.f64 (/.f64 (-.f64 x y) z) z)) z) z) (/.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 x y)) (*.f64 z z)) z)) (/.f64 (*.f64 t (-.f64 x y)) (*.f64 z z))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) t)))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t)))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (+.f64 (+.f64 (/.f64 (*.f64 (*.f64 z z) (-.f64 y x)) (pow.f64 t 3)) (/.f64 (*.f64 (-.f64 y x) z) (*.f64 t t))) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 -60 (-.f64 y x)) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z))) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(+.f64 (*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 -60 (-.f64 y x)) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z))) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(+.f64 (*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 (*.f64 (*.f64 t t) (-.f64 y x)) (pow.f64 z 3)) (/.f64 (/.f64 (*.f64 t (-.f64 y x)) z) z)))) (*.f64 120 a))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(fma.f64 -60 (/.f64 (/.f64 t z) z) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(fma.f64 -60 (+.f64 (/.f64 (/.f64 t z) z) (/.f64 (*.f64 t t) (pow.f64 z 3))) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))","(+.f64 (*.f64 -60 (+.f64 (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 (*.f64 t t) (pow.f64 z 3))) (/.f64 (/.f64 t z) z))) (/.f64 -60 z))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(fma.f64 60 (/.f64 (/.f64 z t) t) (/.f64 60 t))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(*.f64 60 (+.f64 (+.f64 (/.f64 (/.f64 z t) t) (/.f64 1 t)) (/.f64 (*.f64 z z) (pow.f64 t 3))))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (*.f64 60 (+.f64 (+.f64 (/.f64 (/.f64 z t) t) (/.f64 1 t)) (/.f64 (*.f64 z z) (pow.f64 t 3)))))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(fma.f64 60 (/.f64 (/.f64 z t) t) (/.f64 60 t))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(*.f64 60 (+.f64 (+.f64 (/.f64 (/.f64 z t) t) (/.f64 1 t)) (/.f64 (*.f64 z z) (pow.f64 t 3))))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (*.f64 60 (+.f64 (+.f64 (/.f64 (/.f64 z t) t) (/.f64 1 t)) (/.f64 (*.f64 z z) (pow.f64 t 3)))))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(fma.f64 60 (/.f64 (/.f64 z t) t) (/.f64 60 t))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(*.f64 60 (+.f64 (+.f64 (/.f64 (/.f64 z t) t) (/.f64 1 t)) (/.f64 (*.f64 z z) (pow.f64 t 3))))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (*.f64 60 (+.f64 (+.f64 (/.f64 (/.f64 z t) t) (/.f64 1 t)) (/.f64 (*.f64 z z) (pow.f64 t 3)))))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(fma.f64 -60 (/.f64 (/.f64 t z) z) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(fma.f64 -60 (+.f64 (/.f64 (/.f64 t z) z) (/.f64 (*.f64 t t) (pow.f64 z 3))) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))","(+.f64 (*.f64 -60 (+.f64 (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 (*.f64 t t) (pow.f64 z 3))) (/.f64 (/.f64 t z) z))) (/.f64 -60 z))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(fma.f64 -60 (/.f64 (/.f64 t z) z) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(fma.f64 -60 (+.f64 (/.f64 (/.f64 t z) z) (/.f64 (*.f64 t t) (pow.f64 z 3))) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))","(+.f64 (*.f64 -60 (+.f64 (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 (*.f64 t t) (pow.f64 z 3))) (/.f64 (/.f64 t z) z))) (/.f64 -60 z))"]],"time":448.673095703125,"type":"simplify"},{"compiler":[[5359,2672]],"time":56.656005859375,"type":"eval"},{"alts":[["(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","done",0.140625],["(fma.f64 (sqrt.f64 60) (*.f64 (sqrt.f64 60) (/.f64 (-.f64 x y) (-.f64 z t))) (*.f64 a 120))","fresh",0.240566259768442],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","done",0.12890625],["(fma.f64 (sqrt.f64 120) (*.f64 (sqrt.f64 120) a) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))","fresh",0.546875]],"compiler":[[17,12],[21,16],[21,13],[21,16]],"count":[[264,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[260,0],"picked":[1,1]}],"min-error":[0],"time":110.833984375,"type":"prune"},{"accuracy":[0.12890625],"baseline":[0.12890625],"branch":[["x",0.12890625,1],["y",0.12890625,1],["z",0.12890625,1],["t",0.12890625,1],["a",0.12890625,1],["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))",0.12890625,1],["(/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t))",0.12890625,1],["(/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t))",0.12890625,1],["(*.f64 60 (-.f64 x y))",0.12890625,1],["(*.f64 60 (-.f64 x y))",0.12890625,1],["(-.f64 x y)",0.12890625,1],["(-.f64 x y)",0.12890625,1],["(-.f64 z t)",0.12890625,1],["(-.f64 z t)",0.12890625,1],["(*.f64 a 120)",0.12890625,1]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[18,13],[14,10],[14,10],[10,8],[10,8],[8,6],[8,6],[8,6],[8,6],[8,7],[134,73]],"count":[[9,1]],"inputs":[["(fma.f64 (sqrt.f64 60) (*.f64 (sqrt.f64 60) (/.f64 (-.f64 x y) (-.f64 z t))) (*.f64 a 120))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","(fma.f64 (sqrt.f64 120) (*.f64 (sqrt.f64 120) a) (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)))","(fma.f64 a 120 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))","(fma.f64 a 120 (/.f64 (*.f64 (*.f64 (-.f64 y x) (sqrt.f64 60)) (sqrt.f64 60)) (-.f64 t z)))","(fma.f64 (*.f64 a (sqrt.f64 120)) (sqrt.f64 120) (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","(fma.f64 a 120 (/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z)))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))"]],"link":["."],"name":["Data.Colour.RGB:hslsv from colour-2.3.3, B"],"oracle":[0.8450775390737681],"outputs":[["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))"]],"time":65.14794921875,"times":[["x",3.989013671875],["y",4.18408203125],["z",4.06103515625],["t",4.176025390625],["a",4.095947265625],["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))",4.35400390625],["(/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t))",4.092041015625],["(/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t))",4.18505859375],["(*.f64 60 (-.f64 x y))",4.112060546875],["(*.f64 60 (-.f64 x y))",4.221923828125],["(-.f64 x y)",3.94287109375],["(-.f64 x y)",4.095947265625],["(-.f64 z t)",4.049072265625],["(-.f64 z t)",4.287109375],["(*.f64 a 120)",4.197998046875]],"type":"regimes"},{"compiler":[[21,13]],"inputs":[["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 a 120))","(fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))"]],"stop":[["fuel",1]],"time":22.739013671875,"type":"simplify"},{"time":0.01708984375,"type":"soundness"},{"compiler":[[21,13]],"remove-preprocessing":[[]],"time":9.90185546875,"type":"end"}]