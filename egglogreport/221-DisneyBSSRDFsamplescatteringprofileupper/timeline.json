[{"compiler":[[31,25]],"method":["search"],"sampling":[[12,0.00011906400322914125,3.840774297714233e-6,0.9998770952224731],[11,0.00011906400322914125,3.840774297714233e-6,0.9998770952224731],[10,0.00011522322893142702,7.681548595428467e-6,0.9998770952224731],[9,0.00011522322893142702,7.681548595428467e-6,0.9998770952224731],[8,0.00010754168033599855,1.5363097190856934e-5,0.9998770952224731],[7,0.00010754168033599855,1.5363097190856934e-5,0.9998770952224731],[6,9.217858314514162e-5,3.072619438171387e-5,0.9998770952224731],[5,9.217858314514162e-5,3.072619438171387e-5,0.9998770952224731],[4,6.145238876342775e-5,6.145238876342773e-5,0.9998770952224731],[3,6.145238876342775e-5,6.145238876342773e-5,0.9998770952224731],[2,0.0,0.0001229047775268555,0.9998770952224731],[1,0.0,0.0001229047775268555,0.9998770952224731],[0,0.0,0.0001229047775268555,0.9998770952224731]],"time":14.64599609375,"type":"analyze"},{"outcomes":[["body",256,"valid",560.614990234375,8256]],"time":569.02587890625,"type":"sample"},{"compiler":[[16,14]],"inputs":[["0","1"],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","(*.f64 (*.f64 3 u) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 s 1/4) 3/4)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","(*.f64 (neg.f64 (*.f64 s 3)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))","(*.f64 (*.f64 3 u) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 s 1/4) 3/4)))))","(*.f64 (neg.f64 (*.f64 u 3)) (log1p.f64 (*.f64 (+.f64 s -1/4) -4/3)))"]],"symmetry":[[]],"time":71.6162109375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))"]],"time":24.7958984375,"type":"simplify"},{"compiler":[[27,23]],"time":0.625,"type":"eval"},{"alts":[["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))","next",0.7179850231386401],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","fresh",1.3783629863701992]],"compiler":[[13,11],[16,14],[13,11],[16,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.5548736340651239],"time":1.782958984375,"type":"prune"},{"compiler":[[39,30]],"locations":[["(*.f64 (+.f64 u -1/4) -4/3)",0.31640625,true],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))",0.387382519536884,true],["(log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))",0.3923560070753776,true]],"time":13.76708984375,"type":"localize"},{"count":[[3,48]],"series":[["(*.f64 (+.f64 u -1/4) -4/3)","u","-inf",0.220947265625],["(*.f64 (+.f64 u -1/4) -4/3)","u","inf",0.31494140625],["(*.f64 (+.f64 u -1/4) -4/3)","u","0",0.20703125],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))","u","-inf",0.31884765625],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))","u","inf",0.333984375],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))","u","0",0.2900390625],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))","s","-inf",0.343017578125],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))","s","inf",0.501953125],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))","s","0",28.498046875],["(log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))","u","-inf",0.379150390625],["(log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))","u","inf",0.48095703125],["(log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))","u","0",0.41796875]],"time":32.5869140625,"type":"series"},{"count":[[3,123]],"inputs":[["(log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))","(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))","(*.f64 (+.f64 u -1/4) -4/3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 0) (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 0 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log1p.f64 (fma.f64 u -4/3 1/3))) (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (fma.f64 -4/3 (+.f64 u -1/4) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (fma.f64 u -4/3 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 0) (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 0) (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 0 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -3 s)) (*.f64 (cbrt.f64 (*.f64 (*.f64 s s) 9)) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 s s) 9)) (log1p.f64 (fma.f64 u -4/3 1/3))) (cbrt.f64 (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 -3 s)) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) (cbrt.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 2)) (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 3 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (cbrt.f64 (*.f64 -3 s))) (cbrt.f64 (*.f64 (*.f64 s s) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 (neg.f64 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 s) (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -3 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 s) (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 s s) 9)) (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (cbrt.f64 (*.f64 -3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 3 s)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (*.f64 s s) 9)) (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (neg.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (*.f64 3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/3 (*.f64 -4/3 u))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4/3 u) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 u -4/3 1/3) (*.f64 (fma.f64 u -4/3 1/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 u -4/3 1/3) 0) (fma.f64 u -4/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 u -4/3 1/3) (*.f64 0 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 u -4/3 1/3)) (fma.f64 u -4/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/3 (*.f64 (*.f64 -4/3 u) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -4/3 u) 1) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 u -1/4) -4/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4/3 (+.f64 u -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -4/3) (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 u -1/4)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 u -1/4) 2)) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 u -1/4) (cbrt.f64 -4/3)) (cbrt.f64 16/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -64/27 (+.f64 u -1/4))) (cbrt.f64 (pow.f64 (+.f64 u -1/4) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 u -1/4) 2)) (cbrt.f64 (*.f64 -64/27 (+.f64 u -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 u -1/4) 2)) -4/3) (cbrt.f64 (+.f64 u -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 u -4/3 1/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 16/9) (*.f64 (+.f64 u -1/4) (cbrt.f64 -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))) (/.f64 -4/3 (pow.f64 (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 u 3) -1/64) 1) (/.f64 -4/3 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -4/3 (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))) (/.f64 (+.f64 (pow.f64 u 3) -1/64) (pow.f64 (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 u -4/3 1/3)) (cbrt.f64 (pow.f64 (fma.f64 u -4/3 1/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 u -4/3 1/3) 2)) (cbrt.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 u -4/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 u -4/3 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -4/3 (+.f64 (pow.f64 u 3) -1/64)) (/.f64 1 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -4/3 (+.f64 (pow.f64 u 3) -1/64)) (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))) (pow.f64 (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4/3 (+.f64 (pow.f64 u 3) -1/64)) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4/3 (neg.f64 (+.f64 (pow.f64 u 3) -1/64))) (neg.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -4/3 (+.f64 (pow.f64 u 3) -1/64)) 1) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 u -4/3 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 u 3) -1/64)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 u -1/4) 2)) -4/3)) (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 u 3) -1/64)) -4/3) (neg.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -4/3 (+.f64 (pow.f64 u 3) -1/64)) 1) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 u 3) -1/64) (/.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4))) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 1/3 3) (pow.f64 (*.f64 -4/3 u) 3)) (+.f64 (*.f64 1/3 1/3) (-.f64 (*.f64 (*.f64 -4/3 u) (*.f64 -4/3 u)) (*.f64 1/3 (*.f64 -4/3 u)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -4/3 u) 3) (pow.f64 1/3 3)) (+.f64 (*.f64 (*.f64 -4/3 u) (*.f64 -4/3 u)) (-.f64 (*.f64 1/3 1/3) (*.f64 (*.f64 -4/3 u) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 -4/3 (+.f64 (pow.f64 u 3) -1/64))) (neg.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 u -4/3 1/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 u -4/3 1/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 u -4/3 1/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 u -4/3 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 u -4/3 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 u -4/3 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 u -4/3 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4/3 -1/4 (*.f64 -4/3 u))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/4 -4/3 (*.f64 -4/3 u))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4/3 u 1/3)))))"]],"rules":[["egg-rr",51],["egg-rr",52],["egg-rr",20]],"time":32.48193359375,"type":"rewrite"},{"count":[[171,174]],"inputs":[["(log.f64 4/3)","(+.f64 (log.f64 4/3) (*.f64 -1 u))","(+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u)))","(+.f64 (*.f64 -1/3 (pow.f64 u 3)) (+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u))))","(+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (/.f64 1 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","(+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (/.f64 1 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 -3 (*.f64 s (log.f64 4/3)))","(+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3))))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3)))))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (+.f64 (*.f64 s (pow.f64 u 3)) (*.f64 -3 (*.f64 s (log.f64 4/3))))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","1/3","(+.f64 (*.f64 -4/3 u) 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(*.f64 -4/3 u)","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))","(*.f64 -4/3 u)","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))"]],"method":["egg-herbie"],"outputs":[["(log.f64 4/3)","(+.f64 (log.f64 4/3) (*.f64 -1 u))","(-.f64 (log.f64 4/3) u)","(+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u)))","(+.f64 (log.f64 4/3) (fma.f64 -1/2 (*.f64 u u) (neg.f64 u)))","(+.f64 (*.f64 -1/3 (pow.f64 u 3)) (+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u))))","(+.f64 (fma.f64 -1/3 (pow.f64 u 3) (log.f64 4/3)) (fma.f64 -1/2 (*.f64 u u) (neg.f64 u)))","(+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))","(+.f64 (log.f64 -4/3) (log.f64 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (/.f64 1 u))","(+.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (/.f64 -1 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (fma.f64 1/2 (pow.f64 u -2) (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","(-.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (fma.f64 1/2 (pow.f64 u -2) (fma.f64 1/3 (pow.f64 u -3) (/.f64 1 u))))","(+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))","(-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (/.f64 1 u))","(-.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) (/.f64 1 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 1/2 (pow.f64 u -2) (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","(-.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 1/2 (pow.f64 u -2) (fma.f64 1/3 (pow.f64 u -3) (/.f64 1 u))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 -4/3 (+.f64 u -1/4))))","(*.f64 -3 (*.f64 s (log.f64 4/3)))","(*.f64 (*.f64 -3 s) (log.f64 4/3))","(+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3))))","(fma.f64 (*.f64 -3 s) (log.f64 4/3) (*.f64 3 (*.f64 s u)))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3)))))","(fma.f64 3/2 (*.f64 s (*.f64 u u)) (fma.f64 (*.f64 -3 s) (log.f64 4/3) (*.f64 3 (*.f64 s u))))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (+.f64 (*.f64 s (pow.f64 u 3)) (*.f64 -3 (*.f64 s (log.f64 4/3))))))","(fma.f64 (*.f64 s (*.f64 u u)) 3/2 (fma.f64 (*.f64 s u) 3 (fma.f64 s (pow.f64 u 3) (*.f64 (*.f64 -3 s) (log.f64 4/3)))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(*.f64 (*.f64 -3 s) (+.f64 (log.f64 -4/3) (log.f64 u)))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(fma.f64 3 (/.f64 s u) (*.f64 (*.f64 -3 s) (+.f64 (log.f64 -4/3) (log.f64 u))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (log.f64 u))) (/.f64 (/.f64 (*.f64 3/2 s) u) u)))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(fma.f64 s (pow.f64 u -3) (fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (log.f64 u))) (/.f64 (/.f64 (*.f64 3/2 s) u) u))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(*.f64 (*.f64 -3 s) (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(fma.f64 3 (/.f64 s u) (*.f64 (*.f64 -3 s) (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))) (/.f64 (/.f64 (*.f64 3/2 s) u) u)))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(fma.f64 s (pow.f64 u -3) (fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))) (/.f64 (/.f64 (*.f64 3/2 s) u) u))))","1/3","(+.f64 (*.f64 -4/3 u) 1/3)","(fma.f64 -4/3 u 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(fma.f64 -4/3 u 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(fma.f64 -4/3 u 1/3)","(*.f64 -4/3 u)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(*.f64 -4/3 u)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)"]],"time":152.87109375,"type":"simplify"},{"compiler":[[2865,2272]],"time":44.65087890625,"type":"eval"},{"alts":[["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 u -1/4) 2)) -4/3) (cbrt.f64 (+.f64 u -1/4)))))","fresh",0.9021682555586472],["(*.f64 (cbrt.f64 (*.f64 (*.f64 s s) 9)) (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (cbrt.f64 (*.f64 -3 s))))","fresh",26.784363412433414],["(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)","next",0.7059662122126602],["(*.f64 (neg.f64 (*.f64 3 s)) (log.f64 (fma.f64 -4/3 (+.f64 u -1/4) 1)))","fresh",1.263190893114014],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) 3)","fresh",0.8900063978130588],["(*.f64 (neg.f64 (*.f64 3 s)) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 3))","fresh",0.9230253009868439],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","fresh",1.3783629863701992],["(*.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) s)","fresh",0.7364490356001465],["(*.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 -3 s)))","fresh",0.7345340942107987],["(pow.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 3) 1/3)","fresh",39.483229295013814],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))","fresh",0.7231488047592939],["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","fresh",0.7293849693669461],["(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","fresh",1.243511881516786]],"compiler":[[21,18],[19,15],[11,9],[14,12],[14,12],[15,13],[16,14],[11,9],[21,18],[15,13],[17,15],[21,18],[14,12],[21,18],[19,15],[11,9],[14,12],[14,12],[15,13],[16,14],[11,9],[21,18],[15,13],[17,15],[21,18],[14,12]],"count":[[176,13]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[174,12],"picked":[1,0]}],"min-error":[0.13437009254663357],"time":32.924072265625,"type":"prune"},{"compiler":[[32,24]],"locations":[["(*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))",0.23046875,true],["(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)",0.28125,true],["(fma.f64 u -4/3 1/3)",0.31640625,true],["(log1p.f64 (fma.f64 u -4/3 1/3))",0.3923560070753776,true]],"time":10.384033203125,"type":"localize"},{"count":[[4,72]],"series":[["(*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))","u","-inf",0.219970703125],["(*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))","u","inf",0.258056640625],["(*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))","u","0",0.217041015625],["(*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))","s","-inf",0.27392578125],["(*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))","s","inf",0.14990234375],["(*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))","s","0",0.174072265625],["(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)","u","-inf",0.2080078125],["(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)","u","inf",0.22607421875],["(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)","u","0",0.18212890625],["(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)","s","-inf",0.287841796875],["(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)","s","inf",0.467041015625],["(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)","s","0",11.73193359375],["(fma.f64 u -4/3 1/3)","u","-inf",0.27001953125],["(fma.f64 u -4/3 1/3)","u","inf",0.175048828125],["(fma.f64 u -4/3 1/3)","u","0",0.22900390625],["(log1p.f64 (fma.f64 u -4/3 1/3))","u","-inf",0.23291015625],["(log1p.f64 (fma.f64 u -4/3 1/3))","u","inf",0.241943359375],["(log1p.f64 (fma.f64 u -4/3 1/3))","u","0",0.26708984375]],"time":16.06494140625,"type":"series"},{"count":[[4,113]],"inputs":[["(log1p.f64 (fma.f64 u -4/3 1/3))","(fma.f64 u -4/3 1/3)","(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)","(*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 0) (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log1p.f64 (fma.f64 u -4/3 1/3))) (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 0 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 4/3 (*.f64 u -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (fma.f64 u -4/3 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 u -4/3 1/3) 0) (fma.f64 u -4/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 u -4/3 1/3) (*.f64 (fma.f64 u -4/3 1/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 u -4/3 1/3)) (fma.f64 u -4/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 u -4/3 1/3) (*.f64 0 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 u -4/3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/3 (*.f64 u -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 u -4/3 1/3)) (pow.f64 (fma.f64 u -4/3 1/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 u -4/3 1/3) 2/3) (cbrt.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 u -4/3) 3) 1/27) (/.f64 1 (-.f64 (+.f64 (*.f64 (*.f64 u u) 16/9) 1/9) (*.f64 (*.f64 u -4/3) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 u -4/3 1/3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 u -4/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 u -4/3 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 u -4/3) 3) 1/27) (+.f64 1/9 (-.f64 (*.f64 (*.f64 u u) 16/9) (*.f64 (*.f64 u -4/3) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 u -4/3) 3) 1/27)) (neg.f64 (-.f64 (+.f64 (*.f64 (*.f64 u u) 16/9) 1/9) (*.f64 (*.f64 u -4/3) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 u -4/3) 3) 1/27) (-.f64 (+.f64 (*.f64 (*.f64 u u) 16/9) 1/9) (*.f64 (*.f64 u -4/3) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 u -4/3) 3) 1/27) 1) (-.f64 (+.f64 (*.f64 (*.f64 u u) 16/9) 1/9) (*.f64 (*.f64 u -4/3) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 u -4/3 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 u -4/3 1/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 u -4/3 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 u -4/3 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 u -4/3 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 u -4/3 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 u) (*.f64 (pow.f64 u 2/3) -4/3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4/3 u 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 u -4/3)) (cbrt.f64 (*.f64 (*.f64 u u) 16/9)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 u (cbrt.f64 -4/3)) (cbrt.f64 16/9) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/9) (cbrt.f64 1/3) (*.f64 u -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 1/3)) (neg.f64 (sqrt.f64 1/3)) (*.f64 u -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/3) (cbrt.f64 1/9) (*.f64 u -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/3) (sqrt.f64 1/3) (*.f64 u -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -1/3 (*.f64 u -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 u -4/3) 1 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 u -4/3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 1/3 (*.f64 u -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 1 (*.f64 u -4/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 0) (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 0 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -3) (*.f64 (cbrt.f64 9) (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))) (*.f64 (pow.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 2/3) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 s) (*.f64 (pow.f64 s 2/3) (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 2/3) -3) (cbrt.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 s 2/3) (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 9) (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))) (cbrt.f64 -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 2/3) (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) (cbrt.f64 -3)) (cbrt.f64 9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -27 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))))) (pow.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 9) (*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) (cbrt.f64 -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 2/3) (cbrt.f64 (*.f64 -27 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -3 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 0) (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))) (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 0 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 s) (*.f64 (pow.f64 s 2/3) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 s 2/3) (log1p.f64 (fma.f64 u -4/3 1/3))) (cbrt.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))) (pow.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 2/3) (cbrt.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (cbrt.f64 s)) (pow.f64 s 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 s 2/3) (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (cbrt.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) (*.f64 s (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) 3))))))"]],"rules":[["egg-rr",26],["egg-rr",32],["egg-rr",37],["egg-rr",18]],"time":34.5771484375,"type":"rewrite"},{"count":[[185,192]],"inputs":[["(log.f64 4/3)","(+.f64 (log.f64 4/3) (*.f64 -1 u))","(+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u)))","(+.f64 (*.f64 -1/3 (pow.f64 u 3)) (+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u))))","(+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (/.f64 1 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","(+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (/.f64 1 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","1/3","(+.f64 (*.f64 -4/3 u) 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(*.f64 -4/3 u)","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))","(*.f64 -4/3 u)","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 4/3)))","(+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3))))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3)))))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (+.f64 (*.f64 s (pow.f64 u 3)) (*.f64 -3 (*.f64 s (log.f64 4/3))))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3)))","(*.f64 s (log.f64 4/3))","(+.f64 (*.f64 s (log.f64 4/3)) (*.f64 -1 (*.f64 s u)))","(+.f64 (*.f64 s (log.f64 4/3)) (+.f64 (*.f64 -1 (*.f64 s u)) (*.f64 -1/2 (*.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 s (log.f64 4/3)) (+.f64 (*.f64 -1 (*.f64 s u)) (+.f64 (*.f64 -1/2 (*.f64 s (pow.f64 u 2))) (*.f64 -1/3 (*.f64 s (pow.f64 u 3))))))","(*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))","(+.f64 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))) (*.f64 -1 (/.f64 s u)))","(+.f64 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))) (+.f64 (*.f64 -1 (/.f64 s u)) (*.f64 -1/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 -1/3 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))) (+.f64 (*.f64 -1 (/.f64 s u)) (*.f64 -1/2 (/.f64 s (pow.f64 u 2))))))","(*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))","(+.f64 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) (*.f64 -1 (/.f64 s u)))","(+.f64 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) (+.f64 (*.f64 -1 (/.f64 s u)) (*.f64 -1/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) (+.f64 (*.f64 -1/3 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -1 (/.f64 s u)) (*.f64 -1/2 (/.f64 s (pow.f64 u 2))))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 4/3)","(+.f64 (log.f64 4/3) (*.f64 -1 u))","(-.f64 (log.f64 4/3) u)","(+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u)))","(+.f64 (log.f64 4/3) (fma.f64 -1/2 (*.f64 u u) (neg.f64 u)))","(+.f64 (*.f64 -1/3 (pow.f64 u 3)) (+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u))))","(+.f64 (fma.f64 (pow.f64 u 3) -1/3 (log.f64 4/3)) (fma.f64 -1/2 (*.f64 u u) (neg.f64 u)))","(+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))","(+.f64 (log.f64 -4/3) (log.f64 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (/.f64 1 u))","(+.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (/.f64 -1 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (fma.f64 1/2 (pow.f64 u -2) (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","(-.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (fma.f64 1/2 (pow.f64 u -2) (fma.f64 1/3 (pow.f64 u -3) (/.f64 1 u))))","(+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))","(-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (/.f64 1 u))","(-.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) (/.f64 1 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 1/2 (pow.f64 u -2) (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","(-.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 1/2 (pow.f64 u -2) (fma.f64 1/3 (pow.f64 u -3) (/.f64 1 u))))","1/3","(+.f64 (*.f64 -4/3 u) 1/3)","(fma.f64 -4/3 u 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(fma.f64 -4/3 u 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(fma.f64 -4/3 u 1/3)","(*.f64 -4/3 u)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(*.f64 -4/3 u)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 4/3)))","(*.f64 (*.f64 -3 s) (log.f64 4/3))","(+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3))))","(fma.f64 (*.f64 -3 s) (log.f64 4/3) (*.f64 3 (*.f64 s u)))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3)))))","(fma.f64 3/2 (*.f64 s (*.f64 u u)) (fma.f64 (*.f64 -3 s) (log.f64 4/3) (*.f64 3 (*.f64 s u))))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (+.f64 (*.f64 s (pow.f64 u 3)) (*.f64 -3 (*.f64 s (log.f64 4/3))))))","(fma.f64 3/2 (*.f64 s (*.f64 u u)) (fma.f64 (*.f64 3 s) u (fma.f64 s (pow.f64 u 3) (*.f64 (*.f64 -3 s) (log.f64 4/3)))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(*.f64 (*.f64 -3 s) (+.f64 (log.f64 -4/3) (log.f64 u)))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(fma.f64 3 (/.f64 s u) (*.f64 (*.f64 -3 s) (+.f64 (log.f64 -4/3) (log.f64 u))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (log.f64 u))) (/.f64 (/.f64 (*.f64 3/2 s) u) u)))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(fma.f64 s (pow.f64 u -3) (fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (log.f64 u))) (/.f64 (/.f64 (*.f64 3/2 s) u) u))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(*.f64 (*.f64 -3 s) (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(fma.f64 3 (/.f64 s u) (*.f64 (*.f64 -3 s) (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))) (/.f64 (/.f64 (*.f64 3/2 s) u) u)))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(fma.f64 s (pow.f64 u -3) (fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))) (/.f64 (/.f64 (*.f64 3/2 s) u) u))))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u))))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3)))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3)))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3)))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3)))","(*.f64 s (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 s (log.f64 4/3))","(+.f64 (*.f64 s (log.f64 4/3)) (*.f64 -1 (*.f64 s u)))","(fma.f64 s (log.f64 4/3) (neg.f64 (*.f64 s u)))","(+.f64 (*.f64 s (log.f64 4/3)) (+.f64 (*.f64 -1 (*.f64 s u)) (*.f64 -1/2 (*.f64 s (pow.f64 u 2)))))","(fma.f64 (log.f64 4/3) s (fma.f64 (neg.f64 s) u (*.f64 (*.f64 -1/2 s) (*.f64 u u))))","(+.f64 (*.f64 s (log.f64 4/3)) (+.f64 (*.f64 -1 (*.f64 s u)) (+.f64 (*.f64 -1/2 (*.f64 s (pow.f64 u 2))) (*.f64 -1/3 (*.f64 s (pow.f64 u 3))))))","(fma.f64 s (log.f64 4/3) (-.f64 (fma.f64 (*.f64 -1/3 s) (pow.f64 u 3) (*.f64 (*.f64 -1/2 s) (*.f64 u u))) (*.f64 s u)))","(*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))","(*.f64 s (+.f64 (log.f64 -4/3) (log.f64 u)))","(+.f64 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))) (*.f64 -1 (/.f64 s u)))","(fma.f64 s (+.f64 (log.f64 -4/3) (log.f64 u)) (neg.f64 (/.f64 s u)))","(+.f64 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))) (+.f64 (*.f64 -1 (/.f64 s u)) (*.f64 -1/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 s (+.f64 (log.f64 -4/3) (log.f64 u)) (fma.f64 (/.f64 s (*.f64 u u)) -1/2 (neg.f64 (/.f64 s u))))","(+.f64 (*.f64 -1/3 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))) (+.f64 (*.f64 -1 (/.f64 s u)) (*.f64 -1/2 (/.f64 s (pow.f64 u 2))))))","(fma.f64 (*.f64 s (pow.f64 u -3)) -1/3 (fma.f64 s (+.f64 (log.f64 -4/3) (log.f64 u)) (fma.f64 (/.f64 s (*.f64 u u)) -1/2 (neg.f64 (/.f64 s u)))))","(*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))","(*.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))))","(+.f64 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) (*.f64 -1 (/.f64 s u)))","(fma.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) (neg.f64 (/.f64 s u)))","(+.f64 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) (+.f64 (*.f64 -1 (/.f64 s u)) (*.f64 -1/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 (/.f64 s (*.f64 u u)) -1/2 (neg.f64 (/.f64 s u))))","(+.f64 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) (+.f64 (*.f64 -1/3 (/.f64 s (pow.f64 u 3))) (+.f64 (*.f64 -1 (/.f64 s u)) (*.f64 -1/2 (/.f64 s (pow.f64 u 2))))))","(fma.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) (fma.f64 -1/3 (*.f64 s (pow.f64 u -3)) (fma.f64 (/.f64 s (*.f64 u u)) -1/2 (neg.f64 (/.f64 s u)))))"]],"time":242.121826171875,"type":"simplify"},{"compiler":[[3010,2276]],"time":42.235107421875,"type":"eval"},{"alts":[["(*.f64 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))) -3)","fresh",1.1323429770722842],["(*.f64 (neg.f64 (*.f64 3 s)) (log.f64 (fma.f64 -4/3 (+.f64 u -1/4) 1)))","fresh",1.263190893114014],["(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","fresh",1.243511881516786],["(*.f64 (*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) (cbrt.f64 -3)) (cbrt.f64 9))","fresh",0.9682077650343633],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) 3)","fresh",0.8900063978130588],["(*.f64 (neg.f64 (*.f64 3 s)) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 3))","fresh",0.9230253009868439],["(*.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 -3 s)))","fresh",0.7345340942107987],["(*.f64 (*.f64 s (log1p.f64 (fma.f64 (sqrt.f64 1/3) (sqrt.f64 1/3) (*.f64 u -4/3)))) -3)","fresh",1.1742329360599608],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))","next",0.7231488047592939],["(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","fresh",1.1110494189039757],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))) 3) -3)","fresh",0.8881493836356409],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 u -1/4) 2)) -4/3) (cbrt.f64 (+.f64 u -1/4)))))","fresh",0.9021682555586472],["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","fresh",0.7293849693669461],["(*.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) s)","fresh",0.7364490356001465]],"compiler":[[11,9],[14,12],[14,12],[15,13],[14,12],[15,13],[21,18],[15,13],[17,15],[11,9],[14,12],[21,18],[21,18],[11,9],[11,9],[14,12],[14,12],[15,13],[14,12],[15,13],[21,18],[15,13],[17,15],[11,9],[14,12],[21,18],[21,18],[11,9]],"count":[[205,14]],"kept":[{"done":[0,0],"fresh":[12,9],"new":[192,5],"picked":[1,0]}],"min-error":[0.02734375],"time":33.510986328125,"type":"prune"},{"compiler":[[62,52]],"locations":[["(*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))",0.2265625,true],["(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))",0.328125,true],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))",0.387382519536884,true],["(log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3)))",0.3923560070753776,true]],"time":18.011962890625,"type":"localize"},{"count":[[4,60]],"series":[["(*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))","u","-inf",0.382080078125],["(*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))","u","inf",0.296875],["(*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))","u","0",0.574951171875],["(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","u","-inf",0.296875],["(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","u","inf",0.259033203125],["(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","u","0",0.498046875],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))","u","-inf",0.593994140625],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))","u","inf",0.5849609375],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))","u","0",0.640869140625],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))","s","-inf",0.2919921875],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))","s","inf",0.47900390625],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))","s","0",22.626953125],["(log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3)))","u","-inf",0.821044921875],["(log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3)))","u","inf",0.662109375],["(log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3)))","u","0",1.080078125]],"time":30.466064453125,"type":"series"},{"count":[[4,180]],"inputs":[["(log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3)))","(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))","(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","(*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 0) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) (*.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) (*.f64 0 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) (pow.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 2/3) (cbrt.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (fma.f64 (+.f64 u -1/4) -4/3 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) 0) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 0) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) (*.f64 0 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) -3) s)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) (*.f64 (pow.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 2/3) (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))) (pow.f64 (cbrt.f64 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -3 s)) (*.f64 (pow.f64 (*.f64 -3 s) 2/3) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 s (neg.f64 (*.f64 3 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))) (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) (*.f64 -3 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) 2/3) (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 3) (neg.f64 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) (cbrt.f64 (*.f64 -3 s))) (pow.f64 (*.f64 -3 s) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))) (pow.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 (neg.f64 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -3 (*.f64 s (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) (*.f64 3 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3 s) (neg.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 s) (*.f64 3 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 3 s) (cbrt.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))) (neg.f64 (pow.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 3 s)) (neg.f64 (*.f64 (pow.f64 (*.f64 -3 s) 2/3) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)) 3) s))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 3 (*.f64 s (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (*.f64 -3 s) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 16/9) u) (cbrt.f64 -1/36))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 -1/36) (*.f64 (cbrt.f64 16/9) u))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) 0) (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) (*.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))) (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) (*.f64 0 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 16/9) (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))) (/.f64 (+.f64 (pow.f64 u 3) -1/64) (pow.f64 (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))) (/.f64 (cbrt.f64 16/9) (pow.f64 (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))) (pow.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 16/9)) (*.f64 (cbrt.f64 (cbrt.f64 256/81)) (+.f64 u -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 u -1/4)) (pow.f64 (*.f64 (+.f64 u -1/4) -4/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) 2/3) (cbrt.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 (+.f64 u -1/4))) (pow.f64 (+.f64 u -1/4) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 16/9) (+.f64 u -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 u -1/4) (cbrt.f64 16/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 u -1/4) (cbrt.f64 (cbrt.f64 16/9))) (cbrt.f64 (cbrt.f64 256/81)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 256/81)) (+.f64 (*.f64 u (cbrt.f64 (cbrt.f64 16/9))) (*.f64 -1/4 (cbrt.f64 (cbrt.f64 16/9)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 256/81)) (+.f64 (*.f64 -1/4 (cbrt.f64 (cbrt.f64 16/9))) (*.f64 u (cbrt.f64 (cbrt.f64 16/9)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 16/9)) (/.f64 1 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 u 3) -1/64) (/.f64 (cbrt.f64 16/9) (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 16/9)) (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))) (pow.f64 (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 16/9)) 1) (*.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 16/9)) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 16/9))) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 16/9) (neg.f64 (+.f64 (pow.f64 u 3) -1/64))) (neg.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 16/9)) 1) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 u 3) -1/64)) (cbrt.f64 16/9)) (neg.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 u 3) -1/64)) (pow.f64 (*.f64 (+.f64 u -1/4) -4/3) 2/3)) (cbrt.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 16/9)) 1) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 16/9))) (neg.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 u -1/4) 3) 16/9) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 u -1/4) 3) 16/9))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 u (cbrt.f64 16/9) (cbrt.f64 -1/36))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 16/9) u) 1 (cbrt.f64 -1/36))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 -1/36)) (pow.f64 (cbrt.f64 (cbrt.f64 -1/36)) 2) (*.f64 (cbrt.f64 16/9) u))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 16/9) -1/4 (*.f64 (cbrt.f64 16/9) u))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/4) (*.f64 (cbrt.f64 1/16) (cbrt.f64 16/9)) (*.f64 (cbrt.f64 16/9) u))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 16/9)) (*.f64 (cbrt.f64 (cbrt.f64 256/81)) -1/4) (*.f64 (cbrt.f64 16/9) u))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/4 (cbrt.f64 (cbrt.f64 16/9))) (cbrt.f64 (cbrt.f64 256/81)) (*.f64 (cbrt.f64 16/9) u))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -1/4)) (cbrt.f64 1/16) (*.f64 (cbrt.f64 16/9) u))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cbrt.f64 -1/36) (*.f64 (cbrt.f64 16/9) u))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/4 (cbrt.f64 16/9) (*.f64 (cbrt.f64 16/9) u))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 16/9)) (*.f64 (cbrt.f64 (cbrt.f64 256/81)) u) (cbrt.f64 -1/36))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 u (cbrt.f64 (cbrt.f64 16/9))) (cbrt.f64 (cbrt.f64 256/81)) (cbrt.f64 -1/36))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 u)) (pow.f64 u 2/3) (cbrt.f64 -1/36))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cbrt.f64 16/9) u) (cbrt.f64 -1/36))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cbrt.f64 16/9) u)) (pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 16/9) u)) 2) (cbrt.f64 -1/36))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 u) (*.f64 (pow.f64 u 2/3) (cbrt.f64 16/9)) (cbrt.f64 -1/36))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 -4/3) (*.f64 (cbrt.f64 16/9) u)) (*.f64 (cbrt.f64 -4/3) (cbrt.f64 -1/36)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 16/9) u) (cbrt.f64 -4/3)) (*.f64 (cbrt.f64 -1/36) (cbrt.f64 -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 -1/36) (cbrt.f64 -4/3)) (*.f64 (*.f64 (cbrt.f64 16/9) u) (cbrt.f64 -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 -4/3) (cbrt.f64 -1/36)) (*.f64 (cbrt.f64 -4/3) (*.f64 (cbrt.f64 16/9) u)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 (cbrt.f64 16/9) u) (cbrt.f64 -4/3))) (*.f64 1 (*.f64 (cbrt.f64 -1/36) (cbrt.f64 -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (cbrt.f64 -4/3) (*.f64 (cbrt.f64 16/9) u))) (*.f64 1 (*.f64 (cbrt.f64 -4/3) (cbrt.f64 -1/36))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (+.f64 u -1/4) -4/3) 0) (*.f64 (+.f64 u -1/4) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 u -1/4) -4/3) (*.f64 (*.f64 (+.f64 u -1/4) -4/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4/3 u) (*.f64 -4/3 -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4/3 -1/4) (*.f64 -4/3 u))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (cbrt.f64 16/9) u) (cbrt.f64 -4/3)) 1) (*.f64 (*.f64 (cbrt.f64 -1/36) (cbrt.f64 -4/3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cbrt.f64 -4/3) (*.f64 (cbrt.f64 16/9) u)) 1) (*.f64 (*.f64 (cbrt.f64 -4/3) (cbrt.f64 -1/36)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (+.f64 u -1/4) -4/3)) (*.f64 (+.f64 u -1/4) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 u -1/4) -4/3) (*.f64 0 (*.f64 (+.f64 u -1/4) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 u -4/3) (*.f64 -1/4 -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/4 -4/3) (*.f64 u -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 -4/3)) (*.f64 (cbrt.f64 (cbrt.f64 16/9)) (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36))) (*.f64 (pow.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) 2/3) (cbrt.f64 -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) (cbrt.f64 -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -4/3) (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 u -1/4) -4/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4/3 (+.f64 u -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 u -1/4) -4/3)) (pow.f64 (*.f64 (+.f64 u -1/4) -4/3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 16/9)) (*.f64 (cbrt.f64 (cbrt.f64 256/81)) (*.f64 (+.f64 u -1/4) (cbrt.f64 -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 u -1/4) -4/3) 2/3) (cbrt.f64 (*.f64 (+.f64 u -1/4) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 -4/3) (cbrt.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)))) (pow.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 u -1/4) -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 u -1/4) -4/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (+.f64 u -1/4) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 16/9) (*.f64 (+.f64 u -1/4) (cbrt.f64 -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 u -1/4) (cbrt.f64 -4/3)) (cbrt.f64 16/9))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (cbrt.f64 16/9) u (cbrt.f64 -1/36)) (cbrt.f64 (cbrt.f64 -4/3))) (cbrt.f64 (cbrt.f64 16/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 u -1/4) -4/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 -4/3) (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 16/9))) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4/3 (neg.f64 (+.f64 (pow.f64 u 3) -1/64))) (neg.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -4/3 (+.f64 (pow.f64 u 3) -1/64)) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 -4/3))) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 16/9)) (cbrt.f64 -4/3)) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 u 3) -1/64)) -4/3) (neg.f64 (+.f64 1/16 (*.f64 u (+.f64 u 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 u 3) -1/64) -4/3) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 u 3) -1/64) (cbrt.f64 -4/3)) (cbrt.f64 16/9)) (+.f64 1/16 (*.f64 u (+.f64 u 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 u -1/4) -4/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 u -1/4) -4/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 u -1/4) -4/3)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 u -1/4) -4/3)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 u -1/4) -4/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (+.f64 u -1/4) -4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (+.f64 u -1/4) -4/3))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 (+.f64 u -1/4) -4/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 u -1/4) -4/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -4/3) (*.f64 (cbrt.f64 16/9) u) (*.f64 (cbrt.f64 -4/3) (cbrt.f64 -1/36)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 16/9) u) (cbrt.f64 -4/3) (*.f64 (cbrt.f64 -1/36) (cbrt.f64 -4/3)))))))"]],"rules":[["egg-rr",52],["egg-rr",60],["egg-rr",49],["egg-rr",19]],"time":40.56494140625,"type":"rewrite"},{"count":[[240,240]],"inputs":[["(log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))","(+.f64 (/.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))","(+.f64 (/.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2))) (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))","(+.f64 (/.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (+.f64 (*.f64 -64/81 (/.f64 (pow.f64 u 3) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2))) (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (*.f64 1/4 (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))) (*.f64 1/4 (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (+.f64 (*.f64 -9/64 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3) (pow.f64 u 3))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))) (*.f64 1/4 (/.f64 1 u)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))","(+.f64 (/.f64 -1/4 u) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))) (*.f64 1/4 (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (+.f64 (*.f64 -9/64 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3) (pow.f64 u 3))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))) (*.f64 1/4 (/.f64 1 u)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))","(+.f64 (*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))) (*.f64 -3 (/.f64 (*.f64 s (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))","(+.f64 (*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 s (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2)))) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2))) (*.f64 -3 (/.f64 (*.f64 s (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))))","(+.f64 (*.f64 64/27 (/.f64 (*.f64 s (pow.f64 u 3)) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3))) (+.f64 (*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 s (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2)))) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2))) (*.f64 -3 (/.f64 (*.f64 s (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))))","(*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))","(+.f64 (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))) (*.f64 -3 (/.f64 (*.f64 s (-.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))) 1/4)) u)))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2)) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))) (*.f64 -3 (/.f64 (*.f64 s (-.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))) 1/4)) u))))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2)) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))) (+.f64 (*.f64 -3 (/.f64 (*.f64 s (-.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))) 1/4)) u)) (*.f64 27/64 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3)) (pow.f64 u 3))))))","(*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))","(+.f64 (*.f64 -3 (/.f64 (*.f64 s (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)))) (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))))","(+.f64 (*.f64 -3 (/.f64 (*.f64 s (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2)) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))))","(+.f64 (*.f64 -3 (/.f64 (*.f64 s (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2)) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (+.f64 (*.f64 27/64 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3)) (pow.f64 u 3))) (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))))))","(*.f64 -1/4 (cbrt.f64 16/9))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 (cbrt.f64 16/9) u)","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 (cbrt.f64 16/9) u)","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))","(log.f64 4/3)","(+.f64 (/.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))","(fma.f64 (*.f64 -4/3 u) (neg.f64 -3/4) (log.f64 4/3))","(+.f64 (/.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2))) (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))","(fma.f64 (*.f64 -4/3 u) (neg.f64 -3/4) (fma.f64 -1/2 (pow.f64 (*.f64 (*.f64 4/3 u) -3/4) 2) (log.f64 4/3)))","(+.f64 (/.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (+.f64 (*.f64 -64/81 (/.f64 (pow.f64 u 3) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2))) (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))))","(fma.f64 (*.f64 -4/3 u) (neg.f64 -3/4) (fma.f64 (pow.f64 (/.f64 u 4/3) 3) -64/81 (fma.f64 -1/2 (pow.f64 (*.f64 (*.f64 4/3 u) -3/4) 2) (log.f64 4/3))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(+.f64 (log.f64 u) (log.f64 -4/3))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (*.f64 1/4 (/.f64 1 u)))","(+.f64 (log.f64 u) (+.f64 (log.f64 -4/3) (/.f64 -1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))) (*.f64 1/4 (/.f64 1 u)))","(+.f64 (log.f64 u) (+.f64 (fma.f64 -1/2 (*.f64 (*.f64 4/3 4/3) (/.f64 9/16 (*.f64 u u))) (log.f64 -4/3)) (/.f64 -1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (+.f64 (*.f64 -9/64 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3) (pow.f64 u 3))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))) (*.f64 1/4 (/.f64 1 u)))","(+.f64 (log.f64 u) (+.f64 (fma.f64 -1/2 (*.f64 (*.f64 4/3 4/3) (/.f64 9/16 (*.f64 u u))) (fma.f64 -9/64 (pow.f64 (/.f64 4/3 u) 3) (log.f64 -4/3))) (/.f64 -1 u)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))","(-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))","(+.f64 (/.f64 -1/4 u) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))","(+.f64 (-.f64 (/.f64 -1/4 u) (neg.f64 (log.f64 (neg.f64 u)))) (+.f64 (/.f64 -3/4 u) (log.f64 4/3)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))) (*.f64 1/4 (/.f64 1 u)))","(+.f64 (neg.f64 (neg.f64 (log.f64 (neg.f64 u)))) (+.f64 (fma.f64 -1/2 (*.f64 (*.f64 4/3 4/3) (/.f64 9/16 (*.f64 u u))) (log.f64 4/3)) (/.f64 -1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (+.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (+.f64 (*.f64 -9/64 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3) (pow.f64 u 3))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))) (*.f64 1/4 (/.f64 1 u)))","(+.f64 (neg.f64 (neg.f64 (log.f64 (neg.f64 u)))) (+.f64 (fma.f64 -1/2 (*.f64 (*.f64 4/3 4/3) (/.f64 9/16 (*.f64 u u))) (fma.f64 -9/64 (pow.f64 (/.f64 4/3 u) 3) (log.f64 4/3))) (/.f64 -1 u)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) (-.f64 u 1/4)))))))","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 -4/3 u 1/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))","(*.f64 (*.f64 -3 s) (log.f64 4/3))","(+.f64 (*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))) (*.f64 -3 (/.f64 (*.f64 s (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))","(*.f64 -3 (fma.f64 s (log.f64 4/3) (*.f64 (*.f64 (*.f64 4/3 u) s) -3/4)))","(+.f64 (*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 s (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2)))) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2))) (*.f64 -3 (/.f64 (*.f64 s (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))))","(+.f64 (*.f64 -3 (fma.f64 s (log.f64 4/3) (*.f64 (*.f64 (*.f64 4/3 u) s) -3/4))) (*.f64 (*.f64 3/2 (*.f64 s (pow.f64 (*.f64 -4/3 u) 2))) 9/16))","(+.f64 (*.f64 64/27 (/.f64 (*.f64 s (pow.f64 u 3)) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3))) (+.f64 (*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 s (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2)))) (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2))) (*.f64 -3 (/.f64 (*.f64 s (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))) (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))))","(fma.f64 64/27 (/.f64 (*.f64 s (pow.f64 u 3)) 64/27) (+.f64 (*.f64 -3 (fma.f64 s (log.f64 4/3) (*.f64 (*.f64 (*.f64 4/3 u) s) -3/4))) (*.f64 (*.f64 3/2 (*.f64 s (pow.f64 (*.f64 -4/3 u) 2))) 9/16)))","(*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))","(*.f64 (*.f64 -3 s) (+.f64 (log.f64 u) (log.f64 -4/3)))","(+.f64 (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))) (*.f64 -3 (/.f64 (*.f64 s (-.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))) 1/4)) u)))","(*.f64 -3 (fma.f64 s (+.f64 (log.f64 u) (log.f64 -4/3)) (/.f64 s (neg.f64 u))))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2)) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))) (*.f64 -3 (/.f64 (*.f64 s (-.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))) 1/4)) u))))","(fma.f64 -3 (fma.f64 s (+.f64 (log.f64 u) (log.f64 -4/3)) (/.f64 s (neg.f64 u))) (*.f64 (*.f64 3/2 (*.f64 s (*.f64 4/3 4/3))) (/.f64 9/16 (*.f64 u u))))","(+.f64 (*.f64 3/2 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2)) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))) (+.f64 (*.f64 -3 (/.f64 (*.f64 s (-.f64 (/.f64 1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))) 1/4)) u)) (*.f64 27/64 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3)) (pow.f64 u 3))))))","(fma.f64 3/2 (*.f64 (*.f64 s (*.f64 4/3 4/3)) (/.f64 9/16 (*.f64 u u))) (fma.f64 -3 (fma.f64 s (+.f64 (log.f64 u) (log.f64 -4/3)) (/.f64 s (neg.f64 u))) (/.f64 (*.f64 27/64 (*.f64 s 64/27)) (pow.f64 u 3))))","(*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))","(*.f64 (*.f64 -3 s) (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))))","(+.f64 (*.f64 -3 (/.f64 (*.f64 s (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)))) (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))))","(*.f64 -3 (fma.f64 (*.f64 s 4/3) (/.f64 -3/4 u) (*.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))))))","(+.f64 (*.f64 -3 (/.f64 (*.f64 s (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2)) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))))))))","(+.f64 (*.f64 -3 (fma.f64 (*.f64 s 4/3) (/.f64 -3/4 u) (*.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))))) (*.f64 (*.f64 3/2 (*.f64 s (*.f64 4/3 4/3))) (/.f64 9/16 (*.f64 u u))))","(+.f64 (*.f64 -3 (/.f64 (*.f64 s (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))) (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)))) (+.f64 (*.f64 3/2 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 2)) (*.f64 (pow.f64 (cbrt.f64 16/9) 2) (*.f64 (pow.f64 (cbrt.f64 -4/3) 2) (pow.f64 u 2))))) (+.f64 (*.f64 27/64 (/.f64 (*.f64 s (pow.f64 (+.f64 1 (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))) 3)) (pow.f64 u 3))) (*.f64 -3 (*.f64 s (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 (*.f64 -1 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))))))))","(+.f64 (fma.f64 (*.f64 (*.f64 s (*.f64 4/3 4/3)) (/.f64 9/16 (*.f64 u u))) 3/2 (/.f64 (*.f64 27/64 (*.f64 s 64/27)) (pow.f64 u 3))) (*.f64 -3 (fma.f64 (*.f64 s 4/3) (/.f64 -3/4 u) (*.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))))))","(*.f64 -1/4 (cbrt.f64 16/9))","(cbrt.f64 (*.f64 -1/64 16/9))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","(*.f64 (cbrt.f64 16/9) u)","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","(*.f64 (cbrt.f64 16/9) u)","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","(+.f64 (*.f64 (cbrt.f64 16/9) u) (*.f64 -1/4 (cbrt.f64 16/9)))","(*.f64 (cbrt.f64 16/9) (+.f64 u -1/4))","(*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3)))","1/3","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(fma.f64 -4/3 u 1/3)","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(fma.f64 -4/3 u 1/3)","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(fma.f64 -4/3 u 1/3)","(*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))","(*.f64 -4/3 u)","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(fma.f64 -4/3 u 1/3)","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(fma.f64 -4/3 u 1/3)","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(fma.f64 -4/3 u 1/3)","(*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u))","(*.f64 -4/3 u)","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(fma.f64 -4/3 u 1/3)","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(fma.f64 -4/3 u 1/3)","(+.f64 (*.f64 (cbrt.f64 16/9) (*.f64 (cbrt.f64 -4/3) u)) (*.f64 -1/4 (*.f64 (cbrt.f64 16/9) (cbrt.f64 -4/3))))","(fma.f64 -4/3 u 1/3)"]],"time":218.05615234375,"type":"simplify"},{"compiler":[[5154,4427]],"time":75.826904296875,"type":"eval"},{"alts":[["(*.f64 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))) -3)","fresh",1.1323429770722842],["(*.f64 (neg.f64 (*.f64 3 s)) (log.f64 (fma.f64 -4/3 (+.f64 u -1/4) 1)))","fresh",1.263190893114014],["(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","fresh",1.243511881516786],["(*.f64 (*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) (cbrt.f64 -3)) (cbrt.f64 9))","fresh",0.9682077650343633],["(pow.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) 3)","fresh",0.8900063978130588],["(*.f64 (neg.f64 (*.f64 3 s)) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 3))","fresh",0.9230253009868439],["(*.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 -3 s)))","fresh",0.7345340942107987],["(*.f64 (*.f64 s (log1p.f64 (fma.f64 (sqrt.f64 1/3) (sqrt.f64 1/3) (*.f64 u -4/3)))) -3)","fresh",1.1742329360599608],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 u -1/4) 3) 16/9) 1/3) (cbrt.f64 -4/3))))","fresh",0.8782555364583519],["(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","fresh",1.1110494189039757],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))) 3) -3)","fresh",0.8881493836356409],["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","next",0.7293849693669461],["(*.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) s)","fresh",0.7364490356001465]],"compiler":[[11,9],[14,12],[14,12],[15,13],[14,12],[15,13],[21,18],[15,13],[20,18],[11,9],[14,12],[21,18],[11,9],[11,9],[14,12],[14,12],[15,13],[14,12],[15,13],[21,18],[15,13],[20,18],[11,9],[14,12],[21,18],[11,9]],"count":[[254,13]],"kept":[{"done":[0,0],"fresh":[13,12],"new":[240,1],"picked":[1,0]}],"min-error":[0.0234375],"time":48.826904296875,"type":"prune"},{"compiler":[[70,57]],"locations":[["(fma.f64 u -4/3 1/3)",0.31640625,false],["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))",0.36556625976844204,true],["(log1p.f64 (fma.f64 u -4/3 1/3))",0.3923560070753776,false],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)",0.484375,true]],"time":23.4990234375,"type":"localize"},{"count":[[2,36]],"series":[["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","s","-inf",0.31591796875],["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","s","inf",0.386962890625],["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","s","0",1.40576171875],["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","u","-inf",0.27587890625],["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","u","inf",0.2490234375],["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","u","0",0.30712890625],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)","u","-inf",0.510986328125],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)","u","inf",0.513916015625],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)","u","0",0.43017578125]],"time":4.572021484375,"type":"series"},{"count":[[2,73]],"inputs":[["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)","(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 0) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) (*.f64 0 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (+.f64 2/3 1)) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) (*.f64 (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (pow.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (+.f64 2/3 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4))) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 0) (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) (*.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) (*.f64 0 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 2/3) (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) (*.f64 -3 s)) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) -3) (*.f64 s (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))) (pow.f64 (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) (*.f64 -3 s))) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) 4) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))) (*.f64 (pow.f64 (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) 2/3) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -3 (*.f64 (*.f64 s (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) 4) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3)) (*.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) (*.f64 -3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) 2/3) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3)) (cbrt.f64 (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 s (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 s (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) 4) (*.f64 (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 3 (*.f64 (*.f64 s (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 3 (*.f64 (*.f64 s (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 3))))))"]],"rules":[["egg-rr",40],["egg-rr",33]],"time":25.85205078125,"type":"rewrite"},{"count":[[109,122]],"inputs":[["(pow.f64 (log.f64 4/3) 2)","(+.f64 (pow.f64 (log.f64 4/3) 2) (*.f64 -2 (*.f64 (log.f64 4/3) u)))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (log.f64 4/3))) (pow.f64 u 3)) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u)))))","(pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 3))) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))))","(pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2)","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2))))))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2/3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1) (pow.f64 u 3))) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2)))))))","(*.f64 -3 (*.f64 s (log.f64 4/3)))","(+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3))))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3)))))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (+.f64 (*.f64 s (pow.f64 u 3)) (*.f64 -3 (*.f64 s (log.f64 4/3))))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (log.f64 4/3) 2)","(+.f64 (pow.f64 (log.f64 4/3) 2) (*.f64 -2 (*.f64 (log.f64 4/3) u)))","(fma.f64 (*.f64 -2 (log.f64 4/3)) u (pow.f64 (log.f64 4/3) 2))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u))))","(+.f64 (fma.f64 (*.f64 -2 (log.f64 4/3)) u (pow.f64 (log.f64 4/3) 2)) (*.f64 (-.f64 1 (log.f64 4/3)) (*.f64 u u)))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (log.f64 4/3))) (pow.f64 u 3)) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u)))))","(+.f64 (fma.f64 (pow.f64 u 3) (fma.f64 (log.f64 4/3) -2/3 1) (*.f64 (-.f64 1 (log.f64 4/3)) (*.f64 u u))) (fma.f64 (*.f64 -2 (log.f64 4/3)) u (pow.f64 (log.f64 4/3) 2)))","(pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)","(pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2)","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2))","(fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))","(+.f64 (fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2)) (/.f64 (+.f64 (neg.f64 (+.f64 (log.f64 -4/3) (log.f64 u))) 1) (*.f64 u u)))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 3))) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))))","(+.f64 (+.f64 (/.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (log.f64 -4/3) (log.f64 u)))) (pow.f64 u 3)) (/.f64 (+.f64 (neg.f64 (+.f64 (log.f64 -4/3) (log.f64 u))) 1) (*.f64 u u))) (fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2)))","(pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2)","(pow.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) 2)","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)))","(-.f64 (pow.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) 2) (/.f64 (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 u))) (*.f64 2 (log.f64 4/3))) u))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2))))))","(+.f64 (pow.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) 2) (-.f64 (-.f64 (pow.f64 u -2) (/.f64 (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 u))) (*.f64 2 (log.f64 4/3))) u)) (*.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) (pow.f64 u -2))))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2/3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1) (pow.f64 u 3))) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2)))))))","(+.f64 (+.f64 (pow.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) 2) (-.f64 (pow.f64 u -2) (/.f64 (fma.f64 -2 (neg.f64 (log.f64 (neg.f64 u))) (*.f64 2 (log.f64 4/3))) u))) (neg.f64 (fma.f64 (fma.f64 2/3 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) -1) (pow.f64 u -3) (*.f64 (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))) (pow.f64 u -2)))))","(*.f64 -3 (*.f64 s (log.f64 4/3)))","(*.f64 (*.f64 -3 s) (log.f64 4/3))","(+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3))))","(fma.f64 (*.f64 -3 s) (log.f64 4/3) (*.f64 (*.f64 3 s) u))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3)))))","(fma.f64 (*.f64 s (*.f64 u u)) 3/2 (fma.f64 (*.f64 -3 s) (log.f64 4/3) (*.f64 (*.f64 3 s) u)))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (+.f64 (*.f64 s (pow.f64 u 3)) (*.f64 -3 (*.f64 s (log.f64 4/3))))))","(fma.f64 (*.f64 s (*.f64 u u)) 3/2 (fma.f64 (*.f64 3 s) u (fma.f64 s (pow.f64 u 3) (*.f64 (*.f64 -3 s) (log.f64 4/3)))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(*.f64 (*.f64 -3 s) (+.f64 (log.f64 -4/3) (log.f64 u)))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(fma.f64 3 (/.f64 s u) (*.f64 (*.f64 -3 s) (+.f64 (log.f64 -4/3) (log.f64 u))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (log.f64 u))) (/.f64 (*.f64 3/2 s) (*.f64 u u))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(fma.f64 s (pow.f64 u -3) (fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (log.f64 u))) (/.f64 (*.f64 3/2 s) (*.f64 u u)))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(*.f64 (*.f64 -3 s) (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u)))))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(fma.f64 3 (/.f64 s u) (*.f64 (*.f64 -3 s) (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))) (/.f64 (*.f64 3/2 s) (*.f64 u u))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(fma.f64 s (pow.f64 u -3) (fma.f64 (/.f64 s u) 3 (fma.f64 -3 (*.f64 s (-.f64 (log.f64 4/3) (neg.f64 (log.f64 (neg.f64 u))))) (/.f64 (*.f64 3/2 s) (*.f64 u u)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 4/3 (*.f64 -4/3 u)))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))"]],"time":135.7900390625,"type":"simplify"},{"compiler":[[7073,5837]],"time":99.717041015625,"type":"eval"},{"alts":[["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 (*.f64 u (cbrt.f64 -4/3)) (cbrt.f64 16/9) 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","fresh",0.9872528887119619],["(*.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 -3 s)))","fresh",0.7345340942107987],["(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 u -1/4) 3) 16/9) 1/3) (cbrt.f64 -4/3))))","fresh",0.8782555364583519],["(*.f64 (cbrt.f64 (pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 6) 1/3)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","fresh",0.7800312759610991],["(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","fresh",1.243511881516786],["(pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 3)","fresh",0.8900063978130588],["(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","fresh",1.1110494189039757],["(*.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) s)","fresh",0.7364490356001465],["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log.f64 (+.f64 4/3 (*.f64 u -4/3))))))","fresh",0.910588355715221],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))) 3) -3)","fresh",0.8881493836356409],["(*.f64 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))) -3)","fresh",1.1323429770722842],["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (*.f64 (+.f64 (pow.f64 (*.f64 u -4/3) 3) 1/27) (/.f64 1 (-.f64 (+.f64 (*.f64 (*.f64 u u) 16/9) 1/9) (*.f64 (*.f64 u -4/3) 1/3))))))))","fresh",1.0522926667823376],["(*.f64 (neg.f64 (*.f64 3 s)) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 3))","fresh",0.9230253009868439]],"compiler":[[25,22],[21,18],[20,18],[23,20],[14,12],[14,12],[11,9],[11,9],[22,19],[14,12],[11,9],[40,34],[15,13]],"count":[[299,13]],"kept":[{"done":[0,0],"fresh":[12,7],"new":[286,6],"picked":[1,0]}],"min-error":[0.01171875],"time":46.58984375,"type":"prune"},{"accuracy":[0.70596621221266],"baseline":[0.7059662122126602],"branch":[["s",0.7059662122126602,1],["u",0.7059662122126603,1],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))",0.7059662122126602,1],["(*.f64 3 s)",0.7059662122126602,1],["(*.f64 3 s)",0.7059662122126602,1],["(log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4))))",0.7059662122126603,1],["(/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))",0.7059662122126603,1],["(-.f64 1 (/.f64 (-.f64 u 1/4) 3/4))",0.70596621221266,1],["(/.f64 (-.f64 u 1/4) 3/4)",0.7059662122126603,1],["(-.f64 u 1/4)",0.7059662122126603,1],["(-.f64 u 1/4)",0.7059662122126603,1]],"compiler":[[3,2],[3,2],[16,14],[5,4],[5,4],[12,11],[11,10],[9,8],[7,6],[5,4],[5,4],[393,329]],"count":[[26,1]],"inputs":[["(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 (*.f64 u (cbrt.f64 -4/3)) (cbrt.f64 16/9) 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","(*.f64 (cbrt.f64 (pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 6) 1/3)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","(pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 3)","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log.f64 (+.f64 4/3 (*.f64 u -4/3))))))","(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (*.f64 (+.f64 (pow.f64 (*.f64 u -4/3) 3) 1/27) (/.f64 1 (-.f64 (+.f64 (*.f64 (*.f64 u u) 16/9) 1/9) (*.f64 (*.f64 u -4/3) 1/3))))))))","(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 u -1/4) 3) 16/9) 1/3) (cbrt.f64 -4/3))))","(*.f64 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))) -3)","(*.f64 (*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) (cbrt.f64 -3)) (cbrt.f64 9))","(*.f64 (*.f64 s (log1p.f64 (fma.f64 (sqrt.f64 1/3) (sqrt.f64 1/3) (*.f64 u -4/3)))) -3)","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 (pow.f64 (cbrt.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3)))) 3) -3)","(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (+.f64 u -1/4) 2)) -4/3) (cbrt.f64 (+.f64 u -1/4)))))","(*.f64 (cbrt.f64 (*.f64 (*.f64 s s) 9)) (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (cbrt.f64 (*.f64 -3 s))))","(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)","(*.f64 (neg.f64 (*.f64 3 s)) (log.f64 (fma.f64 -4/3 (+.f64 u -1/4) 1)))","(pow.f64 (cbrt.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))) 3)","(*.f64 (neg.f64 (*.f64 3 s)) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 3))","(*.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) s)","(*.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 -3 s)))","(pow.f64 (pow.f64 (*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3))) 3) 1/3)","(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (*.f64 (cbrt.f64 16/9) (+.f64 u -1/4)) (cbrt.f64 -4/3))))","(*.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (*.f64 (*.f64 -3 s) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 1 (*.f64 -4/3 (-.f64 u 1/4))))))","(*.f64 (neg.f64 (*.f64 3 s)) (log1p.f64 (*.f64 (+.f64 u -1/4) -4/3)))","(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))"]],"link":["."],"name":["Disney BSSRDF, sample scattering profile, upper"],"oracle":[39.526952957143784],"outputs":[["(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)"]],"time":99.27197265625,"times":[["s",8.1259765625],["u",7.994873046875],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))",8.4560546875],["(*.f64 3 s)",8.197021484375],["(*.f64 3 s)",8.387939453125],["(log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4))))",8.192138671875],["(/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))",8.1630859375],["(-.f64 1 (/.f64 (-.f64 u 1/4) 3/4))",8.055908203125],["(/.f64 (-.f64 u 1/4) 3/4)",8.22509765625],["(-.f64 u 1/4)",8.033935546875],["(-.f64 u 1/4)",8.15087890625]],"type":"regimes"},{"compiler":[[11,9]],"inputs":[["(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 s (log1p.f64 (fma.f64 u -4/3 1/3))) -3)","(*.f64 (*.f64 -3 s) (log1p.f64 (fma.f64 u -4/3 1/3)))"]],"stop":[["fuel",1]],"time":22.47900390625,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[11,9]],"remove-preprocessing":[[]],"time":8.93603515625,"type":"end"}]