[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.4317728507180864,0.5662754543277838,0.0019516949541297235],[11,0.38986261915854303,0.6081856858873271,0.0019516949541298345],[10,0.3118900953268344,0.6861582097190357,0.0019516949541298345],[9,0.18713405719610066,0.8109142478497695,0.0019516949541298345],[8,0.12475603813073377,0.8732922669151364,0.0019516949541298345],[7,0.12475603813073377,0.8732922669151364,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":96.913818359375,"type":"analyze"},{"outcomes":[["body",256,"invalid",16.41259765625,381],["body",256,"valid",355.683349609375,8256]],"time":380.87109375,"type":"sample"},{"compiler":[[11,7]],"inputs":[["0","1","2","3"],["(/.f64 x (-.f64 y (*.f64 z t)))","(/.f64 y (-.f64 x (*.f64 z t)))","(/.f64 z (-.f64 y (*.f64 x t)))","(/.f64 t (-.f64 y (*.f64 z x)))","(/.f64 x (-.f64 z (*.f64 y t)))","(/.f64 x (-.f64 t (*.f64 z y)))","(/.f64 x (-.f64 y (*.f64 t z)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(/.f64 x (-.f64 y (*.f64 z t)))","(/.f64 y (-.f64 x (*.f64 z t)))","(/.f64 z (-.f64 y (*.f64 x t)))","(/.f64 t (-.f64 y (*.f64 z x)))","(/.f64 x (-.f64 z (*.f64 y t)))","(/.f64 x (-.f64 t (*.f64 z y)))","(/.f64 x (-.f64 y (*.f64 t z)))","(/.f64 x (-.f64 y (*.f64 z t)))"]],"symmetry":[[]],"time":82.719970703125,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 x (-.f64 y (*.f64 z t)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (-.f64 y (*.f64 z t)))","(/.f64 x (fma.f64 z (neg.f64 t) y))"]],"time":17.48095703125,"type":"simplify"},{"compiler":[[18,10]],"time":0.330078125,"type":"eval"},{"alts":[["(/.f64 x (fma.f64 z (neg.f64 t) y))","next",2.6740575879326975]],"compiler":[[11,7],[11,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[2.6740575879326975],"time":0.845947265625,"type":"prune"},{"compiler":[[22,7]],"locations":[["(/.f64 x (fma.f64 z (neg.f64 t) y))",2.6740575879326975,true]],"time":4.76904296875,"type":"localize"},{"count":[[1,48]],"series":[["(/.f64 x (fma.f64 z (neg.f64 t) y))","y","-inf",0.3251953125],["(/.f64 x (fma.f64 z (neg.f64 t) y))","y","inf",0.657958984375],["(/.f64 x (fma.f64 z (neg.f64 t) y))","y","0",0.4169921875],["(/.f64 x (fma.f64 z (neg.f64 t) y))","t","-inf",0.347900390625],["(/.f64 x (fma.f64 z (neg.f64 t) y))","t","inf",0.4130859375],["(/.f64 x (fma.f64 z (neg.f64 t) y))","t","0",0.344970703125],["(/.f64 x (fma.f64 z (neg.f64 t) y))","z","-inf",0.39990234375],["(/.f64 x (fma.f64 z (neg.f64 t) y))","z","inf",0.551025390625],["(/.f64 x (fma.f64 z (neg.f64 t) y))","z","0",1.594970703125],["(/.f64 x (fma.f64 z (neg.f64 t) y))","x","-inf",0.469970703125],["(/.f64 x (fma.f64 z (neg.f64 t) y))","x","inf",0.700927734375],["(/.f64 x (fma.f64 z (neg.f64 t) y))","x","0",0.738037109375]],"time":7.175048828125,"type":"series"},{"count":[[1,52]],"inputs":[["(/.f64 x (fma.f64 z (neg.f64 t) y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (/.f64 (cbrt.f64 x) (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x x) (fma.f64 z (neg.f64 t) y))) (*.f64 (cbrt.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) -2/3)) (cbrt.f64 (/.f64 (*.f64 x x) (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (fma.f64 z (neg.f64 t) y)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 z t) y) -1/3) (*.f64 x (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 x 2/3)) (/.f64 (cbrt.f64 x) (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) (*.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (*.f64 z t) y))) (neg.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 x 2/3) (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 -1 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3) (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 (*.f64 z t) y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) -2/3)) (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (fma.f64 z (neg.f64 t) y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (pow.f64 (fma.f64 z (neg.f64 t) y) -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -2/3)) (/.f64 x (cbrt.f64 (-.f64 (*.f64 z t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -2/3) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 z t) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 (*.f64 z t) y))) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3) (cbrt.f64 (neg.f64 x))) (pow.f64 (-.f64 (*.f64 z t) y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (+.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3) (*.f64 0 (cbrt.f64 (/.f64 x (-.f64 (*.f64 z t) y)))))) (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (fma.f64 z (neg.f64 t) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))) (neg.f64 (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -2/3))) (cbrt.f64 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (-.f64 (*.f64 z t) y))) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2) (neg.f64 x))) (cbrt.f64 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (*.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (cbrt.f64 (pow.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 (*.f64 z t) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) -2/3)) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (*.f64 z t) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3) (cbrt.f64 (neg.f64 x)))) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 x (-.f64 (*.f64 z t) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 3))))))"]],"rules":[["egg-rr",52]],"time":41.126953125,"type":"rewrite"},{"count":[[100,69]],"inputs":[["(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (/.f64 (*.f64 t (*.f64 z x)) y) y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (fma.f64 (*.f64 t (*.f64 z x)) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y 4)) (+.f64 (/.f64 x y) (fma.f64 (*.f64 t (*.f64 z x)) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 y y) x)) (pow.f64 (*.f64 t z) 3)) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 y y) x)) (pow.f64 (*.f64 t z) 3)) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (/.f64 (*.f64 t (*.f64 z x)) y) y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (fma.f64 (*.f64 t (*.f64 z x)) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y 4)) (+.f64 (/.f64 x y) (fma.f64 (*.f64 t (*.f64 z x)) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 y y) x)) (pow.f64 (*.f64 t z) 3)) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 y y) x)) (pow.f64 (*.f64 t z) 3)) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 y y) x)) (pow.f64 (*.f64 t z) 3)) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (/.f64 (*.f64 t (*.f64 z x)) y) y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (fma.f64 (*.f64 t (*.f64 z x)) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y 4)) (+.f64 (/.f64 x y) (fma.f64 (*.f64 t (*.f64 z x)) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (/.f64 (*.f64 t (*.f64 z x)) y) y))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (fma.f64 (*.f64 t (*.f64 z x)) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y 4)) (+.f64 (/.f64 x y) (fma.f64 (*.f64 t (*.f64 z x)) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)))))"]],"time":148.51708984375,"type":"simplify"},{"compiler":[[1161,415]],"time":10.48095703125,"type":"eval"},{"alts":[["(+.f64 (/.f64 x y) (/.f64 (/.f64 (*.f64 t (*.f64 z x)) y) y))","fresh",31.947558566204556],["(/.f64 x y)","fresh",28.91767102889914],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","fresh",3.111046552838423],["(/.f64 x (fma.f64 z (neg.f64 t) y))","done",2.6740575879326975],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","next",2.8107763379326975]],"compiler":[[17,10],[7,5],[14,10],[11,7],[14,10],[17,10],[7,5],[14,10],[14,10]],"count":[[70,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[69,4],"picked":[1,1]}],"min-error":[2.6022552355858934],"time":13.2568359375,"type":"prune"},{"compiler":[[35,13]],"locations":[["(/.f64 -1 (fma.f64 z (neg.f64 t) y))",0.109375,true],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))",2.8029638379326967,true]],"time":7.14111328125,"type":"localize"},{"count":[[2,84]],"series":[["(/.f64 -1 (fma.f64 z (neg.f64 t) y))","y","-inf",0.5888671875],["(/.f64 -1 (fma.f64 z (neg.f64 t) y))","y","inf",0.2470703125],["(/.f64 -1 (fma.f64 z (neg.f64 t) y))","y","0",0.30517578125],["(/.f64 -1 (fma.f64 z (neg.f64 t) y))","t","-inf",0.254150390625],["(/.f64 -1 (fma.f64 z (neg.f64 t) y))","t","inf",0.319091796875],["(/.f64 -1 (fma.f64 z (neg.f64 t) y))","t","0",0.288818359375],["(/.f64 -1 (fma.f64 z (neg.f64 t) y))","z","-inf",0.255126953125],["(/.f64 -1 (fma.f64 z (neg.f64 t) y))","z","inf",0.37109375],["(/.f64 -1 (fma.f64 z (neg.f64 t) y))","z","0",0.36083984375],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","x","-inf",0.1640625],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","x","inf",0.173095703125],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","x","0",0.155029296875],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","y","-inf",0.200927734375],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","y","inf",0.22998046875],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","y","0",0.2099609375],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","t","-inf",0.247802734375],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","t","inf",0.219970703125],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","t","0",0.220947265625],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","z","-inf",0.22509765625],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","z","inf",0.27001953125],["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","z","0",0.238037109375]],"time":5.862060546875,"type":"series"},{"count":[[2,116]],"inputs":[["(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","(/.f64 -1 (fma.f64 z (neg.f64 t) y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) (*.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 0) (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) (*.f64 0 (/.f64 x (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (fma.f64 z (neg.f64 t) y))) (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 -1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3) (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) (/.f64 (neg.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (fma.f64 z (neg.f64 t) y)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z (neg.f64 t) y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 x 2/3) (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (/.f64 (cbrt.f64 x) (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (-.f64 (*.f64 z t) y)) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2)) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (cbrt.f64 x) (-.f64 (*.f64 z t) y))) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (-.f64 (*.f64 z t) y)) (neg.f64 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (*.f64 z t) y))) (neg.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (*.f64 z t) y))) (/.f64 (pow.f64 x 2/3) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (*.f64 z t) y))) (/.f64 (neg.f64 (pow.f64 x 2/3)) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (neg.f64 (pow.f64 x 2/3)) (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) (/.f64 (neg.f64 (pow.f64 x 2/3)) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (neg.f64 (pow.f64 x 2/3)) (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (cbrt.f64 (-.f64 (*.f64 z t) y))) (/.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (/.f64 (cbrt.f64 (neg.f64 x)) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) -1) (/.f64 (cbrt.f64 x) (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) (/.f64 (neg.f64 x) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 (*.f64 z t) y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (/.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2))) (/.f64 (neg.f64 x) (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (/.f64 (cbrt.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (fma.f64 z (neg.f64 t) y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 z t) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 (*.f64 z t) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (fma.f64 z (neg.f64 t) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3) (cbrt.f64 x)) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 1) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) x) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (cbrt.f64 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (neg.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3)) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 1) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 (*.f64 z t) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 x (-.f64 (*.f64 z t) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 x (fma.f64 z (neg.f64 t) y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3))) 1) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2))) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3))) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2))) (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2)) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2))) (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) (/.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (/.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (/.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z (neg.f64 t) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (*.f64 (fma.f64 z (neg.f64 t) y) (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3))) (*.f64 (fma.f64 z (neg.f64 t) y) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (-.f64 (*.f64 z t) y)) (-.f64 (*.f64 z t) y)) (*.f64 (fma.f64 z (neg.f64 t) y) (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) 1) (*.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2)) (cbrt.f64 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2)) -1) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2))) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (fma.f64 z (neg.f64 t) y)) (fma.f64 z (neg.f64 t) y)) (pow.f64 (fma.f64 z (neg.f64 t) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (fma.f64 z (neg.f64 t) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (-.f64 (*.f64 z t) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 z (neg.f64 t) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 z t) y) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 z t) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 -1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 -1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 -1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 -1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 -1 (fma.f64 z (neg.f64 t) y)))))))"]],"rules":[["egg-rr",42],["egg-rr",74]],"time":30.598876953125,"type":"rewrite"},{"count":[[200,147]],"inputs":[["(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))))) (/.f64 1 y))","(/.f64 1 (*.f64 t z))","(+.f64 (/.f64 1 (*.f64 t z)) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (+.f64 (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))))","(/.f64 1 (*.f64 t z))","(+.f64 (/.f64 1 (*.f64 t z)) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (+.f64 (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))))) (/.f64 1 y))","(/.f64 1 (*.f64 t z))","(+.f64 (/.f64 1 (*.f64 t z)) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (+.f64 (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))))","(/.f64 1 (*.f64 t z))","(+.f64 (/.f64 1 (*.f64 t z)) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (+.f64 (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))))","(/.f64 1 (*.f64 t z))","(+.f64 (/.f64 1 (*.f64 t z)) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (+.f64 (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))))) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))))) (/.f64 1 y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (*.f64 (*.f64 t z) x) (*.f64 y y)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (fma.f64 (*.f64 (*.f64 t z) x) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y 4)) (+.f64 (/.f64 x y) (fma.f64 (*.f64 (*.f64 t z) x) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 y y) x)) (pow.f64 (*.f64 t z) 3)) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 y y) x)) (pow.f64 (*.f64 t z) 3)) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (*.f64 (*.f64 t z) x) (*.f64 y y)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (fma.f64 (*.f64 (*.f64 t z) x) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y 4)) (+.f64 (/.f64 x y) (fma.f64 (*.f64 (*.f64 t z) x) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 y y) x)) (pow.f64 (*.f64 t z) 3)) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 y y) x)) (pow.f64 (*.f64 t z) 3)) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(-.f64 (-.f64 (neg.f64 (/.f64 x (*.f64 t z))) (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (*.f64 y y) x)) (pow.f64 (*.f64 t z) 3)) (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (/.f64 x (*.f64 t z))) (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2)))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (*.f64 (*.f64 t z) x) (*.f64 y y)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (fma.f64 (*.f64 (*.f64 t z) x) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y 4)) (+.f64 (/.f64 x y) (fma.f64 (*.f64 (*.f64 t z) x) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (*.f64 (*.f64 t z) x) (*.f64 y y)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (fma.f64 (*.f64 (*.f64 t z) x) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y 4)) (+.f64 (/.f64 x y) (fma.f64 (*.f64 (*.f64 t z) x) (pow.f64 y (neg.f64 2)) (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)))))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (fma.f64 (neg.f64 t) z y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))) (/.f64 1 y))","(-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 t z) 2)) (pow.f64 y 3)) (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))))) (/.f64 1 y))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 t z) 2)) (pow.f64 y 3)) (/.f64 (pow.f64 (*.f64 t z) 3) (pow.f64 y 4))) (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 1 y))","(/.f64 1 (*.f64 t z))","(+.f64 (/.f64 1 (*.f64 t z)) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))","(fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z)))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))","(+.f64 (fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z))) (/.f64 (*.f64 y y) (pow.f64 (*.f64 t z) 3)))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (+.f64 (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))))","(+.f64 (+.f64 (fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z))) (/.f64 (*.f64 y y) (pow.f64 (*.f64 t z) 3))) (/.f64 (pow.f64 y 3) (pow.f64 (*.f64 t z) 4)))","(/.f64 1 (*.f64 t z))","(+.f64 (/.f64 1 (*.f64 t z)) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))","(fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z)))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))","(+.f64 (fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z))) (/.f64 (*.f64 y y) (pow.f64 (*.f64 t z) 3)))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (+.f64 (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))))","(+.f64 (+.f64 (fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z))) (/.f64 (*.f64 y y) (pow.f64 (*.f64 t z) 3))) (/.f64 (pow.f64 y 3) (pow.f64 (*.f64 t z) 4)))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))) (/.f64 1 y))","(-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 t z) 2)) (pow.f64 y 3)) (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))))) (/.f64 1 y))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 t z) 2)) (pow.f64 y 3)) (/.f64 (pow.f64 (*.f64 t z) 3) (pow.f64 y 4))) (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 1 y))","(/.f64 1 (*.f64 t z))","(+.f64 (/.f64 1 (*.f64 t z)) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))","(fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z)))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))","(+.f64 (fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z))) (/.f64 (*.f64 y y) (pow.f64 (*.f64 t z) 3)))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (+.f64 (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))))","(+.f64 (+.f64 (fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z))) (/.f64 (*.f64 y y) (pow.f64 (*.f64 t z) 3))) (/.f64 (pow.f64 y 3) (pow.f64 (*.f64 t z) 4)))","(/.f64 1 (*.f64 t z))","(+.f64 (/.f64 1 (*.f64 t z)) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))","(fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z)))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))","(+.f64 (fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z))) (/.f64 (*.f64 y y) (pow.f64 (*.f64 t z) 3)))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (+.f64 (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))))","(+.f64 (+.f64 (fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z))) (/.f64 (*.f64 y y) (pow.f64 (*.f64 t z) 3))) (/.f64 (pow.f64 y 3) (pow.f64 (*.f64 t z) 4)))","(/.f64 1 (*.f64 t z))","(+.f64 (/.f64 1 (*.f64 t z)) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))","(fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z)))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))","(+.f64 (fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z))) (/.f64 (*.f64 y y) (pow.f64 (*.f64 t z) 3)))","(+.f64 (/.f64 1 (*.f64 t z)) (+.f64 (/.f64 (pow.f64 y 2) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (+.f64 (/.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (/.f64 (pow.f64 y 3) (*.f64 (pow.f64 t 4) (pow.f64 z 4))))))","(+.f64 (+.f64 (fma.f64 y (pow.f64 (*.f64 t z) (neg.f64 2)) (/.f64 1 (*.f64 t z))) (/.f64 (*.f64 y y) (pow.f64 (*.f64 t z) 3))) (/.f64 (pow.f64 y 3) (pow.f64 (*.f64 t z) 4)))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))) (/.f64 1 y))","(-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 t z) 2)) (pow.f64 y 3)) (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))))) (/.f64 1 y))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 t z) 2)) (pow.f64 y 3)) (/.f64 (pow.f64 (*.f64 t z) 3) (pow.f64 y 4))) (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (/.f64 1 y))","(+.f64 (neg.f64 (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 -1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3)))) (/.f64 1 y))","(-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 t z) 2)) (pow.f64 y 3)) (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 t z) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (pow.f64 z 2)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (pow.f64 z 3)) (pow.f64 y 4))))) (/.f64 1 y))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (*.f64 t z) 2)) (pow.f64 y 3)) (/.f64 (pow.f64 (*.f64 t z) 3) (pow.f64 y 4))) (/.f64 (*.f64 t z) (*.f64 y y))) (/.f64 1 y))"]],"time":262.93310546875,"type":"simplify"},{"compiler":[[2585,1004]],"time":23.0888671875,"type":"eval"},{"alts":[["(/.f64 x (fma.f64 z (neg.f64 t) y))","done",2.6740575879326975],["(/.f64 (/.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","fresh",3.1296203321437486],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","next",3.111046552838423],["(*.f64 (/.f64 (-.f64 (*.f64 0 (fma.f64 z (neg.f64 t) y)) (fma.f64 z (neg.f64 t) y)) (pow.f64 (fma.f64 z (neg.f64 t) y) 2)) (neg.f64 x))","fresh",24.171446439359237],["(*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2)) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","fresh",19.659230737402904],["(/.f64 x y)","fresh",28.91767102889914]],"compiler":[[11,7],[26,10],[14,10],[28,14],[21,14],[7,5],[26,10],[14,10],[28,14],[21,14],[7,5]],"count":[[152,6]],"kept":[{"done":[1,1],"fresh":[3,1],"new":[147,4],"picked":[1,0]}],"min-error":[2.5905364855858934],"time":38.213134765625,"type":"prune"},{"compiler":[[41,11]],"locations":[["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)",0.5330239746741666,true],["(/.f64 x (fma.f64 z (neg.f64 t) y))",2.6740575879326975,false],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))",13.443789437167084,true]],"time":7.469970703125,"type":"localize"},{"count":[[2,24]],"series":[["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","y","-inf",1.784912109375],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","y","inf",2.81591796875],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","y","0",3.107177734375],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","t","-inf",2.035888671875],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","t","inf",6.569091796875],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","t","0",2.18994140625],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","z","-inf",2.01904296875],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","z","inf",5.0400390625],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","z","0",2.347900390625],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","x","-inf",0.780029296875],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","x","inf",0.48291015625],["(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","x","0",0.55712890625],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","y","-inf",0.63818359375],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","y","inf",0.9228515625],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","y","0",2.14404296875],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","t","-inf",0.659912109375],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","t","inf",1.007080078125],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","t","0",1.015869140625],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","z","-inf",0.64208984375],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","z","inf",1.65283203125],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","z","0",1.219970703125],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","x","-inf",0.467041015625],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","x","inf",0.327880859375],["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","x","0",0.549072265625]],"time":41.493896484375,"type":"series"},{"count":[[2,105]],"inputs":[["(cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))","(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 0) (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) (*.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) (*.f64 0 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3)) (cbrt.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 x)) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (/.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (cbrt.f64 x)) 1) (/.f64 (cbrt.f64 (pow.f64 x 2/3)) (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) (cbrt.f64 (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (/.f64 (pow.f64 x 2/3) (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 7/3)) (cbrt.f64 (cbrt.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))))) (cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 4/3) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (/.f64 x (-.f64 (*.f64 z t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (*.f64 z t) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) 1) (*.f64 (cbrt.f64 (-.f64 (*.f64 z t) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 x) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3)) (cbrt.f64 (cbrt.f64 x))) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) 1) (cbrt.f64 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (/.f64 x (-.f64 (*.f64 z t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 0) (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) (*.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (fma.f64 z (neg.f64 t) y))) (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) (*.f64 0 (/.f64 x (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (-.f64 (*.f64 z t) y)) (/.f64 x (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (/.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (/.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) -1) (/.f64 (cbrt.f64 x) (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 x)) 1) (/.f64 (pow.f64 x 2/3) (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) -1) (/.f64 (neg.f64 (pow.f64 x 2/3)) (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 4/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 (pow.f64 x 2/3) (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3) (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z (neg.f64 t) y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 7/3) (cbrt.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (fma.f64 z (neg.f64 t) y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3)) (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 7/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (*.f64 z t) y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 4/3) 2) (cbrt.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x -1) (/.f64 1 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (/.f64 (cbrt.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (/.f64 (cbrt.f64 x) (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) (/.f64 (neg.f64 x) (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) (/.f64 (neg.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (/.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (fma.f64 z (neg.f64 t) y)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) -1) (/.f64 (pow.f64 x 2/3) (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (*.f64 z t) y))) (/.f64 (pow.f64 x 2/3) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) (/.f64 x (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 (*.f64 z t) y))) (/.f64 (neg.f64 (pow.f64 x 2/3)) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 z t) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (cbrt.f64 x)) (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 4/3) 2)) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (pow.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (fma.f64 z (neg.f64 t) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 (*.f64 z t) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) x) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) (pow.f64 x 2/3)) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3) (cbrt.f64 (neg.f64 x))) (cbrt.f64 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 1) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) 1) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 2/3)) (cbrt.f64 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) 1) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (-.f64 (*.f64 z t) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 1) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 x)) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (neg.f64 x))) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (/.f64 (pow.f64 x 2/3) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (cbrt.f64 (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (-.f64 (*.f64 z t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (-.f64 (*.f64 z t) y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (fma.f64 z (neg.f64 t) y)) 3))))))"]],"rules":[["egg-rr",71],["egg-rr",34]],"time":28.42919921875,"type":"rewrite"},{"count":[[129,147]],"inputs":[["(pow.f64 (/.f64 x y) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (pow.f64 (/.f64 x y) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (+.f64 (pow.f64 (/.f64 x y) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) (pow.f64 z 2))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (+.f64 (pow.f64 (/.f64 x y) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) (pow.f64 z 2)))) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) t))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 t 3))))) (pow.f64 z 3)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3))))))","(pow.f64 (/.f64 x y) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (pow.f64 (/.f64 x y) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (+.f64 (pow.f64 (/.f64 x y) 1/3) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 t 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (+.f64 (pow.f64 (/.f64 x y) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 t 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) z) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 z 3))))) (pow.f64 t 3)))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (pow.f64 x 2)) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (cbrt.f64 -1))))","(+.f64 (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 4)) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (/.f64 x (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (pow.f64 y 3)) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (pow.f64 x 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (pow.f64 x 2)) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (cbrt.f64 -1)))))","(*.f64 (pow.f64 1 1/3) (/.f64 x y))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t))) z) (*.f64 (pow.f64 1 1/3) (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t))) z) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 t 2))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))))))) (pow.f64 z 2)) (*.f64 (pow.f64 1 1/3) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t))) z) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) t))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 t 3))))) (pow.f64 1 1/3))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) t))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) x) 1/3) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) t))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 t 3))))))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (pow.f64 y 10)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) t))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 t 2)))))))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 t 2))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))))))) (pow.f64 z 2)) (*.f64 (pow.f64 1 1/3) (/.f64 x y)))))","(*.f64 (pow.f64 1 1/3) (/.f64 x y))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z))) t) (*.f64 (pow.f64 1 1/3) (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z))) t) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 1 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 (/.f64 (*.f64 1 y) x) 1/3))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2)))))) (*.f64 (pow.f64 1 1/3) (/.f64 x y))))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z))) t) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 1 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 (/.f64 (*.f64 1 y) x) 1/3))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2)))))) (+.f64 (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) z) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 z 3))))))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) x) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) z) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 z 3))))))) (*.f64 -2/9 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) z) (pow.f64 (/.f64 (*.f64 1 x) (pow.f64 y 10)) 1/9))))) (+.f64 (*.f64 -2/9 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) z) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 z (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 (/.f64 (*.f64 1 y) x) 1/3))))))))))) (*.f64 (pow.f64 1 1/3) (/.f64 x y)))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) y) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) y) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 x (*.f64 t z)))) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 14)) (*.f64 (pow.f64 t 32) (pow.f64 z 32))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 t z)) x) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (cbrt.f64 -1))))))))) (pow.f64 y 2))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) y) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 x (*.f64 t z)))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 4)) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 4)) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (/.f64 x (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 14)) (*.f64 (pow.f64 t 32) (pow.f64 z 32))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 t z)) x) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (cbrt.f64 -1)))))))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (/.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 4)) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (/.f64 x (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (cbrt.f64 -1)) (pow.f64 (/.f64 (*.f64 1 (*.f64 t z)) x) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) x) (*.f64 (pow.f64 t 10) (pow.f64 z 10))) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))))) (cbrt.f64 -1))))))) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 14)) (*.f64 (pow.f64 t 32) (pow.f64 z 32))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 t z)) x) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (cbrt.f64 -1))))))))) (pow.f64 y 2)))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (/.f64 x y) 1/3)","(cbrt.f64 (/.f64 x y))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (pow.f64 (/.f64 x y) 1/3))","(fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16)) 1/9) (*.f64 t z)) (cbrt.f64 (/.f64 x y)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (+.f64 (pow.f64 (/.f64 x y) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) (pow.f64 z 2))))))","(+.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16)) 1/9) (*.f64 t z)) (cbrt.f64 (/.f64 x y))) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) (*.f64 x x))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3)))) (*.f64 z z))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (+.f64 (pow.f64 (/.f64 x y) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) (pow.f64 z 2)))) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) t))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 t 3))))) (pow.f64 z 3)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3))))))","(+.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16)) 1/9) (*.f64 t z)) (cbrt.f64 (/.f64 x y))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) (*.f64 x x))) (+.f64 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3))) (*.f64 z z)) (*.f64 (-.f64 (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 13)) 1/9) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3)))) t) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16))) (pow.f64 t 3)))) (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 y 4))) (pow.f64 z 3))))))","(pow.f64 (/.f64 x y) 1/3)","(cbrt.f64 (/.f64 x y))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (pow.f64 (/.f64 x y) 1/3))","(fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16)) 1/9) (*.f64 t z)) (cbrt.f64 (/.f64 x y)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (+.f64 (pow.f64 (/.f64 x y) 1/3) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 t 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3)))))","(+.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16)) 1/9) (*.f64 t z)) (cbrt.f64 (/.f64 x y))) (*.f64 -1/3 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (*.f64 (*.f64 t t) (cbrt.f64 (/.f64 (*.f64 y y) (*.f64 x x)))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t z))) (+.f64 (pow.f64 (/.f64 x y) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 t 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 y 2)) (pow.f64 x 2)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) z) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 z 3))))) (pow.f64 t 3)))))))","(+.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16)) 1/9) (*.f64 t z)) (cbrt.f64 (/.f64 x y))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (*.f64 y y) (*.f64 x x))) (+.f64 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (*.f64 t t)) (*.f64 (fma.f64 -2/3 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (*.f64 z (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 13)) 1/9))) (-.f64 (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16))) (pow.f64 z 3))) (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4)))) (pow.f64 t 3))))))","(*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (cbrt.f64 -1))","(cbrt.f64 (neg.f64 (/.f64 (/.f64 x t) z)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (cbrt.f64 -1)))","(fma.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (*.f64 t z) 16)) 1/9) y) (cbrt.f64 (neg.f64 (/.f64 (/.f64 x t) z))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (pow.f64 x 2)) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (cbrt.f64 -1))))","(+.f64 (*.f64 -1/3 (+.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 t z) 2) (pow.f64 x -2))) (*.f64 (*.f64 y y) (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))))) (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (*.f64 t z) 16)) 1/9) y))) (cbrt.f64 (neg.f64 (/.f64 (/.f64 x t) z))))","(+.f64 (*.f64 -1/3 (*.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 4)) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (/.f64 x (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (pow.f64 y 3)) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (pow.f64 x 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) (pow.f64 x 2)) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3))))) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (cbrt.f64 -1)))))","(fma.f64 -1/3 (*.f64 (*.f64 (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 (*.f64 t z) 16))) (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (*.f64 t z) 13)) 1/9) (neg.f64 (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))))) (*.f64 x (pow.f64 (*.f64 t z) -4)))) (pow.f64 y 3)) (cbrt.f64 (*.f64 (pow.f64 (*.f64 t z) 2) (pow.f64 x -2)))) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (*.f64 t z) 2) (pow.f64 x -2))) (*.f64 (*.f64 y y) (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))))) (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (*.f64 t z) 16)) 1/9) y))) (cbrt.f64 (neg.f64 (/.f64 (/.f64 x t) z)))))","(*.f64 (pow.f64 1 1/3) (/.f64 x y))","(/.f64 x y)","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t))) z) (*.f64 (pow.f64 1 1/3) (/.f64 x y)))","(fma.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 y 22)) 1/9) t) z (/.f64 x y))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t))) z) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 t 2))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))))))) (pow.f64 z 2)) (*.f64 (pow.f64 1 1/3) (/.f64 x y))))","(fma.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 y 22)) 1/9) t) z (fma.f64 (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (fma.f64 (cbrt.f64 (/.f64 x y)) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 y x)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3)))) (*.f64 (*.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 32)) 1/9)) (*.f64 t t))) (*.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3)))))) (*.f64 z z) (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) t))) z) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) t))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 t 3))))) (pow.f64 1 1/3))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) t))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) x) 1/3) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) t))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 t 3))))))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (pow.f64 y 10)) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))) t))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 t (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 t 2)))))))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 t 2))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 y 3)))))))) (pow.f64 z 2)) (*.f64 (pow.f64 1 1/3) (/.f64 x y)))))","(fma.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 y 22)) 1/9) t) z (fma.f64 (fma.f64 -1/3 (-.f64 (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 13)) 1/9) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3)))) t) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16))) (pow.f64 t 3)))) (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 y 4))) (fma.f64 -2/9 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 13)) 1/9) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3)))) t) (fma.f64 (cbrt.f64 (/.f64 x y)) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 y x)) (-.f64 (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 13)) 1/9) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3)))) t) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16))) (pow.f64 t 3)))) (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 y 4)))) (*.f64 -2/9 (*.f64 (*.f64 (pow.f64 (/.f64 x (pow.f64 y 10)) 1/9) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3)))) t))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16)) 1/9) t) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 y x)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3)))) (*.f64 (*.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 32)) 1/9)) (*.f64 t t)))))))) (pow.f64 z 3) (fma.f64 (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (fma.f64 (cbrt.f64 (/.f64 x y)) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 y x)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3)))) (*.f64 (*.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 32)) 1/9)) (*.f64 t t))) (*.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 t t)) (/.f64 (neg.f64 (*.f64 (*.f64 t t) x)) (pow.f64 y 3)))))) (*.f64 z z) (/.f64 x y))))","(*.f64 (pow.f64 1 1/3) (/.f64 x y))","(/.f64 x y)","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z))) t) (*.f64 (pow.f64 1 1/3) (/.f64 x y)))","(fma.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 y 22)) 1/9) z) t (/.f64 x y))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z))) t) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 1 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 (/.f64 (*.f64 1 y) x) 1/3))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2)))))) (*.f64 (pow.f64 1 1/3) (/.f64 x y))))","(fma.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 y 22)) 1/9) z) t (fma.f64 (*.f64 t t) (fma.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (fma.f64 (cbrt.f64 (/.f64 x y)) (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 32)) 1/9) (*.f64 z z)) (*.f64 -2/3 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (cbrt.f64 (/.f64 y x))))) (*.f64 (*.f64 2/9 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9)) (*.f64 z z)))) (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 13)) (pow.f64 y 22)) 1/9) z))) t) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 1 1/3))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 (/.f64 (*.f64 1 y) x) 1/3))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2)))))) (+.f64 (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) z) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 z 3))))))) (+.f64 (*.f64 (pow.f64 (/.f64 (*.f64 1 x) y) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 y) x) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) z) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/3) (pow.f64 z 3))))))) (*.f64 -2/9 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) z) (pow.f64 (/.f64 (*.f64 1 x) (pow.f64 y 10)) 1/9))))) (+.f64 (*.f64 -2/9 (*.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) z) (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 y 13)) 1/9))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 y 16)) 1/9) (*.f64 z (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 y 32)) 1/9) (pow.f64 z 2))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3)))) (pow.f64 (/.f64 (*.f64 1 y) x) 1/3))))))))))) (*.f64 (pow.f64 1 1/3) (/.f64 x y)))))","(fma.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 y 22)) 1/9) z) t (fma.f64 (*.f64 t t) (fma.f64 -1/3 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (fma.f64 (cbrt.f64 (/.f64 x y)) (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 32)) 1/9) (*.f64 z z)) (*.f64 -2/3 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (cbrt.f64 (/.f64 y x))))) (*.f64 (*.f64 2/9 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9)) (*.f64 z z)))) (fma.f64 (pow.f64 t 3) (fma.f64 -1/3 (fma.f64 -2/3 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (*.f64 z (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 13)) 1/9))) (-.f64 (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16))) (pow.f64 z 3))) (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4)))) (fma.f64 (cbrt.f64 (/.f64 x y)) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 y x)) (fma.f64 -2/3 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (*.f64 z (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 13)) 1/9))) (-.f64 (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16))) (pow.f64 z 3))) (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))))) (*.f64 -2/9 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (*.f64 z (pow.f64 (/.f64 x (pow.f64 y 10)) 1/9))))) (fma.f64 -2/9 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (*.f64 z (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 13)) 1/9))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 y 16)) 1/9) z) (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 y 32)) 1/9) (*.f64 z z)) (*.f64 -2/3 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 y 35)) 1/9) (*.f64 z z)) (/.f64 (*.f64 (*.f64 z z) x) (neg.f64 (pow.f64 y 3)))) (cbrt.f64 (/.f64 y x)))))))))) (/.f64 x y))))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 x (*.f64 t z))))","(neg.f64 (/.f64 (/.f64 x t) z))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) y) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 x (*.f64 t z)))))","(fma.f64 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 (*.f64 t z) 22)) 1/9)) y (neg.f64 (/.f64 (/.f64 x t) z)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) y) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 x (*.f64 t z)))) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 14)) (*.f64 (pow.f64 t 32) (pow.f64 z 32))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 t z)) x) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (cbrt.f64 -1))))))))) (pow.f64 y 2))))","(fma.f64 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 (*.f64 t z) 22)) 1/9)) y (-.f64 (*.f64 (fma.f64 2/9 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (fma.f64 -1/3 (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))) (*.f64 (cbrt.f64 (neg.f64 (/.f64 (/.f64 x t) z))) (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (*.f64 t z) 32)) 1/9) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 (*.f64 t z) x))) (neg.f64 (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))))))))) (*.f64 y y)) (/.f64 (/.f64 x t) z)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 13)) (*.f64 (pow.f64 t 22) (pow.f64 z 22))) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1) 4) 1/3)))) y) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (/.f64 x (*.f64 t z)))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 4)) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 4)) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (/.f64 x (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (pow.f64 1 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 14)) (*.f64 (pow.f64 t 32) (pow.f64 z 32))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 t z)) x) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (cbrt.f64 -1)))))))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (/.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 4)) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3)))) (/.f64 x (*.f64 (pow.f64 t 4) (pow.f64 z 4))))) (cbrt.f64 -1)) (pow.f64 (/.f64 (*.f64 1 (*.f64 t z)) x) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) x) (*.f64 (pow.f64 t 10) (pow.f64 z 10))) 1/9) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))))) (cbrt.f64 -1))))))) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (*.f64 (pow.f64 (/.f64 (*.f64 1 x) (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 14)) (*.f64 (pow.f64 t 32) (pow.f64 z 32))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (*.f64 t z)) x) 1/3) (/.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 1 4) (pow.f64 x 17)) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))) (/.f64 x (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (cbrt.f64 -1))))))))) (pow.f64 y 2)))))","(fma.f64 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 13) (pow.f64 (*.f64 t z) 22)) 1/9)) y (-.f64 (fma.f64 (pow.f64 y 3) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (*.f64 t z) 13)) 1/9) (neg.f64 (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))))) (+.f64 (*.f64 -1/3 (+.f64 (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 (*.f64 t z) 16))) (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (*.f64 t z) 13)) 1/9) (neg.f64 (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))))) (*.f64 x (pow.f64 (*.f64 t z) -4)))) (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (*.f64 t z) 16)) 1/9) (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (*.f64 t z) 32)) 1/9) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 (*.f64 t z) x))) (neg.f64 (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))))))))) (*.f64 (cbrt.f64 (/.f64 (/.f64 x t) z)) (neg.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (*.f64 t z) x)) (neg.f64 (fma.f64 -1/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 (*.f64 t z) 16))) (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (*.f64 t z) 13)) 1/9) (neg.f64 (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))))) (*.f64 x (pow.f64 (*.f64 t z) -4)))))) (*.f64 (*.f64 2/9 (pow.f64 (/.f64 x (pow.f64 (*.f64 t z) 10)) 1/9)) (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))))))))) (*.f64 (fma.f64 2/9 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (fma.f64 -1/3 (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))) (*.f64 (cbrt.f64 (neg.f64 (/.f64 (/.f64 x t) z))) (fma.f64 1/9 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (*.f64 t z) 32)) 1/9) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 (*.f64 t z) x))) (neg.f64 (fma.f64 1/3 (neg.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (*.f64 t z) 35)) 1/9)) (/.f64 x (pow.f64 (*.f64 t z) 3))))))))) (*.f64 y y))) (/.f64 (/.f64 x t) z)))"]],"time":148.138916015625,"type":"simplify"},{"compiler":[[8673,5177]],"time":90.75390625,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (neg.f64 (/.f64 (/.f64 x t) z))) 3)","fresh",34.05311998180311],["(/.f64 x (fma.f64 z (neg.f64 t) y))","done",2.6740575879326975],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","next",3.1204802930699813],["(*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2)) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","fresh",19.659230737402904],["(neg.f64 (/.f64 (/.f64 x t) z))","fresh",33.86097359504491]],"compiler":[[13,10],[11,7],[21,11],[21,14],[10,7],[13,10],[21,11],[21,14],[10,7]],"count":[[222,5]],"kept":[{"done":[1,1],"fresh":[4,1],"new":[216,3],"picked":[1,0]}],"min-error":[0.00390625],"time":52.258056640625,"type":"prune"},{"compiler":[[55,14]],"locations":[["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))",0.2421875,true],["(pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)",0.5238075683790943,true],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))",0.9398853427382287,true],["(cbrt.f64 (fma.f64 z (neg.f64 t) y))",6.756380356647546,true]],"time":9.169921875,"type":"localize"},{"count":[[4,96]],"series":[["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","y","-inf",0.60302734375],["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","y","inf",0.90283203125],["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","y","0",3.30517578125],["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","t","-inf",0.65185546875],["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","t","inf",0.97314453125],["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","t","0",1.10986328125],["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","z","-inf",0.651123046875],["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","z","inf",1.01806640625],["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","z","0",1.197998046875],["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","x","-inf",0.346923828125],["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","x","inf",0.406005859375],["(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","x","0",5.10791015625],["(pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)","y","-inf",0.306884765625],["(pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)","y","inf",0.343017578125],["(pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)","y","0",2.05517578125],["(pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)","t","-inf",0.330078125],["(pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)","t","inf",0.322998046875],["(pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)","t","0",1.080810546875],["(pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)","z","-inf",0.336181640625],["(pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)","z","inf",0.549072265625],["(pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)","z","0",1.197021484375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","x","-inf",0.30615234375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","x","inf",0.27490234375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","x","0",1.316162109375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","y","-inf",0.274169921875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","y","inf",0.281005859375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","y","0",0.3369140625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","t","-inf",0.302978515625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","t","inf",0.343994140625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","t","0",0.301025390625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","z","-inf",0.295166015625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","z","inf",0.349853515625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","z","0",0.360107421875],["(cbrt.f64 (fma.f64 z (neg.f64 t) y))","y","-inf",0.2490234375],["(cbrt.f64 (fma.f64 z (neg.f64 t) y))","y","inf",0.284912109375],["(cbrt.f64 (fma.f64 z (neg.f64 t) y))","y","0",1.416015625],["(cbrt.f64 (fma.f64 z (neg.f64 t) y))","t","-inf",0.282958984375],["(cbrt.f64 (fma.f64 z (neg.f64 t) y))","t","inf",0.259033203125],["(cbrt.f64 (fma.f64 z (neg.f64 t) y))","t","0",0.614013671875],["(cbrt.f64 (fma.f64 z (neg.f64 t) y))","z","-inf",0.287109375],["(cbrt.f64 (fma.f64 z (neg.f64 t) y))","z","inf",0.27392578125],["(cbrt.f64 (fma.f64 z (neg.f64 t) y))","z","0",0.862060546875]],"time":32.794189453125,"type":"series"},{"count":[[4,150]],"inputs":[["(cbrt.f64 (fma.f64 z (neg.f64 t) y))","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","(pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)","(/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) 0) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (*.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (*.f64 0 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (neg.f64 t) y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (fma.f64 z (neg.f64 t) y))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) 0) (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) (*.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)))) (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) (*.f64 0 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (-.f64 -2 1/3)) (/.f64 x (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (-.f64 -2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)))) (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))) (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))) (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 2/3) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 2/3) (*.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3) (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 2/3) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (neg.f64 x)) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (neg.f64 x)) (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) 2/3) (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x))) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) -1) (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (-.f64 -2 1/3)) x) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x)) (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (neg.f64 x)) 1) (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 1) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) -1) (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (neg.f64 x)) 1) (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (neg.f64 x)) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 1) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) x) (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) (+.f64 -1 -2))) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 0) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (*.f64 0 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 2/3) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 0) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (*.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (*.f64 0 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y)))) (/.f64 x (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3) (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (/.f64 (*.f64 x x) (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) (/.f64 x (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x x) (fma.f64 z (neg.f64 t) y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3) (cbrt.f64 (neg.f64 x))) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3) (cbrt.f64 x)) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) -1/3)) x) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (pow.f64 x 2/3)) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 x)) (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3)) (neg.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 x) (pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 2/3)) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 1) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x -1) (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 x) (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (cbrt.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))) (cbrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 1) (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (cbrt.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y))))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 z (neg.f64 t) y) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (fma.f64 z (neg.f64 t) y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 x (cbrt.f64 (neg.f64 (fma.f64 z (neg.f64 t) y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (fma.f64 z (neg.f64 t) y)))))))"]],"rules":[["egg-rr",46],["egg-rr",21],["egg-rr",61],["egg-rr",22]],"time":36.61376953125,"type":"rewrite"},{"count":[[246,227]],"inputs":[["(pow.f64 y 1/3)","(+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (pow.f64 z 3)))))))","(pow.f64 y 1/3)","(+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3)))))))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))))","(*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2)))) (pow.f64 z 2)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z)))))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3) (pow.f64 t 3)))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 3) (pow.f64 y 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 3) (pow.f64 y 2))))))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2)))) (pow.f64 z 2)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))))","(pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2)))) (pow.f64 t 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2)))) (pow.f64 t 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))) (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 z 3) (pow.f64 y 2)))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 z 3) (pow.f64 y 2)))))))) (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3) (pow.f64 z 3)))))))))","(*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3)))) (pow.f64 y 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3))))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 4) (pow.f64 z 4))) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 (cbrt.f64 -1) 4)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))))) (cbrt.f64 -1)))) (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3)))) (pow.f64 y 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3)))))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9) (*.f64 t (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3))))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 y 4))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3) (pow.f64 t 3))))) (*.f64 (pow.f64 z 3) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3) (pow.f64 z 3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9) (*.f64 z (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))))))))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))))","(*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x)))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 y 1/3)","(cbrt.f64 y)","(+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))","(+.f64 (cbrt.f64 y) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) (*.f64 t z))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z)))))","(fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 y -7) 1/9) (pow.f64 (*.f64 t z) 2)) (+.f64 (cbrt.f64 y) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) (*.f64 t z)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (pow.f64 z 3)))))))","(fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 y -7) 1/9) (pow.f64 (*.f64 t z) 2)) (+.f64 (cbrt.f64 y) (*.f64 -1/3 (+.f64 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) (*.f64 t z)) (*.f64 (cbrt.f64 (pow.f64 y -2)) (*.f64 (fma.f64 2/9 (*.f64 (cbrt.f64 (pow.f64 y -2)) (pow.f64 t 3)) (*.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 y -2)) (pow.f64 t 3)))) (pow.f64 z 3)))))))","(pow.f64 y 1/3)","(cbrt.f64 y)","(+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))","(+.f64 (cbrt.f64 y) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) (*.f64 t z))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z)))))","(fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 y -7) 1/9) (pow.f64 (*.f64 t z) 2)) (+.f64 (cbrt.f64 y) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) (*.f64 t z)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3)))))))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (pow.f64 y 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/9) (*.f64 t z))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 y -2)) (*.f64 (pow.f64 t 3) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 y -2)) (pow.f64 z 3)) (*.f64 2/9 (*.f64 (cbrt.f64 (pow.f64 y -2)) (pow.f64 z 3)))))) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 y -7) 1/9) (pow.f64 (*.f64 t z) 2)) (+.f64 (cbrt.f64 y) (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 y -2) 1/9) (*.f64 t z))))))","(*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 t z)) -1)","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))","(fma.f64 (cbrt.f64 (*.f64 t z)) -1 (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1) 1/9) (*.f64 y (cbrt.f64 (pow.f64 -1 -2))))))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3))))))","(fma.f64 (cbrt.f64 (*.f64 t z)) -1 (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 7) -1) 1/9) (*.f64 (*.f64 y y) (cbrt.f64 (pow.f64 -1 -7)))) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1) 1/9) (*.f64 y (cbrt.f64 (pow.f64 -1 -2)))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 t z)) 1/3) (cbrt.f64 -1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1)) (/.f64 (*.f64 (pow.f64 y 3) (fma.f64 -2/9 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1)) (pow.f64 -1 -2)) (*.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1)) (pow.f64 -1 -2))))) (*.f64 -1 -1))) (fma.f64 (cbrt.f64 (*.f64 t z)) -1 (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 7) -1) 1/9) (*.f64 (*.f64 y y) (cbrt.f64 (pow.f64 -1 -7)))) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1) 1/9) (*.f64 y (cbrt.f64 (pow.f64 -1 -2))))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (*.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y -4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (neg.f64 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (neg.f64 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (neg.f64 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (neg.f64 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (*.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y -4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (neg.f64 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (neg.f64 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (neg.f64 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (neg.f64 (/.f64 x (*.f64 t z))))))","(*.f64 -1 (/.f64 x (*.f64 t z)))","(neg.f64 (/.f64 x (*.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (*.f64 -1 (/.f64 x (*.f64 t z))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (neg.f64 (/.f64 x (*.f64 t z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (*.f64 -1 (/.f64 x (*.f64 t z)))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (neg.f64 (/.f64 x (*.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 y x) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (pow.f64 t 3) (pow.f64 z 3)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (pow.f64 t 4) (pow.f64 z 4)))) (*.f64 -1 (/.f64 x (*.f64 t z))))))","(+.f64 (neg.f64 (/.f64 (*.f64 y x) (pow.f64 (*.f64 t z) 2))) (+.f64 (neg.f64 (/.f64 (*.f64 (*.f64 y y) x) (pow.f64 (*.f64 t z) 3))) (+.f64 (neg.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 (*.f64 t z) 4))) (neg.f64 (/.f64 x (*.f64 t z))))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (*.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y -4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))","(+.f64 (/.f64 x y) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) x)) (pow.f64 y 4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (pow.f64 y 2)))))","(+.f64 (*.f64 (*.f64 (pow.f64 (*.f64 t z) 3) x) (pow.f64 y -4)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (*.f64 (pow.f64 (*.f64 t z) 2) x) (pow.f64 y 3)) (/.f64 (*.f64 t (*.f64 z x)) (*.f64 y y)))))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(/.f64 x (+.f64 (*.f64 -1 (*.f64 t z)) y))","(/.f64 x (+.f64 (neg.f64 (*.f64 t z)) y))","(pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)","(cbrt.f64 (pow.f64 y -2))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))","(+.f64 (cbrt.f64 (pow.f64 y -2)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 y -11) 1/9) (*.f64 t z))))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2)))) (pow.f64 z 2)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z)))))","(+.f64 (cbrt.f64 (pow.f64 y -2)) (fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 t t)) 5/9) (*.f64 z z) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 y -11) 1/9) (*.f64 t z)))))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3) (pow.f64 t 3)))) (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 3) (pow.f64 y 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 t 3)))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 t 3) (pow.f64 y 2))))))))) (pow.f64 z 3)) (+.f64 (*.f64 (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 t 2)))) (pow.f64 z 2)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))))","(+.f64 (cbrt.f64 (pow.f64 y -2)) (fma.f64 (fma.f64 4/27 (*.f64 (cbrt.f64 (pow.f64 y -7)) (pow.f64 t 3)) (*.f64 (*.f64 -2 (cbrt.f64 (/.f64 1 y))) (fma.f64 -1/27 (*.f64 (pow.f64 t 3) (pow.f64 y -2)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 y -4)) (fma.f64 2/9 (*.f64 (cbrt.f64 (pow.f64 y -2)) (pow.f64 t 3)) (*.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 y -2)) (pow.f64 t 3))))) (*.f64 (*.f64 (pow.f64 t 3) (pow.f64 y -2)) -2/27))))) (pow.f64 z 3) (fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 t t)) 5/9) (*.f64 z z) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 y -11) 1/9) (*.f64 t z))))))","(pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3)","(cbrt.f64 (pow.f64 y -2))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))))","(+.f64 (cbrt.f64 (pow.f64 y -2)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 y -11) 1/9) (*.f64 t z))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2)))) (pow.f64 t 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z)))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 z z)) 5/9) (*.f64 t t) (+.f64 (cbrt.f64 (pow.f64 y -2)) (*.f64 2/3 (*.f64 (pow.f64 (pow.f64 y -11) 1/9) (*.f64 t z)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (pow.f64 z 2)))) (pow.f64 t 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 11)) 1/9) (*.f64 t z))) (*.f64 (pow.f64 t 3) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/3) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 z 3))))))) (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 z 3) (pow.f64 y 2)))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 z 3) (pow.f64 y 2)))))))) (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/3) (pow.f64 z 3)))))))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 z z)) 5/9) (*.f64 t t) (+.f64 (cbrt.f64 (pow.f64 y -2)) (fma.f64 2/3 (*.f64 (pow.f64 (pow.f64 y -11) 1/9) (*.f64 t z)) (*.f64 (pow.f64 t 3) (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 y)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 y -4)) (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 y -2)) (pow.f64 z 3)) (*.f64 2/9 (*.f64 (cbrt.f64 (pow.f64 y -2)) (pow.f64 z 3))))) (*.f64 (*.f64 (pow.f64 z 3) (pow.f64 y -2)) -1/9))) (*.f64 4/27 (*.f64 (cbrt.f64 (pow.f64 y -7)) (pow.f64 z 3))))))))","(*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))","(*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1)) (pow.f64 -1 -2))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3)))))","(fma.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1)) (pow.f64 -1 -2) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 11) -1) 1/9) (*.f64 y (cbrt.f64 (pow.f64 -1 -11))))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3)))) (pow.f64 y 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3))))))","(fma.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1)) (pow.f64 -1 -2) (fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 16) -1) 1/9) (cbrt.f64 (pow.f64 -1 -16))) 5/9) (*.f64 y y) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 11) -1) 1/9) (*.f64 y (cbrt.f64 (pow.f64 -1 -11)))))))","(+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (/.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 4) (pow.f64 z 4))) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (pow.f64 (cbrt.f64 -1) 4)))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 -1) 6) (*.f64 (pow.f64 t 2) (pow.f64 z 2)))))))) (cbrt.f64 -1)))) (*.f64 -4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 7) (pow.f64 z 7))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3))) (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 16)) 1/3)))) (pow.f64 y 2)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 11) (pow.f64 z 11))) 1/9) (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 11)) 1/3)))))))","(fma.f64 (pow.f64 y 3) (fma.f64 -2 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 4) -1)) (fma.f64 -2/9 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1)) (pow.f64 -1 -2)) (*.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1)) (pow.f64 -1 -2))))) (pow.f64 -1 4)) (*.f64 (/.f64 1 (*.f64 (pow.f64 -1 6) (pow.f64 (*.f64 t z) 2))) 1/9))) -1) (*.f64 -4/27 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 7) -1)) (pow.f64 -1 -7)))) (fma.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 2) -1)) (pow.f64 -1 -2) (fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 16) -1) 1/9) (cbrt.f64 (pow.f64 -1 -16))) 5/9) (*.f64 y y) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 11) -1) 1/9) (*.f64 y (cbrt.f64 (pow.f64 -1 -11))))))))","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 -1 (*.f64 t z)) y)) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x)","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 y)) x)","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))","(fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 t (*.f64 z x)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x))))))","(fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 z z)) (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -35) 1/9) (*.f64 t t)) (neg.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)))) x)) (fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 t (*.f64 z x))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9) (*.f64 t (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3))))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 y 4))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3) (pow.f64 t 3))))) (*.f64 (pow.f64 z 3) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 t 2))) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (fma.f64 -2/3 (*.f64 (pow.f64 (pow.f64 y -13) 1/9) (*.f64 t (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -35) 1/9) (*.f64 t t)) (neg.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)))))) (+.f64 (neg.f64 (*.f64 (pow.f64 t 3) (pow.f64 y -4))) (*.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 y -16)) (pow.f64 t 3))))) (*.f64 (pow.f64 z 3) x))) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 z z)) (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -35) 1/9) (*.f64 t t)) (neg.f64 (/.f64 (*.f64 t t) (pow.f64 y 3)))) x)) (fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 t (*.f64 z x)))))))","(*.f64 (pow.f64 (/.f64 1 y) 1/3) x)","(*.f64 (cbrt.f64 (/.f64 1 y)) x)","(+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))","(fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 t (*.f64 z x)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x))))))","(fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 t t)) (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -35) 1/9) (*.f64 z z)) (neg.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)))) x)) (fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 t (*.f64 z x))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 2) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3)))) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (*.f64 (pow.f64 t 3) (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/3) (pow.f64 z 3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 13)) 1/9) (*.f64 z (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 35)) 1/9) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))))))))) x)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 y) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 16)) 1/9) (*.f64 t (*.f64 z x)))))))","(fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 t t)) (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -35) 1/9) (*.f64 z z)) (neg.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)))) x)) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 t 3)) (*.f64 (+.f64 (neg.f64 (*.f64 (pow.f64 z 3) (pow.f64 y -4))) (fma.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 y -16)) (pow.f64 z 3)) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 y -13) 1/9) (*.f64 z (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -35) 1/9) (*.f64 z z)) (neg.f64 (/.f64 (*.f64 z z) (pow.f64 y 3))))))))) x)) (fma.f64 (cbrt.f64 (/.f64 1 y)) x (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 y -16) 1/9) (*.f64 t (*.f64 z x)))))))","(*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x))","(*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (*.f64 -1 x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x)))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 16) -1) 1/9) (*.f64 (*.f64 y x) (cbrt.f64 (pow.f64 -1 -2)))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (*.f64 -1 x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x))))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 16) -1) 1/9) (*.f64 (*.f64 y x) (cbrt.f64 (pow.f64 -1 -2)))) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 t z) 2)) (*.f64 (*.f64 y y) (*.f64 (+.f64 (pow.f64 (pow.f64 (*.f64 t z) 3) -1) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 35) -1) 1/9) (cbrt.f64 (/.f64 1 -1))))) x))) (*.f64 -1 -1)) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (*.f64 -1 x))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/9) (*.f64 (*.f64 y x) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 2) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3)))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 t 2) (pow.f64 z 2))) 1/3) (/.f64 (*.f64 (pow.f64 y 3) (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 t 4) (pow.f64 z 4))) (+.f64 (*.f64 4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 13) (pow.f64 z 13))) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (+.f64 (/.f64 1 (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (*.f64 (pow.f64 t 35) (pow.f64 z 35))) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3))))))) (*.f64 -1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 t 16) (pow.f64 z 16))) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))))) x)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (/.f64 1 (*.f64 t z)) 1/3) (*.f64 (cbrt.f64 -1) x)))))","(fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 16) -1) 1/9) (*.f64 (*.f64 y x) (cbrt.f64 (pow.f64 -1 -2)))) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 t z) 2)) (*.f64 (*.f64 y y) (*.f64 (+.f64 (pow.f64 (pow.f64 (*.f64 t z) 3) -1) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 35) -1) 1/9) (cbrt.f64 (/.f64 1 -1))))) x))) (*.f64 -1 -1)) (fma.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 t z) 2)) (*.f64 (pow.f64 y 3) (*.f64 (+.f64 (pow.f64 (pow.f64 (*.f64 t z) 4) -1) (fma.f64 4/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 13) -1) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -5)) (+.f64 (pow.f64 (pow.f64 (*.f64 t z) 3) -1) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 35) -1) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 13) -1) 1/9) (*.f64 (cbrt.f64 (pow.f64 -1 -5)) (+.f64 (pow.f64 (pow.f64 (*.f64 t z) 3) -1) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 t z) 35) -1) 1/9) (cbrt.f64 (/.f64 1 -1))))))) (*.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 t z) 16) -1)) (pow.f64 -1 -2)))))) x))) (*.f64 -1 -1)) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 t z))) (*.f64 -1 x)))))"]],"time":287.879150390625,"type":"simplify"},{"compiler":[[9656,5107]],"time":94.1640625,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x))","fresh",3.036457734459329],["(pow.f64 (cbrt.f64 (neg.f64 (/.f64 (/.f64 x t) z))) 3)","fresh",34.05311998180311],["(/.f64 x (fma.f64 z (neg.f64 t) y))","done",2.6740575879326975],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","done",3.1204802930699813],["(neg.f64 (/.f64 (/.f64 x t) z))","fresh",33.86097359504491]],"compiler":[[24,17],[13,10],[11,7],[21,11],[10,7]],"count":[[272,5]],"kept":[{"done":[1,1],"fresh":[3,2],"new":[267,1],"picked":[1,1]}],"min-error":[0.00390625],"time":68.626953125,"type":"prune"},{"accuracy":[0.0859375],"baseline":[2.6740575879326975],"branch":[["x",2.6740575879326975,1],["y",2.6740575879326975,1],["z",2.6740575879326975,1],["t",2.674057587932697,1],["(/.f64 x (-.f64 y (*.f64 z t)))",2.6740575879326975,1],["(-.f64 y (*.f64 z t))",0.0859375,3],["(*.f64 z t)",0.0859375,3],["(*.f64 z t)",0.0859375,3]],"compiler":[[5,4],[5,4],[5,4],[5,4],[11,7],[9,6],[7,5],[7,5],[172,58]],"count":[[14,3]],"inputs":[["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (*.f64 (cbrt.f64 (/.f64 1 (+.f64 (neg.f64 (*.f64 t z)) y))) x))","(pow.f64 (cbrt.f64 (neg.f64 (/.f64 (/.f64 x t) z))) 3)","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (neg.f64 t) y)) -2) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 (/.f64 (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (fma.f64 z (neg.f64 t) y))) (cbrt.f64 (fma.f64 z (neg.f64 t) y)))","(*.f64 (/.f64 (-.f64 (*.f64 0 (fma.f64 z (neg.f64 t) y)) (fma.f64 z (neg.f64 t) y)) (pow.f64 (fma.f64 z (neg.f64 t) y) 2)) (neg.f64 x))","(*.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z t) y) -2)) (/.f64 x (cbrt.f64 (fma.f64 z (neg.f64 t) y))))","(/.f64 x y)","(+.f64 (/.f64 x y) (/.f64 (/.f64 (*.f64 t (*.f64 z x)) y) y))","(/.f64 x y)","(pow.f64 (cbrt.f64 (/.f64 x (fma.f64 z (neg.f64 t) y))) 3)","(*.f64 (/.f64 -1 (fma.f64 z (neg.f64 t) y)) (neg.f64 x))","(/.f64 x (fma.f64 z (neg.f64 t) y))","(/.f64 x (-.f64 y (*.f64 z t)))"]],"link":["."],"name":["Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, B"],"oracle":[61.24758891990851],"outputs":[["(neg.f64 (/.f64 (/.f64 x t) z))","(/.f64 x (fma.f64 z (neg.f64 t) y))","(neg.f64 (/.f64 (/.f64 x t) z))"]],"time":66.783935546875,"times":[["x",5.137939453125],["y",5.237060546875],["z",5.282958984375],["t",5.248046875],["(/.f64 x (-.f64 y (*.f64 z t)))",4.44189453125],["(-.f64 y (*.f64 z t))",13.587890625],["(*.f64 z t)",12.220947265625],["(*.f64 z t)",12.4560546875]],"type":"regimes"},{"bstep":[[9.973624104380526e+303,{"type":"real","value":"+inf"},0.06689453125],[{"type":"real","value":"-inf"},-9.67408662168811e+306,0.037109375]],"compiler":[[11,8],[7,5]],"method":["left-value","left-value"],"time":0.22607421875,"type":"bsearch"},{"compiler":[[35,17]],"inputs":[["(if (<=.f64 (*.f64 z t) -inf.0) (neg.f64 (/.f64 (/.f64 x t) z)) (if (<=.f64 (*.f64 z t) 9999999999999999392535525055364621860040287220117324953190771571323204563013233902843309257440507748436856118056162172578717193742636030530235798840866882774987301441682011041067710253162440905843719802548551599076639682550821832659549112269607949805346034918662572406407604380845959862074904348138143744) (/.f64 x (fma.f64 z (neg.f64 t) y)) (neg.f64 (/.f64 (/.f64 x t) z))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 z t) -inf.0) (neg.f64 (/.f64 (/.f64 x t) z)) (if (<=.f64 (*.f64 z t) 9999999999999999392535525055364621860040287220117324953190771571323204563013233902843309257440507748436856118056162172578717193742636030530235798840866882774987301441682011041067710253162440905843719802548551599076639682550821832659549112269607949805346034918662572406407604380845959862074904348138143744) (/.f64 x (fma.f64 z (neg.f64 t) y)) (neg.f64 (/.f64 (/.f64 x t) z))))"]],"stop":[["fuel",1]],"time":20.428955078125,"type":"simplify"},{"time":0.02392578125,"type":"soundness"},{"compiler":[[35,17]],"remove-preprocessing":[[]],"time":12.5361328125,"type":"end"}]