[{"compiler":[[28,21]],"method":["search"],"sampling":[[12,0.17552388364265425,0.3110673271222595,0.5134087892350863],[11,0.15212069915696702,0.3451969711638867,0.5026823296791463],[10,0.09361273794274894,0.4719642204613592,0.43442304159589185],[9,0.07801061495229078,0.5304721816755773,0.3915172033721319],[8,0.062408491961832624,0.5616764276564936,0.37591508038167376],[7,0.0,0.7489019035419915,0.2510980964580085],[6,0.0,0.7489019035419915,0.2510980964580085],[5,0.0,0.7489019035419915,0.2510980964580085],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":108.301025390625,"type":"analyze"},{"outcomes":[["body",256,"invalid",231.8271484375,3455],["body",256,"valid",586.19970703125,8256]],"time":828.748046875,"type":"sample"},{"compiler":[[27,20]],"inputs":[["0","1","2"],["(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 x 1/2) (log.f64 x)) x) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000) x))","(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 y 1/2) (log.f64 y)) y) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 x 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000) y))","(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 z 1/2) (log.f64 z)) z) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) x) 13888888888889/5000000000000000) x) 83333333333333/1000000000000000) z))","(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 x 1/2) (log.f64 x)) x) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 z 7936500793651/10000000000000000) y) 13888888888889/5000000000000000) y) 83333333333333/1000000000000000) x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 x 1/2) (log.f64 x)) x) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (neg.f64 (-.f64 x 91893853320467/100000000000000))) (/.f64 (fma.f64 z (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 83333333333333/1000000000000000) x))","(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 y 1/2) (log.f64 y)) y) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 x 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000) y))","(+.f64 (fma.f64 (log.f64 y) (+.f64 y -1/2) (neg.f64 (-.f64 y 91893853320467/100000000000000))) (/.f64 (fma.f64 z (fma.f64 (+.f64 x 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 83333333333333/1000000000000000) y))","(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 z 1/2) (log.f64 z)) z) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) x) 13888888888889/5000000000000000) x) 83333333333333/1000000000000000) z))","(+.f64 (fma.f64 (log.f64 z) (+.f64 z -1/2) (neg.f64 (-.f64 z 91893853320467/100000000000000))) (/.f64 (fma.f64 x (fma.f64 (+.f64 y 7936500793651/10000000000000000) x -13888888888889/5000000000000000) 83333333333333/1000000000000000) z))","(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 x 1/2) (log.f64 x)) x) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 z 7936500793651/10000000000000000) y) 13888888888889/5000000000000000) y) 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (neg.f64 (-.f64 x 91893853320467/100000000000000))) (/.f64 (fma.f64 y (fma.f64 (+.f64 z 7936500793651/10000000000000000) y -13888888888889/5000000000000000) 83333333333333/1000000000000000) x))"]],"symmetry":[[]],"time":63.375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 x 1/2) (log.f64 x)) x) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000) x))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 x 1/2) (log.f64 x)) x) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))"]],"time":27.111083984375,"type":"simplify"},{"compiler":[[48,33]],"time":0.661865234375,"type":"eval"},{"alts":[["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","next",8.014003759768443],["(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 x 1/2) (log.f64 x)) x) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000) x))","fresh",8.055351269536885]],"compiler":[[24,17],[27,20],[24,17],[27,20]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[7.974941259768442],"time":3.320068359375,"type":"prune"},{"compiler":[[78,50]],"locations":[["(fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)",0.03125,true],["(fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)",0.078125,true],["(fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))",0.2734375,true],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)",7.474298070593797,true]],"time":19.7509765625,"type":"localize"},{"count":[[4,96]],"series":[["(fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)","z","-inf",0.232177734375],["(fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)","z","inf",0.2138671875],["(fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)","z","0",0.19189453125],["(fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)","y","-inf",0.15185546875],["(fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)","y","inf",0.1689453125],["(fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)","y","0",0.1611328125],["(fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","z","-inf",0.163818359375],["(fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","z","inf",0.18798828125],["(fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","z","0",0.166015625],["(fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","y","-inf",0.18408203125],["(fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","y","inf",0.1669921875],["(fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","y","0",0.18212890625],["(fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))","x","-inf",1.817138671875],["(fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))","x","inf",1.158203125],["(fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))","x","0",3.869873046875],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","x","-inf",0.366943359375],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","x","inf",0.650146484375],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","x","0",0.60986328125],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","z","-inf",0.656982421875],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","z","inf",0.39599609375],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","z","0",0.398193359375],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","y","-inf",0.620849609375],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","y","inf",0.60400390625],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","y","0",0.72900390625]],"time":14.420166015625,"type":"series"},{"count":[[4,231]],"inputs":[["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))","(fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","(fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 x) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) (*.f64 (/.f64 1 x) 83333333333333/1000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 x) 83333333333333/1000000000000000) (*.f64 (/.f64 1 x) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 0) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (/.f64 1 x)) (*.f64 83333333333333/1000000000000000 (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) (*.f64 0 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) -1) (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) -1) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 (neg.f64 x))) (/.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2))) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))) (cbrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (neg.f64 (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 2)) (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 x) -2)) (/.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 x)) (/.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) -1) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 (*.f64 x x))) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) x) (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (cbrt.f64 x)) (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) -1) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))) 1) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3))) (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3)) (/.f64 1 x)) (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)) 1) (*.f64 (cbrt.f64 (*.f64 x x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3))) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3))) (*.f64 (neg.f64 x) (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3)) 1) (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3)) -1) (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3)) (cbrt.f64 (/.f64 1 x))) (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 2)) (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 2)) (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 2))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3)) (*.f64 x (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x))) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 91893853320467/100000000000000 x) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (-.f64 91893853320467/100000000000000 x) (*.f64 (log.f64 x) x)) (*.f64 (log.f64 x) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (-.f64 91893853320467/100000000000000 x) (*.f64 x (log.f64 x))) (*.f64 -1/2 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (-.f64 91893853320467/100000000000000 x) (*.f64 -1/2 (log.f64 x))) (*.f64 x (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (-.f64 91893853320467/100000000000000 x) (*.f64 (log.f64 x) -1/2)) (*.f64 (log.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 x) -1/2) (+.f64 (*.f64 (log.f64 x) x) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (log.f64 x)) (+.f64 (*.f64 x (log.f64 x)) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (log.f64 x)) (+.f64 (*.f64 -1/2 (log.f64 x)) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 x) x) (+.f64 (*.f64 (log.f64 x) -1/2) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 x) -1/2) (-.f64 (*.f64 (log.f64 x) x) (+.f64 x -91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (log.f64 x)) (-.f64 (*.f64 x (log.f64 x)) (+.f64 x -91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (log.f64 x)) (-.f64 (*.f64 -1/2 (log.f64 x)) (+.f64 x -91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 x) x) (-.f64 (*.f64 (log.f64 x) -1/2) (+.f64 x -91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 0) (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))) (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 0 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 x) (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) (neg.f64 x)) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 91893853320467/100000000000000 (+.f64 (neg.f64 x) (*.f64 (log.f64 x) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) x) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) (+.f64 x -91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 0) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) (/.f64 (pow.f64 91893853320467/100000000000000 3) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x))))) (/.f64 (pow.f64 x 3) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) 0) (+.f64 x -91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 91893853320467/100000000000000 (-.f64 x (*.f64 (log.f64 x) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 91893853320467/100000000000000 3) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (-.f64 (/.f64 (pow.f64 x 3) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (*.f64 (log.f64 x) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (+.f64 x -91893853320467/100000000000000) (*.f64 (log.f64 x) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) x) -91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))) (cbrt.f64 (pow.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 2)) (cbrt.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (pow.f64 91893853320467/100000000000000 3) (pow.f64 x 3)) (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))) (*.f64 (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 (neg.f64 x) (-.f64 (neg.f64 x) 91893853320467/100000000000000))) (*.f64 (log.f64 x) (+.f64 (pow.f64 x 3) -1/8)))) (*.f64 (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 (neg.f64 x) (-.f64 (neg.f64 x) 91893853320467/100000000000000))) (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (pow.f64 x 3) (pow.f64 91893853320467/100000000000000 3)) (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))) (*.f64 (neg.f64 (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (*.f64 (log.f64 x) (+.f64 (pow.f64 x 3) -1/8)))) (*.f64 (neg.f64 (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (pow.f64 91893853320467/100000000000000 3) (pow.f64 x 3)) (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))) (*.f64 (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x))) (*.f64 (log.f64 x) (+.f64 (pow.f64 x 3) -1/8)))) (*.f64 (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x))) (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (log.f64 x) (+.f64 (pow.f64 x 3) -1/8)) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 (neg.f64 x) (-.f64 (neg.f64 x) 91893853320467/100000000000000)))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (-.f64 (pow.f64 91893853320467/100000000000000 3) (pow.f64 x 3)))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 (neg.f64 x) (-.f64 (neg.f64 x) 91893853320467/100000000000000)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (log.f64 x) (+.f64 (pow.f64 x 3) -1/8)) (neg.f64 (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x))))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (-.f64 (pow.f64 x 3) (pow.f64 91893853320467/100000000000000 3)))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (neg.f64 (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 (log.f64 x) (+.f64 (pow.f64 x 3) -1/8)) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (-.f64 (pow.f64 91893853320467/100000000000000 3) (pow.f64 x 3)))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (log.f64 x) (+.f64 (pow.f64 x 3) -1/8)) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (-.f64 (pow.f64 x 3) (pow.f64 91893853320467/100000000000000 3)))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 x (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 x -91893853320467/100000000000000) (*.f64 (log.f64 x) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 91893853320467/100000000000000 3) (pow.f64 x 3)) (/.f64 1 (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 91893853320467/100000000000000 x) 1 (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 91893853320467/100000000000000 x) 2)) (cbrt.f64 (-.f64 91893853320467/100000000000000 x)) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 x -91893853320467/100000000000000) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 91893853320467/100000000000000 x) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 91893853320467/100000000000000 x)) (cbrt.f64 (pow.f64 (-.f64 91893853320467/100000000000000 x) 2)) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 x) (cbrt.f64 (+.f64 x -1/2))) (cbrt.f64 (pow.f64 (+.f64 x -1/2) 2)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (log.f64 x) (+.f64 x -1/2))) (pow.f64 (cbrt.f64 (*.f64 (log.f64 x) (+.f64 x -1/2))) 2) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (log.f64 x) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) 1 (-.f64 91893853320467/100000000000000 x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 0) (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (*.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (*.f64 (neg.f64 z) (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000))) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (*.f64 0 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (neg.f64 z) (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) -1) (*.f64 -83333333333333/1000000000000000 -1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) -1) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) -1) (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3)) (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3)) 1) (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3)) (+.f64 (*.f64 -83333333333333/1000000000000000 -83333333333333/1000000000000000) (-.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3)) 1) (*.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) (pow.f64 83333333333333/1000000000000000 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (*.f64 83333333333333/1000000000000000 (-.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 1 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -83333333333333/1000000000000000 -83333333333333/1000000000000000)) (cbrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 83333333333333/1000000000000000 1 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 83333333333333/1000000000000000) (cbrt.f64 (*.f64 -83333333333333/1000000000000000 -83333333333333/1000000000000000)) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 83333333333333/1000000000000000)) (neg.f64 (sqrt.f64 83333333333333/1000000000000000)) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 2)) z) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) 2) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) -13888888888889/5000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -13888888888889/5000000000000000 (*.f64 (+.f64 y 7936500793651/10000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 0) (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (*.f64 0 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 2)) (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 3) (pow.f64 -13888888888889/5000000000000000 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 2) (*.f64 -13888888888889/5000000000000000 (-.f64 -13888888888889/5000000000000000 (*.f64 (+.f64 y 7936500793651/10000000000000000) z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 3) (pow.f64 -13888888888889/5000000000000000 3)) 1) (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 2) (*.f64 -13888888888889/5000000000000000 (-.f64 -13888888888889/5000000000000000 (*.f64 (+.f64 y 7936500793651/10000000000000000) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 3) (pow.f64 -13888888888889/5000000000000000 3)) 1) (*.f64 (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 2) (*.f64 -13888888888889/5000000000000000 (-.f64 -13888888888889/5000000000000000 (*.f64 (+.f64 y 7936500793651/10000000000000000) z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 3) (pow.f64 -13888888888889/5000000000000000 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 2) (*.f64 -13888888888889/5000000000000000 (-.f64 -13888888888889/5000000000000000 (*.f64 (+.f64 y 7936500793651/10000000000000000) z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 3) (pow.f64 -13888888888889/5000000000000000 3)) (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 2) (*.f64 -13888888888889/5000000000000000 (-.f64 -13888888888889/5000000000000000 (*.f64 (+.f64 y 7936500793651/10000000000000000) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 3) (pow.f64 -13888888888889/5000000000000000 3)) (+.f64 (*.f64 -13888888888889/5000000000000000 -13888888888889/5000000000000000) (-.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 2) (*.f64 -13888888888889/5000000000000000 (*.f64 (+.f64 y 7936500793651/10000000000000000) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 y 7936500793651/10000000000000000)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 y 7936500793651/10000000000000000) 2)) z) -13888888888889/5000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) -13888888888889/5000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z)) (pow.f64 (cbrt.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z)) 2) -13888888888889/5000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) -13888888888889/5000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (+.f64 y 7936500793651/10000000000000000) -13888888888889/5000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -13888888888889/5000000000000000 1 (*.f64 (+.f64 y 7936500793651/10000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 -13888888888889/5000000000000000 (*.f64 (+.f64 y 7936500793651/10000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -13888888888889/5000000000000000) (cbrt.f64 (*.f64 -13888888888889/5000000000000000 -13888888888889/5000000000000000)) (*.f64 (+.f64 y 7936500793651/10000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 13888888888889/5000000000000000 (*.f64 (+.f64 y 7936500793651/10000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -13888888888889/5000000000000000 -13888888888889/5000000000000000)) (cbrt.f64 -13888888888889/5000000000000000) (*.f64 (+.f64 y 7936500793651/10000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 1 -13888888888889/5000000000000000)))))"]],"rules":[["egg-rr",39],["egg-rr",49],["egg-rr",70],["egg-rr",73]],"time":48.4609375,"type":"rewrite"},{"count":[[327,287]],"inputs":[["(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)) x)","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (*.f64 y (pow.f64 z 2)) x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (*.f64 y (pow.f64 z 2)) x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 83333333333333/1000000000000000 x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (*.f64 -13888888888889/5000000000000000 (/.f64 z x)) (*.f64 (+.f64 (/.f64 y x) (*.f64 7936500793651/10000000000000000 (/.f64 1 x))) (pow.f64 z 2))))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (*.f64 -13888888888889/5000000000000000 (/.f64 z x)) (*.f64 (+.f64 (/.f64 y x) (*.f64 7936500793651/10000000000000000 (/.f64 1 x))) (pow.f64 z 2))))","(/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(+.f64 (*.f64 -1/2 (log.f64 x)) 91893853320467/100000000000000)","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x)","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))","(+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(*.f64 y (pow.f64 z 2))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(*.f64 y (pow.f64 z 2))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","83333333333333/1000000000000000","(+.f64 83333333333333/1000000000000000 (*.f64 -13888888888889/5000000000000000 z))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(*.f64 y z)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(*.f64 y z)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","-13888888888889/5000000000000000","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(*.f64 z (+.f64 7936500793651/10000000000000000 y))","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(*.f64 z (+.f64 7936500793651/10000000000000000 y))","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000)) x)","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000)) x)","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000)) x)","(/.f64 (*.f64 y (pow.f64 z 2)) x)","(/.f64 (*.f64 y (*.f64 z z)) x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000)) x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000)) x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000)) x)","(/.f64 (*.f64 y (pow.f64 z 2)) x)","(/.f64 (*.f64 y (*.f64 z z)) x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000)) x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000)) x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000)) x)","(/.f64 83333333333333/1000000000000000 x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (*.f64 -13888888888889/5000000000000000 (/.f64 z x)) (*.f64 (+.f64 (/.f64 y x) (*.f64 7936500793651/10000000000000000 (/.f64 1 x))) (pow.f64 z 2))))","(+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z)))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (*.f64 -13888888888889/5000000000000000 (/.f64 z x)) (*.f64 (+.f64 (/.f64 y x) (*.f64 7936500793651/10000000000000000 (/.f64 1 x))) (pow.f64 z 2))))","(+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z)))","(/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x)","(/.f64 (*.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(/.f64 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)) x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (/.f64 83333333333333/1000000000000000 x) (/.f64 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)) x))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (/.f64 83333333333333/1000000000000000 x) (/.f64 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)) x))","(/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x)","(/.f64 (*.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(/.f64 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)) x)","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (/.f64 83333333333333/1000000000000000 x) (/.f64 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)) x))","(+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (/.f64 83333333333333/1000000000000000 x) (/.f64 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)) x))","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(/.f64 (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 z (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) 83333333333333/1000000000000000) x)","(+.f64 (*.f64 -1/2 (log.f64 x)) 91893853320467/100000000000000)","(fma.f64 -1/2 (log.f64 x) 91893853320467/100000000000000)","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(+.f64 91893853320467/100000000000000 (fma.f64 -1/2 (log.f64 x) (*.f64 (+.f64 (log.f64 x) -1) x)))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(+.f64 91893853320467/100000000000000 (fma.f64 -1/2 (log.f64 x) (*.f64 (+.f64 (log.f64 x) -1) x)))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(+.f64 91893853320467/100000000000000 (fma.f64 -1/2 (log.f64 x) (*.f64 (+.f64 (log.f64 x) -1) x)))","(*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x)","(*.f64 (+.f64 (log.f64 x) -1) x)","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 91893853320467/100000000000000 (fma.f64 (+.f64 (log.f64 x) -1) x (neg.f64 (*.f64 (log.f64 x) 1/2))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 91893853320467/100000000000000 (fma.f64 (+.f64 (log.f64 x) -1) x (neg.f64 (*.f64 (log.f64 x) 1/2))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 91893853320467/100000000000000 (fma.f64 (+.f64 (log.f64 x) -1) x (neg.f64 (*.f64 (log.f64 x) 1/2))))","(*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(*.f64 (neg.f64 x) (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))","(+.f64 91893853320467/100000000000000 (fma.f64 -1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (*.f64 (neg.f64 x) (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))","(+.f64 91893853320467/100000000000000 (fma.f64 -1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (*.f64 (neg.f64 x) (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))","(+.f64 91893853320467/100000000000000 (fma.f64 -1/2 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) (*.f64 (neg.f64 x) (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))))","(+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000)","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000))","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000))","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 83333333333333/1000000000000000 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000))","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000))","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 z (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) 83333333333333/1000000000000000))","83333333333333/1000000000000000","(+.f64 83333333333333/1000000000000000 (*.f64 -13888888888889/5000000000000000 z))","(fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000)","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)))","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(*.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)))","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(*.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 83333333333333/1000000000000000 (fma.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y) (*.f64 -13888888888889/5000000000000000 z)))","(-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000)","(fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(*.f64 y z)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(*.f64 y z)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (+.f64 (*.f64 y z) (*.f64 7936500793651/10000000000000000 z)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","-13888888888889/5000000000000000","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(*.f64 z (+.f64 7936500793651/10000000000000000 y))","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(*.f64 z (+.f64 7936500793651/10000000000000000 y))","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)","(-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000)","(fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000)"]],"time":293.001953125,"type":"simplify"},{"compiler":[[8311,5493]],"time":96.998046875,"type":"eval"},{"alts":[["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (*.f64 y z) z 83333333333333/1000000000000000) x))","fresh",10.54259891809638],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) 83333333333333/1000000000000000) x))","fresh",8.283535009768443],["(+.f64 (fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.110702539073767],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x))))","fresh",8.20032895513728],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x))","fresh",8.10546875],["(+.f64 (fma.f64 (*.f64 (log.f64 x) (cbrt.f64 (+.f64 x -1/2))) (cbrt.f64 (pow.f64 (+.f64 x -1/2) 2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",24.748378759768443],["(+.f64 (fma.f64 (cbrt.f64 (*.f64 (log.f64 x) (+.f64 x -1/2))) (pow.f64 (cbrt.f64 (*.f64 (log.f64 x) (+.f64 x -1/2))) 2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.260473937915723],["(+.f64 (/.f64 (-.f64 (*.f64 (*.f64 (log.f64 x) (+.f64 (pow.f64 x 3) -1/8)) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (-.f64 (pow.f64 x 3) (pow.f64 91893853320467/100000000000000 3)))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x))))) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",33.94826127930533],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z))))","fresh",8.529628759768443],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)))","fresh",16.486660009768443],["(+.f64 (-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","next",8.051445019536885],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","fresh",10.331947538373884]],"compiler":[[21,14],[30,21],[31,22],[30,21],[28,21],[32,24],[35,25],[65,50],[29,20],[38,28],[24,17],[24,18],[21,14],[30,21],[31,22],[30,21],[28,21],[32,24],[35,25],[65,50],[29,20],[38,28],[24,17],[24,18]],"count":[[289,12]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[287,12],"picked":[1,0]}],"min-error":[1.8049044627581112],"time":108.428955078125,"type":"prune"},{"compiler":[[82,52]],"locations":[["(fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)",0.078125,false],["(-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x)",0.16796875,true],["(fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)",0.2890625,true],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)",7.474298070593797,false]],"time":20.89306640625,"type":"localize"},{"count":[[2,24]],"series":[["(-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x)","x","-inf",0.22705078125],["(-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x)","x","inf",0.18896484375],["(-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x)","x","0",0.200927734375],["(fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)","x","-inf",0.380126953125],["(fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)","x","inf",0.325927734375],["(fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)","x","0",0.35400390625]],"time":1.782958984375,"type":"series"},{"count":[[2,96]],"inputs":[["(fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)","(-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 91893853320467/100000000000000 (*.f64 (+.f64 x -1/2) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) (*.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 0) (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) (*.f64 0 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 2)) (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 3) (pow.f64 91893853320467/100000000000000 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 2) (*.f64 91893853320467/100000000000000 (-.f64 91893853320467/100000000000000 (*.f64 (+.f64 x -1/2) (log.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 3) (pow.f64 91893853320467/100000000000000 3)) (+.f64 (*.f64 91893853320467/100000000000000 91893853320467/100000000000000) (-.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 2) (*.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 91893853320467/100000000000000))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 3) (pow.f64 91893853320467/100000000000000 3)) (+.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 2) (*.f64 91893853320467/100000000000000 (-.f64 91893853320467/100000000000000 (*.f64 (+.f64 x -1/2) (log.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 3) (pow.f64 91893853320467/100000000000000 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 2) (*.f64 91893853320467/100000000000000 (-.f64 91893853320467/100000000000000 (*.f64 (+.f64 x -1/2) (log.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 3) (pow.f64 91893853320467/100000000000000 3)) 1) (+.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 2) (*.f64 91893853320467/100000000000000 (-.f64 91893853320467/100000000000000 (*.f64 (+.f64 x -1/2) (log.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 x -1/2) (cbrt.f64 (log.f64 x))) (cbrt.f64 (pow.f64 (log.f64 x) 2)) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 x -1/2) (log.f64 x))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 2)) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x -1/2) 2)) (log.f64 x)) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 x) (+.f64 x -1/2) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 91893853320467/100000000000000) (sqrt.f64 91893853320467/100000000000000) (*.f64 (+.f64 x -1/2) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 91893853320467/100000000000000) (cbrt.f64 (*.f64 91893853320467/100000000000000 91893853320467/100000000000000)) (*.f64 (+.f64 x -1/2) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 91893853320467/100000000000000)) (neg.f64 (sqrt.f64 91893853320467/100000000000000)) (*.f64 (+.f64 x -1/2) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 91893853320467/100000000000000 91893853320467/100000000000000)) (cbrt.f64 91893853320467/100000000000000) (*.f64 (+.f64 x -1/2) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -91893853320467/100000000000000 (*.f64 (+.f64 x -1/2) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 x -1/2) (log.f64 x)) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 91893853320467/100000000000000 1 (*.f64 (+.f64 x -1/2) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 91893853320467/100000000000000 (*.f64 (+.f64 x -1/2) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 1 91893853320467/100000000000000)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) (*.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) 0) (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) (*.f64 0 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x))) (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 x) (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 91893853320467/100000000000000 x) (*.f64 (+.f64 x -1/2) (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (neg.f64 x) (*.f64 (+.f64 x -1/2) (log.f64 x))) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 91893853320467/100000000000000 (+.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 91893853320467/100000000000000 (-.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 0 (-.f64 x (*.f64 (+.f64 x -1/2) (log.f64 x)))) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) (*.f64 (-.f64 91893853320467/100000000000000 x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 x (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 x) (neg.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 0) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 x (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 x (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 2)) (+.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x)))) (-.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) 2)) (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 x (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 x (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 2)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 x)) (cbrt.f64 (*.f64 x x)) (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (neg.f64 (cbrt.f64 (*.f64 x x))) (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 x -1/2) (cbrt.f64 (log.f64 x))) (cbrt.f64 (pow.f64 (log.f64 x) 2)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (+.f64 x -1/2) (log.f64 x))) (cbrt.f64 (pow.f64 (*.f64 (+.f64 x -1/2) (log.f64 x)) 2)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x -1/2) 2)) (log.f64 x)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 2)) (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 x) (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 x (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 x -1/2) (log.f64 x)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) 1 (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 (+.f64 x -1/2) (log.f64 x) (-.f64 91893853320467/100000000000000 x)))))))"]],"rules":[["egg-rr",57],["egg-rr",39]],"time":28.410888671875,"type":"rewrite"},{"count":[[120,118]],"inputs":[["(+.f64 (*.f64 -1/2 (log.f64 x)) 91893853320467/100000000000000)","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (log.f64 x) x)))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (log.f64 x) x)))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (log.f64 x) x)))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) x))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) x)) (+.f64 91893853320467/100000000000000 (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) x)) (+.f64 91893853320467/100000000000000 (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) x)) (+.f64 91893853320467/100000000000000 (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) x) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) x) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) x) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(+.f64 (*.f64 -1/2 (log.f64 x)) 91893853320467/100000000000000)","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x)","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1/2 (log.f64 x)) 91893853320467/100000000000000)","(fma.f64 -1/2 (log.f64 x) 91893853320467/100000000000000)","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (log.f64 x) x)))","(+.f64 91893853320467/100000000000000 (*.f64 (log.f64 x) (+.f64 x -1/2)))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (log.f64 x) x)))","(+.f64 91893853320467/100000000000000 (*.f64 (log.f64 x) (+.f64 x -1/2)))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (log.f64 x) x)))","(+.f64 91893853320467/100000000000000 (*.f64 (log.f64 x) (+.f64 x -1/2)))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) x))","(*.f64 (log.f64 x) x)","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) x)) (+.f64 91893853320467/100000000000000 (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(fma.f64 (log.f64 x) x (fma.f64 (neg.f64 (log.f64 x)) 1/2 91893853320467/100000000000000))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) x)) (+.f64 91893853320467/100000000000000 (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(fma.f64 (log.f64 x) x (fma.f64 (neg.f64 (log.f64 x)) 1/2 91893853320467/100000000000000))","(+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 x)) x)) (+.f64 91893853320467/100000000000000 (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(fma.f64 (log.f64 x) x (fma.f64 (neg.f64 (log.f64 x)) 1/2 91893853320467/100000000000000))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) x)","(*.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) x) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(fma.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) x (fma.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -1/2 91893853320467/100000000000000))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) x) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(fma.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) x (fma.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -1/2 91893853320467/100000000000000))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) x) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))))","(fma.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) x (fma.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -1/2 91893853320467/100000000000000))","(+.f64 (*.f64 -1/2 (log.f64 x)) 91893853320467/100000000000000)","(fma.f64 -1/2 (log.f64 x) 91893853320467/100000000000000)","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(+.f64 91893853320467/100000000000000 (fma.f64 (+.f64 (log.f64 x) -1) x (*.f64 -1/2 (log.f64 x))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(+.f64 91893853320467/100000000000000 (fma.f64 (+.f64 (log.f64 x) -1) x (*.f64 -1/2 (log.f64 x))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (log.f64 x)) (*.f64 (-.f64 (log.f64 x) 1) x)))","(+.f64 91893853320467/100000000000000 (fma.f64 (+.f64 (log.f64 x) -1) x (*.f64 -1/2 (log.f64 x))))","(*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x)","(*.f64 (+.f64 (log.f64 x) -1) x)","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 91893853320467/100000000000000 (fma.f64 (+.f64 (log.f64 x) -1) x (neg.f64 (*.f64 (log.f64 x) 1/2))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 91893853320467/100000000000000 (fma.f64 (+.f64 (log.f64 x) -1) x (neg.f64 (*.f64 (log.f64 x) 1/2))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 (-.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) 1) x) (*.f64 1/2 (log.f64 (/.f64 1 x)))))","(+.f64 91893853320467/100000000000000 (fma.f64 (+.f64 (log.f64 x) -1) x (neg.f64 (*.f64 (log.f64 x) 1/2))))","(*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(*.f64 (neg.f64 x) (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))","(-.f64 (fma.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -1/2 91893853320467/100000000000000) (*.f64 x (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))","(-.f64 (fma.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -1/2 91893853320467/100000000000000) (*.f64 x (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))","(+.f64 91893853320467/100000000000000 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))) (*.f64 -1 (*.f64 x (+.f64 1 (*.f64 -1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))))","(-.f64 (fma.f64 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))) -1/2 91893853320467/100000000000000) (*.f64 x (-.f64 1 (-.f64 (log.f64 -1) (neg.f64 (log.f64 (neg.f64 x)))))))"]],"time":79.68896484375,"type":"simplify"},{"compiler":[[7825,5135]],"time":89.912109375,"type":"eval"},{"alts":[["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (*.f64 y z) z 83333333333333/1000000000000000) x))","fresh",10.54259891809638],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) 83333333333333/1000000000000000) x))","fresh",8.283535009768443],["(+.f64 (fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.110702539073767],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x))))","fresh",8.20032895513728],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x))","next",8.10546875],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z))))","fresh",8.529628759768443],["(+.f64 (-.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) 3) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.277132775831701],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","fresh",10.331947538373884],["(+.f64 (fma.f64 (*.f64 (+.f64 x -1/2) (cbrt.f64 (log.f64 x))) (cbrt.f64 (pow.f64 (log.f64 x) 2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.11689379884221],["(+.f64 (-.f64 (fma.f64 (*.f64 (+.f64 x -1/2) (cbrt.f64 (log.f64 x))) (cbrt.f64 (pow.f64 (log.f64 x) 2)) 91893853320467/100000000000000) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.117557568379093],["(+.f64 (-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x) (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x))","fresh",10.349858419772906],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)))","fresh",16.486660009768443],["(+.f64 (-.f64 (fma.f64 (cbrt.f64 (+.f64 x -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x -1/2) 2)) (log.f64 x)) 91893853320467/100000000000000) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",24.749042529305328]],"compiler":[[21,14],[30,21],[31,22],[30,21],[28,21],[29,20],[27,20],[24,18],[31,22],[31,22],[19,14],[38,28],[32,24],[21,14],[30,21],[31,22],[30,21],[28,21],[29,20],[27,20],[24,18],[31,22],[31,22],[19,14],[38,28],[32,24]],"count":[[288,13]],"kept":[{"done":[0,0],"fresh":[11,8],"new":[276,5],"picked":[1,0]}],"min-error":[1.7892794627581112],"time":100.610107421875,"type":"prune"},{"compiler":[[100,69]],"locations":[["(*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)",0.09765625,true],["(fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))",0.2734375,false],["(fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))",0.58984375,true],["(/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x)",7.474298070593797,true]],"time":25.784912109375,"type":"localize"},{"count":[[3,84]],"series":[["(*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)","z","-inf",0.236083984375],["(*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)","z","inf",0.214111328125],["(*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)","z","0",0.201904296875],["(*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)","y","-inf",0.156005859375],["(*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)","y","inf",0.177001953125],["(*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)","y","0",0.166015625],["(fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))","z","-inf",0.18115234375],["(fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))","z","inf",0.1708984375],["(fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))","z","0",0.18701171875],["(fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))","y","-inf",0.16796875],["(fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))","y","inf",0.173828125],["(fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))","y","0",0.201171875],["(/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x)","x","-inf",0.364013671875],["(/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x)","x","inf",0.35107421875],["(/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x)","x","0",0.55615234375],["(/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x)","z","-inf",0.3388671875],["(/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x)","z","inf",0.326171875],["(/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x)","z","0",0.31396484375],["(/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x)","y","-inf",0.43310546875],["(/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x)","y","inf",0.35302734375],["(/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x)","y","0",0.632080078125]],"time":6.2470703125,"type":"series"},{"count":[[3,155]],"inputs":[["(/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x)","(fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))","(*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 x) 83333333333333/1000000000000000) (*.f64 (/.f64 1 x) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 x) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) (*.f64 (/.f64 1 x) 83333333333333/1000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 1/2) (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 0) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (/.f64 1 x)) (*.f64 83333333333333/1000000000000000 (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) (*.f64 0 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (*.f64 1/2 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 2)) (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (/.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 x) (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) x) (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)) (pow.f64 (cbrt.f64 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 x) (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3))) (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3)) (/.f64 1 x)) (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3))) (*.f64 (cbrt.f64 (*.f64 x x)) (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3)) (*.f64 x (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3))) (*.f64 (neg.f64 x) (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3)) (cbrt.f64 (/.f64 1 x))) (*.f64 (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000))) (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3)) -1) (*.f64 (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3)) 1) (*.f64 (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000))) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 x)) (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 2)) (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 2)) (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2))) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 2))) (cbrt.f64 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 2))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x)) 1) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 x)) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) -1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x))) (neg.f64 (cbrt.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (neg.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 83333333333333/1000000000000000 (*.f64 z (*.f64 (+.f64 y 7936500793651/10000000000000000) z))) (*.f64 z -13888888888889/5000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 (+.f64 y 7936500793651/10000000000000000) z)) (+.f64 (*.f64 z -13888888888889/5000000000000000) 83333333333333/1000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (*.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 1/2) (*.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 0) (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (*.f64 0 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (*.f64 1/2 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))) (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3)) (/.f64 1 (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 83333333333333/1000000000000000 83333333333333/1000000000000000)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2)) (*.f64 (cbrt.f64 83333333333333/1000000000000000) (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (+.f64 (cbrt.f64 83333333333333/1000000000000000) (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2)) (-.f64 (cbrt.f64 (*.f64 83333333333333/1000000000000000 83333333333333/1000000000000000)) (*.f64 (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) (cbrt.f64 83333333333333/1000000000000000)))) (+.f64 (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) (cbrt.f64 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3)) (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3)) 1) (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3)) (+.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2) (-.f64 (*.f64 83333333333333/1000000000000000 83333333333333/1000000000000000) (*.f64 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3)) 1) (*.f64 (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 83333333333333/1000000000000000 3) (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3))) (neg.f64 (fma.f64 83333333333333/1000000000000000 83333333333333/1000000000000000 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (-.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 83333333333333/1000000000000000) (cbrt.f64 (*.f64 83333333333333/1000000000000000 83333333333333/1000000000000000)) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 2)) z) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2)) (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 2)) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2)) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (neg.f64 z) (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 83333333333333/1000000000000000 83333333333333/1000000000000000)) (cbrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 83333333333333/1000000000000000 3/2)) (sqrt.f64 (sqrt.f64 83333333333333/1000000000000000)) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 83333333333333/1000000000000000)) (sqrt.f64 (pow.f64 83333333333333/1000000000000000 3/2)) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 83333333333333/1000000000000000)) (neg.f64 (sqrt.f64 83333333333333/1000000000000000)) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 83333333333333/1000000000000000)) (*.f64 (cbrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000)) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 83333333333333/1000000000000000 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 1 83333333333333/1000000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 83333333333333/1000000000000000 1 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (*.f64 (+.f64 y 7936500793651/10000000000000000) z)) (*.f64 z -13888888888889/5000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z -13888888888889/5000000000000000) (*.f64 z (*.f64 (+.f64 y 7936500793651/10000000000000000) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 1/2) (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 0) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (*.f64 (+.f64 y 7936500793651/10000000000000000) z)) 1) (*.f64 (*.f64 z -13888888888889/5000000000000000) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) (*.f64 0 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) (*.f64 1/2 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 2)) (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000))) (cbrt.f64 (pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 2)) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 z) (*.f64 (cbrt.f64 (*.f64 z z)) (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (neg.f64 z) (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 2)) z) (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) 2)) (*.f64 z (cbrt.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 z z)) (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) (cbrt.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 z) (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 3) (pow.f64 -13888888888889/5000000000000000 3))) (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 2) (*.f64 -13888888888889/5000000000000000 (-.f64 -13888888888889/5000000000000000 (*.f64 (+.f64 y 7936500793651/10000000000000000) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 3) (pow.f64 -13888888888889/5000000000000000 3)) z) (+.f64 (pow.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 2) (*.f64 -13888888888889/5000000000000000 (-.f64 -13888888888889/5000000000000000 (*.f64 (+.f64 y 7936500793651/10000000000000000) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (neg.f64 z) (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 (+.f64 y 7936500793651/10000000000000000) z) (*.f64 z -13888888888889/5000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) z (*.f64 z -13888888888889/5000000000000000))))))"]],"rules":[["egg-rr",37],["egg-rr",58],["egg-rr",60]],"time":37.783935546875,"type":"rewrite"},{"count":[[239,198]],"inputs":[["(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)) x)","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (*.f64 y (pow.f64 z 2)) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (*.f64 y (pow.f64 z 2)) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (*.f64 -13888888888889/5000000000000000 (/.f64 z x)) (*.f64 (+.f64 (/.f64 y x) (*.f64 7936500793651/10000000000000000 (/.f64 1 x))) (pow.f64 z 2))))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (*.f64 -13888888888889/5000000000000000 (/.f64 z x)) (*.f64 (+.f64 (/.f64 y x) (*.f64 7936500793651/10000000000000000 (/.f64 1 x))) (pow.f64 z 2))))","(/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(*.f64 y (pow.f64 z 2))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(*.f64 y (pow.f64 z 2))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2)","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(*.f64 y (pow.f64 z 2))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(*.f64 -13888888888889/5000000000000000 z)","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)","(+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)","(/.f64 (*.f64 y (pow.f64 z 2)) x)","(/.f64 (*.f64 y (*.f64 z z)) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)","(/.f64 (*.f64 y (pow.f64 z 2)) x)","(/.f64 (*.f64 y (*.f64 z z)) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 y (pow.f64 z 2)) x) (/.f64 (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z) x)))","(/.f64 (fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)","(/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x)","(/.f64 83333333333333/1000000000000000 x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (*.f64 -13888888888889/5000000000000000 (/.f64 z x)) (*.f64 (+.f64 (/.f64 y x) (*.f64 7936500793651/10000000000000000 (/.f64 1 x))) (pow.f64 z 2))))","(+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z)))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (*.f64 -13888888888889/5000000000000000 (/.f64 z x)) (*.f64 (+.f64 (/.f64 y x) (*.f64 7936500793651/10000000000000000 (/.f64 1 x))) (pow.f64 z 2))))","(+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z)))","(/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x)","(/.f64 (*.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(/.f64 (*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (/.f64 83333333333333/1000000000000000 x) (/.f64 (*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z) x))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (/.f64 83333333333333/1000000000000000 x) (/.f64 (*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z) x))","(/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x)","(/.f64 (*.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y)) x)","(+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x)))","(/.f64 (*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z) x)","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (/.f64 83333333333333/1000000000000000 x) (/.f64 (*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z) x))","(+.f64 (/.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) x) (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) x) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (/.f64 83333333333333/1000000000000000 x) (/.f64 (*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z) x))","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(/.f64 (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 z (+.f64 7936500793651/10000000000000000 y)) 13888888888889/5000000000000000) z)) x)","(/.f64 (fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))","(+.f64 (*.f64 y (pow.f64 z 2)) (+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)))","(fma.f64 (*.f64 z z) y (fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z 83333333333333/1000000000000000))","(pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2)","83333333333333/1000000000000000","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (*.f64 -13888888888889/5000000000000000 z))","(fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000)","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(*.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z)","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(*.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z)","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","(+.f64 (pow.f64 (sqrt.f64 83333333333333/1000000000000000) 2) (+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z)))","(fma.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z 83333333333333/1000000000000000)","(*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z)","(*.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z)","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z (*.f64 y (*.f64 z z)))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z (*.f64 y (*.f64 z z)))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z (*.f64 y (*.f64 z z)))","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z (*.f64 y (*.f64 z z)))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z (*.f64 y (*.f64 z z)))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z (*.f64 y (*.f64 z z)))","(*.f64 y (pow.f64 z 2))","(*.f64 y (*.f64 z z))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z (*.f64 y (*.f64 z z)))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z (*.f64 y (*.f64 z z)))","(+.f64 (*.f64 y (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 7936500793651/10000000000000000 z) 13888888888889/5000000000000000) z))","(fma.f64 (fma.f64 7936500793651/10000000000000000 z -13888888888889/5000000000000000) z (*.f64 y (*.f64 z z)))","(*.f64 -13888888888889/5000000000000000 z)","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z)","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z)","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z)","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(*.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z)","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z)","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z)","(*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y))","(*.f64 (*.f64 z z) (+.f64 7936500793651/10000000000000000 y))","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z)","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z)","(+.f64 (*.f64 (pow.f64 z 2) (+.f64 7936500793651/10000000000000000 y)) (*.f64 -13888888888889/5000000000000000 z))","(*.f64 (fma.f64 z (+.f64 7936500793651/10000000000000000 y) -13888888888889/5000000000000000) z)"]],"time":247.6240234375,"type":"simplify"},{"compiler":[[8561,5824]],"time":103.60595703125,"type":"eval"},{"alts":[["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (*.f64 y z) z 83333333333333/1000000000000000) x))","fresh",10.54259891809638],["(+.f64 (fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","next",8.110702539073767],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)))","fresh",16.486660009768443],["(+.f64 (+.f64 (+.f64 (-.f64 91893853320467/100000000000000 x) (*.f64 x (log.f64 x))) (*.f64 -1/2 (log.f64 x))) (/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x))","fresh",8.142910009768443],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","fresh",10.331947538373884],["(+.f64 (fma.f64 (*.f64 (+.f64 x -1/2) (cbrt.f64 (log.f64 x))) (cbrt.f64 (pow.f64 (log.f64 x) 2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.11689379884221],["(+.f64 (-.f64 (fma.f64 (*.f64 (+.f64 x -1/2) (cbrt.f64 (log.f64 x))) (cbrt.f64 (pow.f64 (log.f64 x) 2)) 91893853320467/100000000000000) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.117557568379093],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x))))","fresh",8.20032895513728],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) 83333333333333/1000000000000000) x))","fresh",8.283535009768443],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z))))","fresh",8.529628759768443],["(+.f64 (-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x) (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x))","fresh",10.349858419772906],["(+.f64 (-.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) 3) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.277132775831701]],"compiler":[[21,14],[31,22],[38,28],[32,23],[24,18],[31,22],[31,22],[30,21],[30,21],[29,20],[19,14],[27,20],[21,14],[31,22],[38,28],[32,23],[24,18],[31,22],[31,22],[30,21],[30,21],[29,20],[19,14],[27,20]],"count":[[293,12]],"kept":[{"done":[0,0],"fresh":[12,9],"new":[280,3],"picked":[1,0]}],"min-error":[1.7892794627581112],"time":105.046875,"type":"prune"},{"compiler":[[114,71]],"locations":[["(*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2))",0.171875,true],["(fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x))",0.35775375976844204,true],["(pow.f64 (log.f64 x) 2)",0.4912300293053261,true],["(/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)",7.474298070593797,false]],"time":30.106201171875,"type":"localize"},{"count":[[3,32]],"series":[["(*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2))","x","-inf",0.375],["(*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2))","x","inf",0.238037109375],["(*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2))","x","0",0.199951171875],["(fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x))","x","-inf",1.629150390625],["(fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x))","x","inf",1.278076171875],["(fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x))","x","0",1.43798828125],["(pow.f64 (log.f64 x) 2)","x","-inf",5.009033203125],["(pow.f64 (log.f64 x) 2)","x","inf",3.454833984375],["(pow.f64 (log.f64 x) 2)","x","0",14.89404296875]],"time":28.702880859375,"type":"series"},{"count":[[3,154]],"inputs":[["(pow.f64 (log.f64 x) 2)","(fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log.f64 x) 2) 0) (pow.f64 (log.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log.f64 x) 2) (*.f64 (pow.f64 (log.f64 x) 2) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (log.f64 x) 2)) (pow.f64 (log.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (log.f64 x) 2) (*.f64 0 (pow.f64 (log.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 x) (log.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 x) 4)) (pow.f64 (log.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 x)) (pow.f64 (log.f64 x) (+.f64 2/3 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (log.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 x) 2/3) (cbrt.f64 (pow.f64 (log.f64 x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (log.f64 x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 x) (+.f64 2/3 1)) (cbrt.f64 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1 (neg.f64 (log.f64 x))) (*.f64 1 (neg.f64 (log.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (log.f64 x)) 1) (*.f64 (neg.f64 (log.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 x)) (pow.f64 (cbrt.f64 (pow.f64 (log.f64 x) (+.f64 2/3 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (neg.f64 (pow.f64 (log.f64 x) 2/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 4)) (pow.f64 (log.f64 x) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 4)) (pow.f64 (log.f64 x) 4))) (cbrt.f64 (pow.f64 (log.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (log.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 x) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 x) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 x)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 x) 2) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 x) 2) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 x) 2/3) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (log.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (pow.f64 (log.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (log.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 x) 6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 0) (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))) (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 0 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 91893853320467/100000000000000 x) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) 91893853320467/100000000000000) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 x) (fma.f64 (log.f64 x) (+.f64 x -1/2) 91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) (neg.f64 x)) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (-.f64 91893853320467/100000000000000 x) (*.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) x) (cbrt.f64 (log.f64 x)))) (*.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2) (cbrt.f64 (log.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 91893853320467/100000000000000 (+.f64 (neg.f64 x) (*.f64 (log.f64 x) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) x) (cbrt.f64 (log.f64 x))) (+.f64 (*.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2) (cbrt.f64 (log.f64 x))) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) x) (cbrt.f64 (log.f64 x))) (-.f64 (*.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2) (cbrt.f64 (log.f64 x))) (+.f64 x -91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) x) 91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) 91893853320467/100000000000000) 1) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) (+.f64 x -91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) 0) (+.f64 x -91893853320467/100000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) (/.f64 (pow.f64 91893853320467/100000000000000 3) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x))))) (/.f64 (pow.f64 x 3) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 91893853320467/100000000000000 3) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (-.f64 (/.f64 (pow.f64 x 3) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (*.f64 (log.f64 x) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (+.f64 x -91893853320467/100000000000000) (*.f64 (log.f64 x) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 91893853320467/100000000000000 (-.f64 x (*.f64 (log.f64 x) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) x) -91893853320467/100000000000000)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) 91893853320467/100000000000000) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) 91893853320467/100000000000000) 0) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))) (pow.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 2/3) (cbrt.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 x -91893853320467/100000000000000) (*.f64 (log.f64 x) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 x (fma.f64 (log.f64 x) (+.f64 x -1/2) 91893853320467/100000000000000)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 x -91893853320467/100000000000000) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 91893853320467/100000000000000 3) (pow.f64 x 3)) (/.f64 1 (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 91893853320467/100000000000000 x)) (pow.f64 (-.f64 91893853320467/100000000000000 x) 2/3) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 91893853320467/100000000000000 x) 2/3) (cbrt.f64 (-.f64 91893853320467/100000000000000 x)) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2/3)) (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (log.f64 x) (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)))) (pow.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) 2/3) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 x -1/2)) (pow.f64 (log.f64 x) 2/3) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) (cbrt.f64 (log.f64 x)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (log.f64 x) (+.f64 x -1/2))) (cbrt.f64 (pow.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) 2)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 91893853320467/100000000000000 x) (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 91893853320467/100000000000000 x) 1 (*.f64 (log.f64 x) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (log.f64 x) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 x) (+.f64 x -1/2)) 1 (-.f64 91893853320467/100000000000000 x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) 0) (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) (*.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))) (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) (*.f64 0 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) x) (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2) (*.f64 (pow.f64 (log.f64 x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x -1/2)) (*.f64 (pow.f64 (+.f64 x -1/2) 2/3) (pow.f64 (log.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x -1/2) (pow.f64 (log.f64 x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 x -1/2) 2/3) (pow.f64 (log.f64 x) 2/3)) (cbrt.f64 (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (log.f64 x) 2/3) (cbrt.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))))) (/.f64 (+.f64 (pow.f64 x 3) -1/8) (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 (pow.f64 x 3) -1/8) (cbrt.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))))) (/.f64 (pow.f64 (log.f64 x) 2/3) (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))) (pow.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) 2/3) (cbrt.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (cbrt.f64 (+.f64 x -1/2))) (pow.f64 (+.f64 x -1/2) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) 4) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 x -1/2) (cbrt.f64 (pow.f64 (log.f64 x) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x -1/2) 2/3) (*.f64 (pow.f64 (log.f64 x) 2/3) (cbrt.f64 (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) 4) (*.f64 (+.f64 x -1/2) (cbrt.f64 (pow.f64 (log.f64 x) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) 4) (+.f64 x -1/2)) (cbrt.f64 (pow.f64 (log.f64 x) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) 4) (+.f64 (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 x) 2/3))) (*.f64 x (cbrt.f64 (pow.f64 (log.f64 x) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) 4) (+.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 x) 2/3))) (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 x) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (pow.f64 x 3) -1/8) (pow.f64 (log.f64 x) 2/3)) (/.f64 1 (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) -1/8) (/.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 x 3) -1/8) (pow.f64 (log.f64 x) 2/3)) (cbrt.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))))) (pow.f64 (cbrt.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) -1/8) (pow.f64 (log.f64 x) 2/3)) (+.f64 1/4 (*.f64 x (+.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (+.f64 (pow.f64 x 3) -1/8) (pow.f64 (log.f64 x) 2/3))) (+.f64 1/4 (*.f64 x (+.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (neg.f64 (+.f64 (pow.f64 x 3) -1/8))) (neg.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 (pow.f64 x 3) -1/8) (pow.f64 (log.f64 x) 2/3)) 1) (+.f64 1/4 (*.f64 x (+.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (+.f64 (pow.f64 x 3) -1/8)) (*.f64 (pow.f64 (+.f64 x -1/2) 2/3) (pow.f64 (log.f64 x) 2/3))) (cbrt.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (+.f64 (pow.f64 x 3) -1/8)) (pow.f64 (log.f64 x) 2/3)) (neg.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 (pow.f64 x 3) -1/8) (pow.f64 (log.f64 x) 2/3)) 1) (+.f64 1/4 (*.f64 x (+.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 x 3) -1/8) (pow.f64 (log.f64 x) 2/3))) (neg.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (log.f64 x) 2) (pow.f64 (+.f64 x -1/2) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 x) 2) (pow.f64 (+.f64 x -1/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (cbrt.f64 x)) (pow.f64 x 2/3) (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) x)) (cbrt.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) x) 2)) (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (pow.f64 (log.f64 x) 2/3)) (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 x) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) 4) (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2/3)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) 4) x) (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -1/2) (*.f64 (cbrt.f64 1/4) (pow.f64 (log.f64 x) 2/3)) (*.f64 (pow.f64 (log.f64 x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2/3)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 4)) -1/8)) (*.f64 (pow.f64 (log.f64 x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 x) 2/3) -1/2 (*.f64 (pow.f64 (log.f64 x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2)) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 4)) 1/4)) (*.f64 (pow.f64 (log.f64 x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (pow.f64 (log.f64 x) 2/3) (*.f64 (pow.f64 (log.f64 x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) (cbrt.f64 -1/2)) (cbrt.f64 1/4) (*.f64 (pow.f64 (log.f64 x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 x) 2/3))) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) 4) (*.f64 (pow.f64 (log.f64 x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (log.f64 x) 2/3) x (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (pow.f64 (log.f64 x) 2/3) (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (pow.f64 (log.f64 x) 2/3) x) (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2) (*.f64 (pow.f64 (log.f64 x) 2/3) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (log.f64 x) 2/3) x) 1 (*.f64 (pow.f64 (log.f64 x) 2/3) -1/2))))))"]],"rules":[["egg-rr",63],["egg-rr",56],["egg-rr",35]],"time":36.8740234375,"type":"rewrite"},{"count":[[186,173]],"inputs":[["(pow.f64 (log.f64 (/.f64 1 x)) 2)","(pow.f64 (log.f64 (/.f64 1 x)) 2)","(pow.f64 (log.f64 (/.f64 1 x)) 2)","(pow.f64 (log.f64 (/.f64 1 x)) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (log.f64 x))) 91893853320467/100000000000000)","(+.f64 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (log.f64 x)) 1) x) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (log.f64 x))) 91893853320467/100000000000000))","(+.f64 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (log.f64 x)) 1) x) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (log.f64 x))) 91893853320467/100000000000000))","(+.f64 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (log.f64 x)) 1) x) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (log.f64 x))) 91893853320467/100000000000000))","(*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1))) 1) x)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1)))) (+.f64 91893853320467/100000000000000 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1))) 1) x)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1)))) (+.f64 91893853320467/100000000000000 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1))) 1) x)))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1)))) (+.f64 91893853320467/100000000000000 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1))) 1) x)))","(*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) x))","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) x)) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) x)) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) x)) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) x)","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) x))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) x))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) x))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) x)","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (log.f64 (/.f64 1 x)) 2)","(pow.f64 (log.f64 x) 2)","(pow.f64 (log.f64 (/.f64 1 x)) 2)","(pow.f64 (log.f64 x) 2)","(pow.f64 (log.f64 (/.f64 1 x)) 2)","(pow.f64 (log.f64 x) 2)","(pow.f64 (log.f64 (/.f64 1 x)) 2)","(pow.f64 (log.f64 x) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)","(pow.f64 (log.f64 x) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)","(pow.f64 (log.f64 x) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)","(pow.f64 (log.f64 x) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)","(pow.f64 (log.f64 x) 2)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (log.f64 x))) 91893853320467/100000000000000)","(fma.f64 (log.f64 x) -1/2 91893853320467/100000000000000)","(+.f64 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (log.f64 x)) 1) x) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (log.f64 x))) 91893853320467/100000000000000))","(fma.f64 (+.f64 (log.f64 x) -1) x (fma.f64 (log.f64 x) -1/2 91893853320467/100000000000000))","(+.f64 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (log.f64 x)) 1) x) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (log.f64 x))) 91893853320467/100000000000000))","(fma.f64 (+.f64 (log.f64 x) -1) x (fma.f64 (log.f64 x) -1/2 91893853320467/100000000000000))","(+.f64 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (log.f64 x)) 1) x) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (log.f64 x))) 91893853320467/100000000000000))","(fma.f64 (+.f64 (log.f64 x) -1) x (fma.f64 (log.f64 x) -1/2 91893853320467/100000000000000))","(*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1))) 1) x)","(*.f64 (+.f64 (log.f64 x) -1) x)","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1)))) (+.f64 91893853320467/100000000000000 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1))) 1) x)))","(fma.f64 (+.f64 (log.f64 x) -1) x (fma.f64 (log.f64 x) -1/2 91893853320467/100000000000000))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1)))) (+.f64 91893853320467/100000000000000 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1))) 1) x)))","(fma.f64 (+.f64 (log.f64 x) -1) x (fma.f64 (log.f64 x) -1/2 91893853320467/100000000000000))","(+.f64 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1)))) (+.f64 91893853320467/100000000000000 (*.f64 (-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 x)) (cbrt.f64 -1))) 1) x)))","(fma.f64 (+.f64 (log.f64 x) -1) x (fma.f64 (log.f64 x) -1/2 91893853320467/100000000000000))","(*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) x))","(*.f64 (+.f64 (log.f64 x) -1) x)","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) x)) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(fma.f64 (+.f64 (log.f64 x) -1) x (fma.f64 (log.f64 x) -1/2 91893853320467/100000000000000))","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) x)) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(fma.f64 (+.f64 (log.f64 x) -1) x (fma.f64 (log.f64 x) -1/2 91893853320467/100000000000000))","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) x)) (+.f64 91893853320467/100000000000000 (*.f64 -1/2 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))))","(fma.f64 (+.f64 (log.f64 x) -1) x (fma.f64 (log.f64 x) -1/2 91893853320467/100000000000000))","(*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3))","(*.f64 -1/2 (pow.f64 (log.f64 x) 2/3))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3)))","(*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3)))","(*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 x) 2)) 1/3)))","(*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) x)","(*.f64 (pow.f64 (log.f64 x) 2/3) x)","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) x))","(*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) x))","(*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3)) (*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 x)) 2)) 1/3) x))","(*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (pow.f64 (log.f64 x) 2/3) x)","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))","(*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))","(*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3) x) (*.f64 -1/2 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)) 2)) 1/3)))","(*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))"]],"time":135.9140625,"type":"simplify"},{"compiler":[[9005,5750]],"time":102.327880859375,"type":"eval"},{"alts":[["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (*.f64 y z) z 83333333333333/1000000000000000) x))","fresh",10.54259891809638],["(+.f64 (fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 x)) 6)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.249782666063512],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)))","fresh",16.486660009768443],["(+.f64 (+.f64 (+.f64 (-.f64 91893853320467/100000000000000 x) (*.f64 x (log.f64 x))) (*.f64 -1/2 (log.f64 x))) (/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x))","fresh",8.142910009768443],["(+.f64 (fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x))","fresh",10.405873458846674],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","fresh",10.331947538373884],["(+.f64 (-.f64 (fma.f64 (*.f64 (+.f64 x -1/2) (cbrt.f64 (log.f64 x))) (cbrt.f64 (pow.f64 (log.f64 x) 2)) 91893853320467/100000000000000) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.117557568379093],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x))))","fresh",8.20032895513728],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) 83333333333333/1000000000000000) x))","fresh",8.283535009768443],["(+.f64 (fma.f64 (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 x -1/2)) (pow.f64 (log.f64 x) 2/3) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",32.564350341895484],["(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z))))","fresh",8.529628759768443],["(+.f64 (fma.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2/3)) (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",32.66933444768293],["(+.f64 (-.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) 3) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","fresh",8.277132775831701]],"compiler":[[21,14],[32,22],[38,28],[32,23],[26,19],[24,18],[31,22],[30,21],[30,21],[30,21],[29,20],[37,26],[27,20]],"count":[[278,13]],"kept":[{"done":[0,0],"fresh":[11,9],"new":[266,4],"picked":[1,0]}],"min-error":[1.7619357127581112],"time":80.273193359375,"type":"prune"},{"accuracy":[2.510403319933212],"baseline":[8.014003759768443],"branch":[["x",2.510403319933212,3],["y",6.767910009768442,2],["z",2.7701718381956084,4],["(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 x 1/2) (log.f64 x)) x) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000) x))",2.938957548757899,3],["(+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000)",2.938957548757899,3],["(*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z)",2.938957548757899,3],["(+.f64 y 7936500793651/10000000000000000)",6.767910009768443,2],["(+.f64 y 7936500793651/10000000000000000)",6.767910009768443,2]],"compiler":[[4,3],[4,3],[4,3],[27,20],[14,11],[12,9],[6,5],[6,5],[719,461]],"count":[[26,3]],"inputs":[["(+.f64 (fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 x)) 6)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (*.f64 (cbrt.f64 (log.f64 x)) (+.f64 x -1/2)) (pow.f64 (log.f64 x) 2/3) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (cbrt.f64 (cbrt.f64 (log.f64 x))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2/3)) (*.f64 (pow.f64 (log.f64 x) 2/3) (+.f64 x -1/2))) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (+.f64 (+.f64 (-.f64 91893853320467/100000000000000 x) (*.f64 x (log.f64 x))) (*.f64 -1/2 (log.f64 x))) (/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z))))","(+.f64 (-.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000)) 3) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (*.f64 (+.f64 x -1/2) (cbrt.f64 (log.f64 x))) (cbrt.f64 (pow.f64 (log.f64 x) 2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (-.f64 (fma.f64 (*.f64 (+.f64 x -1/2) (cbrt.f64 (log.f64 x))) (cbrt.f64 (pow.f64 (log.f64 x) 2)) 91893853320467/100000000000000) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x) (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x))","(+.f64 (-.f64 (fma.f64 (cbrt.f64 (+.f64 x -1/2)) (*.f64 (cbrt.f64 (pow.f64 (+.f64 x -1/2) 2)) (log.f64 x)) 91893853320467/100000000000000) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (*.f64 y z) z 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) (cbrt.f64 z)) (cbrt.f64 (*.f64 z z)) 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (cbrt.f64 (log.f64 x)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 x) 2)) (+.f64 x -1/2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) (cbrt.f64 x))))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (sqrt.f64 83333333333333/1000000000000000) (sqrt.f64 83333333333333/1000000000000000) (*.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z)) x))","(+.f64 (fma.f64 (*.f64 (log.f64 x) (cbrt.f64 (+.f64 x -1/2))) (cbrt.f64 (pow.f64 (+.f64 x -1/2) 2)) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (cbrt.f64 (*.f64 (log.f64 x) (+.f64 x -1/2))) (pow.f64 (cbrt.f64 (*.f64 (log.f64 x) (+.f64 x -1/2))) 2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (/.f64 (-.f64 (*.f64 (*.f64 (log.f64 x) (+.f64 (pow.f64 x 3) -1/8)) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x)))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (-.f64 (pow.f64 x 3) (pow.f64 91893853320467/100000000000000 3)))) (*.f64 (+.f64 1/4 (*.f64 x (+.f64 x 1/2))) (fma.f64 91893853320467/100000000000000 91893853320467/100000000000000 (*.f64 x (+.f64 91893853320467/100000000000000 x))))) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z))))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (*.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) 2)) (/.f64 (cbrt.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000)) x)))","(+.f64 (-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 x 1/2) (log.f64 x)) x) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000) x))"]],"link":["."],"name":["Numeric.SpecFunctions:$slogFactorial from math-functions-0.1.5.2, B"],"oracle":[59.3406191186986],"outputs":[["(+.f64 (-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z))))","(+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))"]],"time":163.6298828125,"times":[["x",21.64892578125],["y",22.418212890625],["z",28.485107421875],["(+.f64 (+.f64 (-.f64 (*.f64 (-.f64 x 1/2) (log.f64 x)) x) 91893853320467/100000000000000) (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000) x))",23.202880859375],["(+.f64 (*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z) 83333333333333/1000000000000000)",8.98095703125],["(*.f64 (-.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) z) 13888888888889/5000000000000000) z)",21.10888671875],["(+.f64 y 7936500793651/10000000000000000)",12.1728515625],["(+.f64 y 7936500793651/10000000000000000)",12.397216796875]],"type":"regimes"},{"bstep":[[7.4316061656686256e+196,7.651876817374453e+201,16.052978515625],[4.622900153848933e+27,8.855550279360551e+30,11.73193359375]],"compiler":[[30,21],[25,18],[29,22],[4,3]],"method":["binary-search","binary-search"],"time":28.10302734375,"type":"bsearch"},{"compiler":[[79,53]],"inputs":[["(if (<=.f64 x 1000000000000000019884624838656) (+.f64 (-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (if (<=.f64 x 74316061656686255649618727961133021963168614247305311422127362820931322764829882379433852014745834996725935302121548805186351924287469539585158066751337425260970420941257041440149889420313174736896) (+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z)))) (+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 x 1000000000000000019884624838656) (+.f64 (-.f64 (fma.f64 (+.f64 x -1/2) (log.f64 x) 91893853320467/100000000000000) x) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (if (<=.f64 x 74316061656686255649618727961133021963168614247305311422127362820931322764829882379433852014745834996725935302121548805186351924287469539585158066751337425260970420941257041440149889420313174736896) (+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x) (*.f64 (/.f64 (+.f64 7936500793651/10000000000000000 y) x) (*.f64 z z)))) (+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (+.f64 (*.f64 83333333333333/1000000000000000 (/.f64 1 x)) (*.f64 -13888888888889/5000000000000000 (/.f64 z x))))))","(if (<=.f64 x 1000000000000000019884624838656) (+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 (fma.f64 (+.f64 y 7936500793651/10000000000000000) z -13888888888889/5000000000000000) z 83333333333333/1000000000000000) x)) (if (<=.f64 x 74316061656686255649618727961133021963168614247305311422127362820931322764829882379433852014745834996725935302121548805186351924287469539585158066751337425260970420941257041440149889420313174736896) (+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (+.f64 (*.f64 (+.f64 y 7936500793651/10000000000000000) (*.f64 z z)) (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000)) x)) (+.f64 (fma.f64 (log.f64 x) (+.f64 x -1/2) (-.f64 91893853320467/100000000000000 x)) (/.f64 (fma.f64 -13888888888889/5000000000000000 z 83333333333333/1000000000000000) x))))"]],"stop":[["fuel",1]],"time":34.1640625,"type":"simplify"},{"time":0.02783203125,"type":"soundness"},{"compiler":[[79,53]],"remove-preprocessing":[[]],"time":24.404052734375,"type":"end"}]