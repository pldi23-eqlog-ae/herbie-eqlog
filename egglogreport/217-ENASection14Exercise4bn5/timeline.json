[{"compiler":[[26,19]],"method":["search"],"sampling":[[1,0.25679552221004087,0.0,0.7432044777899591],[0,0.0,0.25679552221004087,0.7432044777899591]],"time":0.31298828125,"type":"analyze"},{"outcomes":[["body",512,"valid",58.45263671875,531],["body",1024,"valid",90.082763671875,549],["body",2048,"valid",4.98779296875,21],["body",256,"valid",418.33984375,7155]],"time":580.88818359375,"type":"sample"},{"compiler":[[11,8]],"inputs":[["0","1"],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","(-.f64 (pow.f64 (+.f64 eps x) 5) (pow.f64 eps 5))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","(-.f64 (pow.f64 (+.f64 eps x) 5) (pow.f64 eps 5))","(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 eps 5))"]],"symmetry":[[]],"time":57.52587890625,"type":"preprocess"},{"count":[[1,1]],"inputs":[["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))"]],"time":17.4951171875,"type":"simplify"},{"compiler":[[11,8]],"time":0.263916015625,"type":"eval"},{"alts":[["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","next",7.611930366391315]],"compiler":[[11,8],[11,8]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[7.611930366391315],"time":0.7470703125,"type":"prune"},{"compiler":[[25,13]],"locations":[["(pow.f64 (+.f64 x eps) 5)",0.024101269536884032,true],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))",1.1813415555080415,true]],"time":5.64501953125,"type":"localize"},{"count":[[2,48]],"series":[["(pow.f64 (+.f64 x eps) 5)","eps","-inf",0.198974609375],["(pow.f64 (+.f64 x eps) 5)","eps","inf",0.206787109375],["(pow.f64 (+.f64 x eps) 5)","eps","0",0.220947265625],["(pow.f64 (+.f64 x eps) 5)","x","-inf",0.257080078125],["(pow.f64 (+.f64 x eps) 5)","x","inf",0.369140625],["(pow.f64 (+.f64 x eps) 5)","x","0",0.22119140625],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","eps","-inf",1.130126953125],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","eps","inf",0.4560546875],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","eps","0",0.570068359375],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","x","-inf",0.702880859375],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","x","inf",0.555908203125],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","x","0",0.705810546875]],"time":5.823974609375,"type":"series"},{"count":[[2,63]],"inputs":[["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","(pow.f64 (+.f64 x eps) 5)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 0) (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) (*.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) (*.f64 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 x eps) 5) (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 x 5)) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (pow.f64 x 5)) (neg.f64 (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (+.f64 x eps) 5) 0) (pow.f64 x 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (pow.f64 (+.f64 x eps) 5)) (neg.f64 (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5)))) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 10)) (+.f64 (cbrt.f64 (pow.f64 x 10)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 x eps) x) 5)))) (-.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 5)) (cbrt.f64 (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2)) (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5))) (neg.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 5)) (cbrt.f64 (pow.f64 (+.f64 x eps) 10)) (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 5)) (neg.f64 (cbrt.f64 (pow.f64 x 10))) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (pow.f64 x 5))) (cbrt.f64 (pow.f64 x 10)) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (+.f64 x eps) 5)) (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 10)) (cbrt.f64 (pow.f64 (+.f64 x eps) 5)) (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (+.f64 x eps) 5) (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (pow.f64 x 5)) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x eps) 5) 1 (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 x eps) 5) 0) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 x eps) 5) (*.f64 (pow.f64 (+.f64 x eps) 5) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (pow.f64 (+.f64 x eps) 5)) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 x eps) 5) (*.f64 0 (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 5)) (cbrt.f64 (pow.f64 (+.f64 x eps) 10)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 10)) (cbrt.f64 (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x eps) 5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (+.f64 x eps) 5)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 x eps) 5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x eps) 5)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 5)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x eps) (+.f64 10 5)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x eps) 5) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 5)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 5)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x eps) (+.f64 10 5)))))))"]],"rules":[["egg-rr",19],["egg-rr",44]],"time":23.15380859375,"type":"rewrite"},{"count":[[111,119]],"inputs":[["(pow.f64 eps 5)","(+.f64 (pow.f64 eps 5) (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x))","(+.f64 (pow.f64 eps 5) (+.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2))))","(+.f64 (pow.f64 eps 5) (+.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)))))","(*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4))","(+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)))","(+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2))))","(+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (+.f64 (*.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) x) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)))))","(*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2)))) (*.f64 -4 (pow.f64 eps 2))) (pow.f64 x 3))) (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2)))) (*.f64 -4 (pow.f64 eps 2))) (pow.f64 x 3))) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2)))) (*.f64 -4 (pow.f64 eps 2))) (pow.f64 x 3))) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -4 (pow.f64 eps 4)) (*.f64 -1 (pow.f64 eps 4))) x)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)))))","(*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4)))","(+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (+.f64 (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4))) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2))))))","(+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4))) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2)))))))","(pow.f64 eps 5)","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5))","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (pow.f64 eps 5) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2))))))","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (+.f64 (pow.f64 eps 5) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2)))))))","(pow.f64 eps 5)","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -4 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))))))) (+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -4 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))))))) (+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (pow.f64 eps 5))))","(pow.f64 eps 5)","(+.f64 (pow.f64 eps 5) (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x))","(+.f64 (pow.f64 eps 5) (+.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2))))","(+.f64 (pow.f64 eps 5) (+.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)))))","(pow.f64 x 5)","(+.f64 (pow.f64 x 5) (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3))))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)))))","(pow.f64 x 5)","(+.f64 (pow.f64 x 5) (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2)))) (*.f64 -4 (pow.f64 eps 2))) (pow.f64 x 3)))))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2)))) (*.f64 -4 (pow.f64 eps 2))) (pow.f64 x 3))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)))))","(pow.f64 x 5)","(+.f64 (pow.f64 x 5) (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4))))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4)))))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (+.f64 (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4))) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2)))))))","(pow.f64 eps 5)","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5))","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (pow.f64 eps 5) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2))))))","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (+.f64 (pow.f64 eps 5) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2)))))))","(pow.f64 eps 5)","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -4 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))))))) (+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -4 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))))))) (+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (pow.f64 eps 5))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 eps 5)","(+.f64 (pow.f64 eps 5) (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x))","(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (+.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2))))","(+.f64 (pow.f64 eps 5) (fma.f64 (*.f64 5 (pow.f64 eps 4)) x (*.f64 (fma.f64 (*.f64 (*.f64 eps eps) 6) eps (*.f64 4 (pow.f64 eps 3))) (*.f64 x x))))","(+.f64 (pow.f64 eps 5) (+.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)))))","(+.f64 (fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5)) (fma.f64 (fma.f64 (*.f64 (*.f64 eps eps) 6) eps (*.f64 4 (pow.f64 eps 3))) (*.f64 x x) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3))))","(*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4))","(*.f64 (*.f64 5 eps) (pow.f64 x 4))","(+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)))","(fma.f64 (*.f64 5 eps) (pow.f64 x 4) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3)))","(+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2))))","(fma.f64 (*.f64 5 eps) (pow.f64 x 4) (fma.f64 (fma.f64 (*.f64 (*.f64 eps eps) 6) eps (*.f64 4 (pow.f64 eps 3))) (*.f64 x x) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3))))","(+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (+.f64 (*.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) x) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)))))","(fma.f64 (*.f64 5 eps) (pow.f64 x 4) (fma.f64 (*.f64 5 (pow.f64 eps 4)) x (fma.f64 (fma.f64 (*.f64 (*.f64 eps eps) 6) eps (*.f64 4 (pow.f64 eps 3))) (*.f64 x x) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3)))))","(*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4))","(*.f64 (*.f64 5 eps) (pow.f64 x 4))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2)))) (*.f64 -4 (pow.f64 eps 2))) (pow.f64 x 3))) (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)))","(fma.f64 (*.f64 5 eps) (pow.f64 x 4) (*.f64 (neg.f64 (pow.f64 x 3)) (fma.f64 (*.f64 eps eps) -4 (neg.f64 (*.f64 (*.f64 eps eps) 6)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2)))) (*.f64 -4 (pow.f64 eps 2))) (pow.f64 x 3))) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2))))","(fma.f64 (pow.f64 x 4) (*.f64 5 eps) (fma.f64 (fma.f64 (*.f64 (*.f64 eps eps) 6) eps (*.f64 4 (pow.f64 eps 3))) (*.f64 x x) (*.f64 (neg.f64 (pow.f64 x 3)) (fma.f64 (*.f64 eps eps) -4 (neg.f64 (*.f64 (*.f64 eps eps) 6))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2)))) (*.f64 -4 (pow.f64 eps 2))) (pow.f64 x 3))) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -4 (pow.f64 eps 4)) (*.f64 -1 (pow.f64 eps 4))) x)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)))))","(fma.f64 (neg.f64 (fma.f64 (*.f64 eps eps) -4 (neg.f64 (*.f64 (*.f64 eps eps) 6)))) (pow.f64 x 3) (fma.f64 (pow.f64 x 4) (*.f64 5 eps) (fma.f64 (fma.f64 (*.f64 (*.f64 eps eps) 6) eps (*.f64 4 (pow.f64 eps 3))) (*.f64 x x) (*.f64 (neg.f64 x) (*.f64 (pow.f64 eps 4) -5)))))","(*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4)))","(*.f64 eps (*.f64 5 (pow.f64 x 4)))","(+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4))))","(fma.f64 (*.f64 eps eps) (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps (*.f64 5 (pow.f64 x 4))))","(+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (+.f64 (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4))) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2))))))","(fma.f64 (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps eps) (fma.f64 eps (*.f64 5 (pow.f64 x 4)) (*.f64 (pow.f64 eps 3) (*.f64 (*.f64 x x) 10))))","(+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4))) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2)))))))","(fma.f64 (*.f64 eps eps) (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (fma.f64 (*.f64 5 x) (pow.f64 eps 4) (fma.f64 eps (*.f64 5 (pow.f64 x 4)) (*.f64 (pow.f64 eps 3) (*.f64 (*.f64 x x) 10)))))","(pow.f64 eps 5)","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5))","(fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (pow.f64 eps 5) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2))))))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (fma.f64 (*.f64 (*.f64 x x) 10) (pow.f64 eps 3) (pow.f64 eps 5)))","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (+.f64 (pow.f64 eps 5) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2)))))))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (fma.f64 (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps eps) (fma.f64 (*.f64 (*.f64 x x) 10) (pow.f64 eps 3) (pow.f64 eps 5))))","(pow.f64 eps 5)","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5))","(fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -4 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))))))) (+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5)))","(fma.f64 (neg.f64 (pow.f64 eps 3)) (fma.f64 -4 (*.f64 x x) (neg.f64 (*.f64 (*.f64 x x) 6))) (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -4 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))))))) (+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (pow.f64 eps 5))))","(fma.f64 (neg.f64 (pow.f64 eps 3)) (fma.f64 -4 (*.f64 x x) (neg.f64 (*.f64 (*.f64 x x) 6))) (fma.f64 (*.f64 5 x) (pow.f64 eps 4) (fma.f64 (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps eps) (pow.f64 eps 5))))","(pow.f64 eps 5)","(+.f64 (pow.f64 eps 5) (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x))","(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (+.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2))))","(+.f64 (pow.f64 eps 5) (fma.f64 (*.f64 5 (pow.f64 eps 4)) x (*.f64 (fma.f64 (*.f64 (*.f64 eps eps) 6) eps (*.f64 4 (pow.f64 eps 3))) (*.f64 x x))))","(+.f64 (pow.f64 eps 5) (+.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) x) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)))))","(+.f64 (fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5)) (fma.f64 (fma.f64 (*.f64 (*.f64 eps eps) 6) eps (*.f64 4 (pow.f64 eps 3))) (*.f64 x x) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3))))","(pow.f64 x 5)","(+.f64 (pow.f64 x 5) (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)))","(fma.f64 (pow.f64 x 4) (*.f64 5 eps) (pow.f64 x 5))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3))))","(+.f64 (pow.f64 x 5) (fma.f64 (*.f64 5 eps) (pow.f64 x 4) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3))))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (+.f64 (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (pow.f64 x 3)))))","(+.f64 (pow.f64 x 5) (fma.f64 (*.f64 5 eps) (pow.f64 x 4) (fma.f64 (fma.f64 (*.f64 (*.f64 eps eps) 6) eps (*.f64 4 (pow.f64 eps 3))) (*.f64 x x) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3)))))","(pow.f64 x 5)","(+.f64 (pow.f64 x 5) (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)))","(fma.f64 (pow.f64 x 4) (*.f64 5 eps) (pow.f64 x 5))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2)))) (*.f64 -4 (pow.f64 eps 2))) (pow.f64 x 3)))))","(-.f64 (fma.f64 (pow.f64 x 4) (*.f64 5 eps) (pow.f64 x 5)) (*.f64 (fma.f64 (*.f64 eps eps) -4 (neg.f64 (*.f64 (*.f64 eps eps) 6))) (pow.f64 x 3)))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (+.f64 (*.f64 4 eps) eps) (pow.f64 x 4)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2)))) (*.f64 -4 (pow.f64 eps 2))) (pow.f64 x 3))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (pow.f64 x 2)))))","(+.f64 (pow.f64 x 5) (fma.f64 (pow.f64 x 4) (*.f64 5 eps) (fma.f64 (fma.f64 (*.f64 (*.f64 eps eps) 6) eps (*.f64 4 (pow.f64 eps 3))) (*.f64 x x) (*.f64 (neg.f64 (pow.f64 x 3)) (fma.f64 (*.f64 eps eps) -4 (neg.f64 (*.f64 (*.f64 eps eps) 6)))))))","(pow.f64 x 5)","(+.f64 (pow.f64 x 5) (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4))))","(fma.f64 eps (*.f64 5 (pow.f64 x 4)) (pow.f64 x 5))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4)))))","(+.f64 (pow.f64 x 5) (fma.f64 (*.f64 eps eps) (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps (*.f64 5 (pow.f64 x 4)))))","(+.f64 (pow.f64 x 5) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (+.f64 (*.f64 eps (+.f64 (*.f64 4 (pow.f64 x 4)) (pow.f64 x 4))) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2)))))))","(+.f64 (pow.f64 x 5) (fma.f64 (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps eps) (fma.f64 eps (*.f64 5 (pow.f64 x 4)) (*.f64 (pow.f64 eps 3) (*.f64 (*.f64 x x) 10)))))","(pow.f64 eps 5)","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5))","(fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (pow.f64 eps 5) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2))))))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (fma.f64 (*.f64 (*.f64 x x) 10) (pow.f64 eps 3) (pow.f64 eps 5)))","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (+.f64 (pow.f64 eps 5) (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 8 (pow.f64 x 2)))))))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (fma.f64 (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps eps) (fma.f64 (*.f64 (*.f64 x x) 10) (pow.f64 eps 3) (pow.f64 eps 5))))","(pow.f64 eps 5)","(+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5))","(fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -4 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))))))) (+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (pow.f64 eps 5)))","(fma.f64 (neg.f64 (pow.f64 eps 3)) (fma.f64 -4 (*.f64 x x) (neg.f64 (*.f64 (*.f64 x x) 6))) (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 eps 3) (+.f64 (*.f64 -4 (pow.f64 x 2)) (*.f64 -1 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))))))) (+.f64 (*.f64 (pow.f64 eps 4) (+.f64 (*.f64 4 x) x)) (+.f64 (*.f64 (pow.f64 eps 2) (+.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 4 (pow.f64 x 2))) x))) (pow.f64 eps 5))))","(fma.f64 (neg.f64 (pow.f64 eps 3)) (fma.f64 -4 (*.f64 x x) (neg.f64 (*.f64 (*.f64 x x) 6))) (fma.f64 (*.f64 5 x) (pow.f64 eps 4) (fma.f64 (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps eps) (pow.f64 eps 5))))"]],"time":166.051025390625,"type":"simplify"},{"compiler":[[2759,1894]],"time":33.315185546875,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (neg.f64 (pow.f64 x 5))) (cbrt.f64 (pow.f64 x 10)) (pow.f64 (+.f64 x eps) 5))","fresh",12.253504724625712],["(fma.f64 (*.f64 eps eps) (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps (*.f64 5 (pow.f64 x 4))))","fresh",11.931234560836607],["(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)","next",7.748924074705633],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","done",7.611930366391315],["(fma.f64 (*.f64 5 eps) (pow.f64 x 4) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3)))","fresh",11.946859560836609],["(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","fresh",8.465328837491017]],"compiler":[[17,13],[25,17],[14,11],[11,8],[18,13],[12,9],[17,13],[25,17],[14,11],[18,13],[12,9]],"count":[[120,6]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[119,5],"picked":[1,1]}],"min-error":[0.02496998993272953],"time":33.557861328125,"type":"prune"},{"compiler":[[48,28]],"locations":[["(pow.f64 (+.f64 x eps) 5)",0.024101269536884032,false],["(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)",0.16082001953688402,true],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))",1.1813415555080415,false],["(cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))",17.494951554489667,true]],"time":10.55712890625,"type":"localize"},{"count":[[2,8]],"series":[["(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)","eps","-inf",1.66796875],["(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)","eps","inf",2.824951171875],["(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)","eps","0",1.68603515625],["(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)","x","-inf",3.52294921875],["(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)","x","inf",5.0390625],["(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)","x","0",2.845947265625],["(cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))","eps","-inf",1.27685546875],["(cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))","eps","inf",0.989990234375],["(cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))","eps","0",0.673095703125],["(cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))","x","-inf",1.133056640625],["(cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))","x","inf",1.1279296875],["(cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))","x","0",1.48388671875]],"time":24.515869140625,"type":"series"},{"count":[[2,69]],"inputs":[["(cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))","(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 0) (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (*.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))) (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (*.f64 0 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (cbrt.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))) (cbrt.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3)) (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (+.f64 2 1/3))) (cbrt.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (cbrt.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 0) (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) (*.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) (*.f64 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 x eps) 5) (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (pow.f64 x 5)) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 (pow.f64 x 5)) (neg.f64 (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (+.f64 x eps) 5) 0) (pow.f64 x 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3)) (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3)) (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3)) (cbrt.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (pow.f64 (+.f64 x eps) 5)) (neg.f64 (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 10)) (+.f64 (cbrt.f64 (pow.f64 x 10)) (cbrt.f64 (pow.f64 (*.f64 (+.f64 x eps) x) 5)))) (-.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 5)) (cbrt.f64 (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (+.f64 2 1/3)) (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3)) (pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (+.f64 2 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3) (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5))) (neg.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) (+.f64 2/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) (+.f64 1/3 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 5)) (cbrt.f64 (pow.f64 (+.f64 x eps) 10)) (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x eps) 10)) (cbrt.f64 (pow.f64 (+.f64 x eps) 5)) (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 (+.f64 x eps) 5)) (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (pow.f64 x 5))) (cbrt.f64 (pow.f64 x 10)) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 5)) (neg.f64 (cbrt.f64 (pow.f64 x 10))) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (+.f64 x eps) 5) (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x eps) 5) 1 (neg.f64 (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 x 5) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (pow.f64 x 5)) (pow.f64 (+.f64 x eps) 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)))))))"]],"rules":[["egg-rr",49],["egg-rr",20]],"time":25.797119140625,"type":"rewrite"},{"count":[[77,85]],"inputs":[["(pow.f64 (pow.f64 eps 5) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/9) (*.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) x))) (pow.f64 (pow.f64 eps 5) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/9) (*.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) x))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3))) (pow.f64 (pow.f64 eps 5) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/9) (*.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3) (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2))))) (pow.f64 (/.f64 1 (pow.f64 eps 25)) 1/9))) (*.f64 1/27 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 3) (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3))))) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3))) (pow.f64 (pow.f64 eps 5) 1/3))))","(*.f64 (pow.f64 eps 5) (pow.f64 1 1/3))","(+.f64 (*.f64 (pow.f64 eps 5) (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9)))) x))","(+.f64 (*.f64 (pow.f64 eps 5) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9)))) x) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 20)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2)))) (pow.f64 (*.f64 (pow.f64 eps 5) 1) 1/3)) (*.f64 2/9 (*.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4)))) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9))))) (pow.f64 x 2))))","(+.f64 (*.f64 (pow.f64 eps 5) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9)))) x) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 20)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2)))) (pow.f64 (*.f64 (pow.f64 eps 5) 1) 1/3)) (*.f64 2/9 (*.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4)))) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4)))) (pow.f64 (/.f64 1 (pow.f64 eps 25)) 1/9))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 3))))))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 20)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2))))) (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 eps 5) 1) 1/3) (+.f64 (*.f64 2/9 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4)))) (pow.f64 (/.f64 1 (pow.f64 eps 40)) 1/9))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3) (-.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2))))) (pow.f64 (/.f64 1 (pow.f64 eps 25)) 1/9))) (*.f64 1/27 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 3) (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3))))))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 25)) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2)))) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))))))))) (pow.f64 x 3)))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 eps 5) 1/3)","(cbrt.f64 (pow.f64 eps 5))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/9) (*.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) x))) (pow.f64 (pow.f64 eps 5) 1/3))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 eps -10) 1/9) (*.f64 5 (pow.f64 eps 4))) x) (cbrt.f64 (pow.f64 eps 5)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/9) (*.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) x))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3))) (pow.f64 (pow.f64 eps 5) 1/3)))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 eps -10) 1/9) (*.f64 5 (pow.f64 eps 4))) x) (*.f64 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (*.f64 (*.f64 x x) (cbrt.f64 (pow.f64 eps -10)))))) (cbrt.f64 (pow.f64 eps 5)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/9) (*.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3) (*.f64 (-.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2))))) (pow.f64 (/.f64 1 (pow.f64 eps 25)) 1/9))) (*.f64 1/27 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 3) (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3))))) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (pow.f64 x 2)) (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3))) (pow.f64 (pow.f64 eps 5) 1/3))))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 eps -10) 1/9) (*.f64 5 (pow.f64 eps 4))) x) (*.f64 (cbrt.f64 (pow.f64 eps -10)) (*.f64 (-.f64 (*.f64 (*.f64 eps eps) 10) (fma.f64 2/3 (*.f64 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (*.f64 (*.f64 5 (pow.f64 eps 4)) (pow.f64 (pow.f64 eps -25) 1/9))) (*.f64 (*.f64 1/27 (cbrt.f64 (pow.f64 eps -10))) (pow.f64 (*.f64 5 (pow.f64 eps 4)) 3)))) (pow.f64 x 3))))) (fma.f64 1/3 (*.f64 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (*.f64 (*.f64 x x) (cbrt.f64 (pow.f64 eps -10)))) (cbrt.f64 (pow.f64 eps 5))))","(*.f64 (pow.f64 eps 5) (pow.f64 1 1/3))","(pow.f64 eps 5)","(+.f64 (*.f64 (pow.f64 eps 5) (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9)))) x))","(fma.f64 x (*.f64 (*.f64 (pow.f64 (pow.f64 eps 20) 1/9) (*.f64 5 (pow.f64 eps 4))) (+.f64 2/3 1/3)) (pow.f64 eps 5))","(+.f64 (*.f64 (pow.f64 eps 5) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9)))) x) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 20)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2)))) (pow.f64 (*.f64 (pow.f64 eps 5) 1) 1/3)) (*.f64 2/9 (*.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4)))) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9))))) (pow.f64 x 2))))","(+.f64 (pow.f64 eps 5) (fma.f64 (fma.f64 1/3 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (fma.f64 (fma.f64 2/3 (*.f64 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (cbrt.f64 (pow.f64 eps -5))) (*.f64 (*.f64 1/9 (pow.f64 (pow.f64 eps -20) 1/9)) (*.f64 (*.f64 5 5) (pow.f64 eps 8)))) (cbrt.f64 (pow.f64 eps 5)) (*.f64 (*.f64 2/9 (*.f64 (*.f64 5 5) (pow.f64 eps 8))) (pow.f64 (pow.f64 eps -5) 1/9)))) (*.f64 x x) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 eps 20) 1/9) (*.f64 5 (pow.f64 eps 4))) (+.f64 2/3 1/3)) x)))","(+.f64 (*.f64 (pow.f64 eps 5) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (pow.f64 (*.f64 (pow.f64 eps 20) 1) 1/9)))) x) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 20)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2)))) (pow.f64 (*.f64 (pow.f64 eps 5) 1) 1/3)) (*.f64 2/9 (*.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4)))) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4)))) (pow.f64 (/.f64 1 (pow.f64 eps 25)) 1/9))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 3))))))) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 20)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2))))) (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 eps 5) 1) 1/3) (+.f64 (*.f64 2/9 (*.f64 (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 2) (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9)))) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4)))) (pow.f64 (/.f64 1 (pow.f64 eps 40)) 1/9))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/3) (-.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 8 (pow.f64 eps 2))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2))))) (pow.f64 (/.f64 1 (pow.f64 eps 25)) 1/9))) (*.f64 1/27 (*.f64 (pow.f64 (+.f64 (*.f64 4 (pow.f64 eps 4)) (pow.f64 eps 4)) 3) (pow.f64 (/.f64 1 (pow.f64 eps 10)) 1/3))))))))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 25)) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 eps 2)) (*.f64 4 (pow.f64 eps 2))) eps) (*.f64 4 (pow.f64 eps 3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 eps 5)) 1/9) (pow.f64 (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))) 2)))) (+.f64 (pow.f64 eps 4) (*.f64 4 (pow.f64 eps 4))))))))) (pow.f64 x 3)))))","(+.f64 (fma.f64 x (*.f64 (*.f64 (pow.f64 (pow.f64 eps 20) 1/9) (*.f64 5 (pow.f64 eps 4))) (+.f64 2/3 1/3)) (pow.f64 eps 5)) (fma.f64 (fma.f64 1/3 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (fma.f64 (fma.f64 2/3 (*.f64 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (cbrt.f64 (pow.f64 eps -5))) (*.f64 (*.f64 1/9 (pow.f64 (pow.f64 eps -20) 1/9)) (*.f64 (*.f64 5 5) (pow.f64 eps 8)))) (cbrt.f64 (pow.f64 eps 5)) (*.f64 (*.f64 2/9 (*.f64 (*.f64 5 5) (pow.f64 eps 8))) (pow.f64 (pow.f64 eps -5) 1/9)))) (*.f64 x x) (*.f64 (+.f64 (*.f64 1/3 (+.f64 (-.f64 (*.f64 (*.f64 eps eps) 10) (fma.f64 2/3 (*.f64 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (*.f64 (*.f64 5 (pow.f64 eps 4)) (pow.f64 (pow.f64 eps -25) 1/9))) (*.f64 (*.f64 1/27 (cbrt.f64 (pow.f64 eps -10))) (pow.f64 (*.f64 5 (pow.f64 eps 4)) 3)))) (*.f64 (*.f64 5 (pow.f64 eps 4)) (*.f64 (fma.f64 2/3 (*.f64 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (cbrt.f64 (pow.f64 eps -5))) (*.f64 (*.f64 1/9 (pow.f64 (pow.f64 eps -20) 1/9)) (*.f64 (*.f64 5 5) (pow.f64 eps 8)))) (pow.f64 (pow.f64 eps -10) 1/9))))) (fma.f64 (cbrt.f64 (pow.f64 eps 5)) (fma.f64 2/9 (*.f64 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (*.f64 (*.f64 5 (pow.f64 eps 4)) (pow.f64 (pow.f64 eps -40) 1/9))) (*.f64 (*.f64 2/3 (cbrt.f64 (pow.f64 eps -5))) (-.f64 (*.f64 (*.f64 eps eps) 10) (fma.f64 2/3 (*.f64 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (*.f64 (*.f64 5 (pow.f64 eps 4)) (pow.f64 (pow.f64 eps -25) 1/9))) (*.f64 (*.f64 1/27 (cbrt.f64 (pow.f64 eps -10))) (pow.f64 (*.f64 5 (pow.f64 eps 4)) 3)))))) (*.f64 2/9 (*.f64 (fma.f64 eps (*.f64 (*.f64 eps eps) 6) (fma.f64 4 (pow.f64 eps 3) (*.f64 -1/3 (*.f64 (*.f64 (*.f64 5 5) (pow.f64 eps 8)) (pow.f64 (pow.f64 eps -5) 1/9))))) (*.f64 (*.f64 5 (pow.f64 eps 4)) (pow.f64 (pow.f64 eps -25) 1/9)))))) (pow.f64 x 3))))"]],"time":50.0078125,"type":"simplify"},{"compiler":[[6270,4660]],"time":78.733154296875,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (neg.f64 (pow.f64 x 5))) (cbrt.f64 (pow.f64 x 10)) (pow.f64 (+.f64 x eps) 5))","fresh",12.253504724625712],["(fma.f64 (*.f64 eps eps) (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps (*.f64 5 (pow.f64 x 4))))","fresh",11.931234560836607],["(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)","done",7.748924074705633],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","done",7.611930366391315],["(fma.f64 (*.f64 5 eps) (pow.f64 x 4) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3)))","fresh",11.946859560836609],["(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","next",8.465328837491017]],"compiler":[[17,13],[25,17],[14,11],[11,8],[18,13],[12,9],[17,13],[25,17],[18,13],[12,9]],"count":[[210,6]],"kept":[{"done":[1,1],"fresh":[4,4],"new":[204,0],"picked":[1,1]}],"min-error":[0.02496998993272953],"time":65.072998046875,"type":"prune"},{"compiler":[[27,19]],"locations":[["(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))",0.01171875,true],["(*.f64 5 (pow.f64 eps 4))",0.08984375,true]],"time":6.722900390625,"type":"localize"},{"count":[[2,24]],"series":[["(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","x","-inf",0.52880859375],["(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","x","inf",0.279052734375],["(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","x","0",2.4130859375],["(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","eps","-inf",0.419921875],["(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","eps","inf",0.39501953125],["(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","eps","0",0.34912109375],["(*.f64 5 (pow.f64 eps 4))","eps","-inf",0.18994140625],["(*.f64 5 (pow.f64 eps 4))","eps","inf",0.360107421875],["(*.f64 5 (pow.f64 eps 4))","eps","0",0.489990234375]],"time":5.5400390625,"type":"series"},{"count":[[2,89]],"inputs":[["(*.f64 5 (pow.f64 eps 4))","(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 5 (pow.f64 eps 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 5 (pow.f64 eps 4)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 -5 (pow.f64 eps 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 5) (neg.f64 (*.f64 eps eps))) (*.f64 (sqrt.f64 5) (neg.f64 (*.f64 eps eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 5)) (neg.f64 (*.f64 eps eps))) (*.f64 (neg.f64 (sqrt.f64 5)) (neg.f64 (*.f64 eps eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 5)) (*.f64 eps eps)) (*.f64 (neg.f64 (sqrt.f64 5)) (*.f64 eps eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 5) (*.f64 eps eps)) (*.f64 (sqrt.f64 5) (*.f64 eps eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sqrt.f64 5) (*.f64 eps eps)) -1) (*.f64 (*.f64 (sqrt.f64 5) (*.f64 eps eps)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 eps eps)) (sqrt.f64 5)) (*.f64 (neg.f64 (*.f64 eps eps)) (sqrt.f64 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 eps eps)) (neg.f64 (sqrt.f64 5))) (*.f64 (neg.f64 (*.f64 eps eps)) (neg.f64 (sqrt.f64 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 eps eps) (neg.f64 (sqrt.f64 5))) (*.f64 (*.f64 eps eps) (neg.f64 (sqrt.f64 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 5 (pow.f64 eps 4))) (cbrt.f64 (*.f64 (pow.f64 eps 8) 25)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 eps 8) 25)) (cbrt.f64 (*.f64 5 (pow.f64 eps 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 5 (cbrt.f64 (pow.f64 eps 4))) (cbrt.f64 (pow.f64 eps 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 eps 4) (cbrt.f64 5)) (cbrt.f64 25))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 eps 4)) (*.f64 (cbrt.f64 (pow.f64 eps 8)) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 eps 8)) 5) (cbrt.f64 (pow.f64 eps 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 eps 8)) (*.f64 5 (cbrt.f64 (pow.f64 eps 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 25) (*.f64 (pow.f64 eps 4) (cbrt.f64 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (sqrt.f64 5) (*.f64 eps eps))) (neg.f64 (*.f64 (sqrt.f64 5) (*.f64 eps eps))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -5 (pow.f64 eps 4))) (neg.f64 (cbrt.f64 (*.f64 (pow.f64 eps 8) 25))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 5 (*.f64 eps eps)) (*.f64 eps eps))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 eps 4) (sqrt.f64 5)) (sqrt.f64 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 eps eps) (*.f64 5 (*.f64 eps eps)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 5) (*.f64 (pow.f64 eps 4) (sqrt.f64 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 5) (*.f64 (cbrt.f64 25) (pow.f64 eps 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 25) (pow.f64 eps 4)) (cbrt.f64 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 5 (pow.f64 eps 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 eps 4) 5)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 -5 (pow.f64 eps 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 5 (pow.f64 eps 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 5 (pow.f64 eps 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -5 (pow.f64 eps 4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 5 (pow.f64 eps 4)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 eps 4) (/.f64 1 5))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 5 (pow.f64 eps 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -5 (pow.f64 eps 4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 125 (pow.f64 (*.f64 eps eps) 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 5 (pow.f64 eps 4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 5 (pow.f64 eps 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 5) (*.f64 eps eps)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 (sqrt.f64 5)) (neg.f64 (*.f64 eps eps))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 (*.f64 eps eps)) (neg.f64 (sqrt.f64 5))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (sqrt.f64 5) (*.f64 eps eps)) -1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (*.f64 (sqrt.f64 5) (*.f64 eps eps))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 5) (neg.f64 (*.f64 eps eps))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 (*.f64 eps eps)) (sqrt.f64 5)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (neg.f64 (sqrt.f64 5)) (*.f64 eps eps)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 eps eps) (neg.f64 (sqrt.f64 5))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 -5 (pow.f64 eps 4)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 125 (pow.f64 (*.f64 eps eps) 6)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 eps 4) (*.f64 5 x)) (pow.f64 eps 5))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 eps 5) (*.f64 (pow.f64 eps 4) (*.f64 5 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (pow.f64 eps 4) (*.f64 5 x)) (neg.f64 (pow.f64 eps 5)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 eps 5) (*.f64 -5 (*.f64 (pow.f64 eps 4) x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))) (pow.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)) 2/3) (cbrt.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)))) (neg.f64 (pow.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 eps 10)) (-.f64 (cbrt.f64 (*.f64 (pow.f64 eps 8) (pow.f64 (*.f64 5 x) 2))) (*.f64 (cbrt.f64 (pow.f64 eps 5)) (cbrt.f64 (*.f64 (pow.f64 eps 4) (*.f64 5 x)))))) (+.f64 (cbrt.f64 (pow.f64 eps 5)) (cbrt.f64 (*.f64 (pow.f64 eps 4) (*.f64 5 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 (pow.f64 eps 8) (pow.f64 (*.f64 5 x) 2))) (-.f64 (cbrt.f64 (pow.f64 eps 10)) (*.f64 (cbrt.f64 (*.f64 (pow.f64 eps 4) (*.f64 5 x))) (cbrt.f64 (pow.f64 eps 5))))) (+.f64 (cbrt.f64 (*.f64 (pow.f64 eps 4) (*.f64 5 x))) (cbrt.f64 (pow.f64 eps 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)) 2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 eps 5)) (cbrt.f64 (pow.f64 eps 10)) (*.f64 (pow.f64 eps 4) (*.f64 5 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 eps 10)) (cbrt.f64 (pow.f64 eps 5)) (*.f64 (pow.f64 eps 4) (*.f64 5 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 5 (pow.f64 eps 4))) (*.f64 (cbrt.f64 (*.f64 (pow.f64 eps 8) 25)) x) (pow.f64 eps 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 eps 4) (*.f64 5 x))) (cbrt.f64 (*.f64 (pow.f64 eps 8) (pow.f64 (*.f64 5 x) 2))) (pow.f64 eps 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 5 (pow.f64 eps 4)) (pow.f64 eps 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 eps 4) (*.f64 5 x) (pow.f64 eps 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 5 (pow.f64 eps 4)) (cbrt.f64 x)) (pow.f64 x 2/3) (pow.f64 eps 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 5 (*.f64 (pow.f64 eps 4) x) (pow.f64 eps 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (pow.f64 eps 5)) (*.f64 (pow.f64 eps 4) (*.f64 5 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 eps 4) (*.f64 5 x)) 1 (pow.f64 eps 5))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 eps 5) (*.f64 (pow.f64 eps 4) (*.f64 5 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 eps 5) 1 (*.f64 (pow.f64 eps 4) (*.f64 5 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (pow.f64 eps 4) (*.f64 5 x)) (pow.f64 eps 5))))))"]],"rules":[["egg-rr",38],["egg-rr",51]],"time":43.68408203125,"type":"rewrite"},{"count":[[113,93]],"inputs":[["(*.f64 5 (*.f64 (pow.f64 eps 4) x))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(pow.f64 eps 5)","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(pow.f64 eps 5)","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(pow.f64 eps 5)","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(*.f64 5 (*.f64 (pow.f64 eps 4) x))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(*.f64 5 (*.f64 (pow.f64 eps 4) x))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 5 (*.f64 (pow.f64 eps 4) x))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(pow.f64 eps 5)","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(pow.f64 eps 5)","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(pow.f64 eps 5)","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(*.f64 5 (*.f64 (pow.f64 eps 4) x))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(*.f64 5 (*.f64 (pow.f64 eps 4) x))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))","(+.f64 (pow.f64 eps 5) (*.f64 5 (*.f64 (pow.f64 eps 4) x)))","(fma.f64 (*.f64 5 x) (pow.f64 eps 4) (pow.f64 eps 5))"]],"time":78.18798828125,"type":"simplify"},{"compiler":[[1376,979]],"time":19.77197265625,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (neg.f64 (pow.f64 x 5))) (cbrt.f64 (pow.f64 x 10)) (pow.f64 (+.f64 x eps) 5))","fresh",12.253504724625712],["(fma.f64 (*.f64 eps eps) (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps (*.f64 5 (pow.f64 x 4))))","next",11.931234560836607],["(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)","done",7.748924074705633],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","done",7.611930366391315],["(fma.f64 (*.f64 5 eps) (pow.f64 x 4) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3)))","fresh",11.946859560836609],["(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","done",8.465328837491017]],"compiler":[[17,13],[25,17],[14,11],[11,8],[18,13],[12,9],[17,13],[25,17],[18,13]],"count":[[99,6]],"kept":[{"done":[2,2],"fresh":[3,3],"new":[93,0],"picked":[1,1]}],"min-error":[0.02496998993272953],"time":23.712890625,"type":"prune"},{"compiler":[[79,46]],"locations":[["(*.f64 5 (pow.f64 x 4))",0.06478500976844201,true],["(*.f64 (*.f64 (*.f64 x x) 6) x)",0.08984375,true],["(fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x))",0.11166000976844201,true],["(*.f64 (*.f64 x x) 6)",0.17253876953688405,true]],"time":17.22509765625,"type":"localize"},{"count":[[4,36]],"series":[["(*.f64 5 (pow.f64 x 4))","x","-inf",0.159912109375],["(*.f64 5 (pow.f64 x 4))","x","inf",0.294921875],["(*.f64 5 (pow.f64 x 4))","x","0",0.35595703125],["(*.f64 (*.f64 (*.f64 x x) 6) x)","x","-inf",0.14306640625],["(*.f64 (*.f64 (*.f64 x x) 6) x)","x","inf",0.144775390625],["(*.f64 (*.f64 (*.f64 x x) 6) x)","x","0",0.1630859375],["(fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x))","x","-inf",0.68603515625],["(fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x))","x","inf",0.57080078125],["(fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x))","x","0",0.47314453125],["(*.f64 (*.f64 x x) 6)","x","-inf",0.156005859375],["(*.f64 (*.f64 x x) 6)","x","inf",0.324951171875],["(*.f64 (*.f64 x x) 6)","x","0",0.3798828125]],"time":3.986083984375,"type":"series"},{"count":[[4,168]],"inputs":[["(*.f64 (*.f64 x x) 6)","(fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x))","(*.f64 (*.f64 (*.f64 x x) 6) x)","(*.f64 5 (pow.f64 x 4))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 x x) 6) 0) (*.f64 (*.f64 x x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) 6) (*.f64 (*.f64 (*.f64 x x) 6) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) 3) (*.f64 (*.f64 x x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 x x) 6)) (*.f64 (*.f64 x x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x x) 6) (*.f64 0 (*.f64 (*.f64 x x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (*.f64 x x)) (*.f64 3 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 6 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (sqrt.f64 6)) (*.f64 x (sqrt.f64 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x (sqrt.f64 6)) 1) (*.f64 (*.f64 x (sqrt.f64 6)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x (sqrt.f64 6)) -1) (*.f64 (*.f64 x (sqrt.f64 6)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 x x) 6)) (*.f64 (pow.f64 x 4/3) (cbrt.f64 36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 4/3) (cbrt.f64 36)) (cbrt.f64 (*.f64 (*.f64 x x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 x) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 (pow.f64 x 2/3)) (pow.f64 x 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x x) (cbrt.f64 6)) (cbrt.f64 36))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x x) (sqrt.f64 6)) (sqrt.f64 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (pow.f64 x 4/3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (*.f64 6 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 6) (*.f64 (cbrt.f64 36) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 6) (*.f64 (*.f64 x x) (sqrt.f64 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 2/3) (*.f64 6 x)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 4/3) (*.f64 6 (pow.f64 x 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 36) (*.f64 x x)) (cbrt.f64 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 4/3) 6) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 36) (*.f64 (*.f64 x x) (cbrt.f64 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 6) (neg.f64 x)) (*.f64 (sqrt.f64 6) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 6)) (neg.f64 x)) (*.f64 (neg.f64 (sqrt.f64 6)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 6)) x) (*.f64 (neg.f64 (sqrt.f64 6)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 x) (sqrt.f64 6)) (*.f64 (neg.f64 x) (sqrt.f64 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 x) (neg.f64 (sqrt.f64 6))) (*.f64 (neg.f64 x) (neg.f64 (sqrt.f64 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (neg.f64 (sqrt.f64 6))) (*.f64 x (neg.f64 (sqrt.f64 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (*.f64 x (sqrt.f64 6))) (*.f64 -1 (*.f64 x (sqrt.f64 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) 6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 6 (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (*.f64 x x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 x x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x x) 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (*.f64 x x) 6)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x x) 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 216 (pow.f64 x 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 x x) 6)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x x) 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (sqrt.f64 6)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (*.f64 x x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 216 (pow.f64 x 6)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 x 3) 10) 0) (*.f64 (pow.f64 x 3) 10))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 3) 10) (*.f64 (*.f64 (pow.f64 x 3) 10) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 x 3) 10)) (*.f64 (pow.f64 x 3) 10))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 3) 10) (*.f64 0 (*.f64 (pow.f64 x 3) 10)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 (pow.f64 x 3)) (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 3) 6) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 3) 10)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (*.f64 (*.f64 x x) 6) (*.f64 4 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (*.f64 4 (*.f64 x x)) (*.f64 (*.f64 x x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 x 3) 10)) (pow.f64 (*.f64 (pow.f64 x 3) 10) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 x 3) 10) 2/3) (cbrt.f64 (*.f64 (pow.f64 x 3) 10)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (+.f64 (*.f64 6 x) (*.f64 4 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (+.f64 (*.f64 4 x) (*.f64 6 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 x 3) 10)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 x 3) 10)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 x 3) 10))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 3) 10) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x 3) 10) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 x 3) 10) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 x 3) 10)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) 10) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 x 3) 10)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 x 3) 10) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 x) (*.f64 x x) (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 4)) (pow.f64 (*.f64 x (cbrt.f64 4)) 2) (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 3) 4 (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 16) (pow.f64 x 3)) (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 (*.f64 x x)) x (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 6 x) (*.f64 x x) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 (*.f64 x x) 6) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 x x) 6)) (*.f64 (*.f64 (pow.f64 x 4/3) (cbrt.f64 36)) x) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 6)) (*.f64 (cbrt.f64 36) (*.f64 x x)) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) (*.f64 6 x) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 36) (*.f64 x x)) (*.f64 x (cbrt.f64 6)) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (*.f64 (*.f64 x x) 6))) (*.f64 (pow.f64 x 4/3) (cbrt.f64 36)) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x x) 6) x (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (*.f64 (pow.f64 x 4/3) (*.f64 6 x)) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (*.f64 (*.f64 x x) 6)) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 (*.f64 x x) 6) (cbrt.f64 x)) (pow.f64 x 2/3) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 2 (pow.f64 x 3)) (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 (pow.f64 x 3) 6)) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 3) 6 (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 6 (pow.f64 x 3) (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 (pow.f64 x 3)) 1 (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 4 (pow.f64 x 3)) (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 x 3) 6) 1 (*.f64 4 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (pow.f64 x 3) 6) (*.f64 4 (pow.f64 x 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 x 3) 6) 0) (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 3) 6) (*.f64 (*.f64 (pow.f64 x 3) 6) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 3) 3) (*.f64 (pow.f64 x 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (pow.f64 x 3) 6)) (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 3) 6) (*.f64 0 (*.f64 (pow.f64 x 3) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (pow.f64 x 3)) (*.f64 3 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x x) 6) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (*.f64 x x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 6)) (*.f64 (cbrt.f64 36) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (*.f64 6 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 x) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 36) (*.f64 x x)) (*.f64 x (cbrt.f64 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (*.f64 (*.f64 x x) 6))) (*.f64 (pow.f64 x 4/3) (cbrt.f64 36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 x x) 6) (cbrt.f64 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (pow.f64 x 4/3) (*.f64 6 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 x x) 6)) (*.f64 (*.f64 (pow.f64 x 4/3) (cbrt.f64 36)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (*.f64 (*.f64 x x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 x 4/3) (cbrt.f64 36)) x) (cbrt.f64 (*.f64 (*.f64 x x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 4/3) (cbrt.f64 36)) (*.f64 x (cbrt.f64 (*.f64 (*.f64 x x) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 4/3) (*.f64 6 x)) (pow.f64 x 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 2/3) (*.f64 (*.f64 x x) 6)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 2/3) (*.f64 (*.f64 (*.f64 x x) 6) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 3) 6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 6 (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 (pow.f64 x 3) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 x 3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 3) 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (pow.f64 x 3) 6)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 x 3) 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 216 (pow.f64 (pow.f64 x 3) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (cbrt.f64 6)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 (pow.f64 x 3) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 216 (pow.f64 (pow.f64 x 3) 3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 5 (pow.f64 x 4)) 0) (*.f64 5 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 5 (pow.f64 x 4)) (*.f64 (*.f64 5 (pow.f64 x 4)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 5 (pow.f64 x 4))) (*.f64 5 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 5 (pow.f64 x 4)) (*.f64 0 (*.f64 5 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 5) (pow.f64 x 4/3)) (cbrt.f64 (*.f64 25 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x x) (sqrt.f64 5)) (*.f64 (*.f64 x x) (sqrt.f64 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (*.f64 (*.f64 x x) (sqrt.f64 5))) (*.f64 -1 (*.f64 (*.f64 x x) (sqrt.f64 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 x x)) (sqrt.f64 5)) (*.f64 (neg.f64 (*.f64 x x)) (sqrt.f64 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (*.f64 x x)) (neg.f64 (sqrt.f64 5))) (*.f64 (neg.f64 (*.f64 x x)) (neg.f64 (sqrt.f64 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x x) (neg.f64 (sqrt.f64 5))) (*.f64 (*.f64 x x) (neg.f64 (sqrt.f64 5))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 x x) (sqrt.f64 5)) 1) (*.f64 (*.f64 (*.f64 x x) (sqrt.f64 5)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (*.f64 x x) (sqrt.f64 5)) -1) (*.f64 (*.f64 (*.f64 x x) (sqrt.f64 5)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 25 (pow.f64 x 8))) (*.f64 (cbrt.f64 5) (pow.f64 x 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 4) (sqrt.f64 5)) (sqrt.f64 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 x 4) (cbrt.f64 5)) (cbrt.f64 25))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 5 (*.f64 x x)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 5 (pow.f64 x 4/3)) (cbrt.f64 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 5) (*.f64 (cbrt.f64 25) (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 5) (*.f64 (pow.f64 x 4) (sqrt.f64 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (*.f64 5 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 4/3) (*.f64 (cbrt.f64 (pow.f64 x 8)) 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 25) (*.f64 (pow.f64 x 4) (cbrt.f64 5)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 25) (pow.f64 x 4)) (cbrt.f64 5))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 x 8)) 5) (pow.f64 x 4/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 x 8)) (*.f64 5 (pow.f64 x 4/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 5) (neg.f64 (*.f64 x x))) (*.f64 (sqrt.f64 5) (neg.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 5)) (neg.f64 (*.f64 x x))) (*.f64 (neg.f64 (sqrt.f64 5)) (neg.f64 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (sqrt.f64 5)) (*.f64 x x)) (*.f64 (neg.f64 (sqrt.f64 5)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 5 (pow.f64 x 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 4) 5)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 5 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 5 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 5 (pow.f64 x 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 5 (pow.f64 x 4))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 5 (pow.f64 x 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 125 (pow.f64 (pow.f64 x 4) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 5) (pow.f64 x 4/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 5 (pow.f64 x 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x x) (sqrt.f64 5)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 5 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 125 (pow.f64 (pow.f64 x 4) 3)))))))"]],"rules":[["egg-rr",41],["egg-rr",34],["egg-rr",48],["egg-rr",45]],"time":34.322998046875,"type":"rewrite"},{"count":[[204,170]],"inputs":[["(*.f64 6 (pow.f64 x 2))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (pow.f64 x 2))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))"]],"method":["egg-herbie"],"outputs":[["(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 6 (pow.f64 x 2))","(*.f64 6 (*.f64 x x))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 10 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))","(*.f64 6 (pow.f64 x 3))"]],"time":141.9990234375,"type":"simplify"},{"compiler":[[4435,2790]],"time":48.765869140625,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 (neg.f64 (pow.f64 x 5))) (cbrt.f64 (pow.f64 x 10)) (pow.f64 (+.f64 x eps) 5))","fresh",12.253504724625712],["(fma.f64 (*.f64 eps eps) (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps (*.f64 5 (pow.f64 x 4))))","done",11.931234560836607],["(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)","done",7.748924074705633],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","done",7.611930366391315],["(fma.f64 (*.f64 5 eps) (pow.f64 x 4) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3)))","fresh",11.946859560836609],["(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","done",8.465328837491017]],"compiler":[[17,13],[25,17],[14,11],[11,8],[18,13],[12,9]],"count":[[176,6]],"kept":[{"done":[3,3],"fresh":[2,2],"new":[170,0],"picked":[1,1]}],"min-error":[0.02496998993272953],"time":56.569091796875,"type":"prune"},{"accuracy":[0.3145779863758146],"baseline":[7.611930366391315],"branch":[["x",1.3300561736643648,3],["eps",1.035614200351012,3],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))",0.3145779863758146,3],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))",0.3145779863758146,3]],"compiler":[[3,2],[3,2],[11,8],[11,8],[87,58]],"count":[[6,3]],"inputs":[["(fma.f64 (cbrt.f64 (neg.f64 (pow.f64 x 5))) (cbrt.f64 (pow.f64 x 10)) (pow.f64 (+.f64 x eps) 5))","(fma.f64 (*.f64 eps eps) (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps (*.f64 5 (pow.f64 x 4))))","(pow.f64 (cbrt.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))) 3)","(fma.f64 (*.f64 5 eps) (pow.f64 x 4) (*.f64 (*.f64 (*.f64 eps eps) 10) (pow.f64 x 3)))","(fma.f64 (*.f64 5 (pow.f64 eps 4)) x (pow.f64 eps 5))","(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))"]],"link":["."],"name":["ENA, Section 1.4, Exercise 4b, n=5"],"oracle":[24.312172821878757],"outputs":[["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))","(fma.f64 (*.f64 eps eps) (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps (*.f64 5 (pow.f64 x 4))))","(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))"]],"time":34.9208984375,"times":[["x",9.37890625],["eps",12.386962890625],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))",5.572021484375],["(-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))",5.756103515625]],"type":"regimes"},{"bstep":[[0.0,3.67422e-318,0.01513671875],[-3.2988801e-316,0.0,0.1279296875]],"compiler":[[5,4],[11,8]],"method":["left-value","left-value"],"time":0.242919921875,"type":"bsearch"},{"compiler":[[67,44]],"inputs":[["(if (<=.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) -40480451/202402253307310618352495346718917307049556649764142118356901358027430339567995346891960383701437124495187077864316811911389808737385793476867013399940738509921517424276566361364466907742093216341239767678472745068562007483424692698618103355649159556340810056512358769552333414615230502532186327508646006263307707741093494784) (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) (if (<=.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 0) (fma.f64 (*.f64 eps eps) (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps (*.f64 5 (pow.f64 x 4)))) (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) -40480451/202402253307310618352495346718917307049556649764142118356901358027430339567995346891960383701437124495187077864316811911389808737385793476867013399940738509921517424276566361364466907742093216341239767678472745068562007483424692698618103355649159556340810056512358769552333414615230502532186327508646006263307707741093494784) (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) (if (<=.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 0) (fma.f64 (*.f64 eps eps) (fma.f64 4 (pow.f64 x 3) (*.f64 (*.f64 (*.f64 x x) 6) x)) (*.f64 eps (*.f64 5 (pow.f64 x 4)))) (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))","(if (<=.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) -40480451/202402253307310618352495346718917307049556649764142118356901358027430339567995346891960383701437124495187077864316811911389808737385793476867013399940738509921517424276566361364466907742093216341239767678472745068562007483424692698618103355649159556340810056512358769552333414615230502532186327508646006263307707741093494784) (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) (if (<=.f64 (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5)) 0) (*.f64 eps (+.f64 (*.f64 5 (pow.f64 x 4)) (*.f64 eps (*.f64 (pow.f64 x 3) (+.f64 4 6))))) (-.f64 (pow.f64 (+.f64 x eps) 5) (pow.f64 x 5))))"]],"stop":[["fuel",1]],"time":22.656005859375,"type":"simplify"},{"time":0.01416015625,"type":"soundness"},{"compiler":[[67,44]],"remove-preprocessing":[[]],"time":23.071044921875,"type":"end"}]