[{"compiler":[[17,13]],"method":["search"],"sampling":[[12,0.4797652819565883,0.4319837802983102,0.08825093774510151],[11,0.40565519775191206,0.5129197933113119,0.08142500893677607],[10,0.34324670579007943,0.5928806736374099,0.06387262057251064],[9,0.2808382138282468,0.7176976575610752,0.0014641286106780171],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":101.031005859375,"type":"analyze"},{"outcomes":[["body",256,"invalid",62.634765625,1348],["body",512,"valid",23.743896484375,283],["body",1024,"valid",30.615234375,252],["body",256,"valid",359.794189453125,7721]],"time":485.616943359375,"type":"sample"},{"compiler":[[16,12]],"inputs":[["0","1","2"],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","(+.f64 y (*.f64 (*.f64 (-.f64 x y) 6) (-.f64 (/.f64 2 3) z)))","(+.f64 z (*.f64 (*.f64 (-.f64 y z) 6) (-.f64 (/.f64 2 3) x)))","(+.f64 x (*.f64 (*.f64 (-.f64 z x) 6) (-.f64 (/.f64 2 3) y)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","(fma.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z) x)","(+.f64 y (*.f64 (*.f64 (-.f64 x y) 6) (-.f64 (/.f64 2 3) z)))","(fma.f64 (*.f64 -6 (-.f64 y x)) (-.f64 2/3 z) y)","(+.f64 z (*.f64 (*.f64 (-.f64 y z) 6) (-.f64 (/.f64 2 3) x)))","(fma.f64 (-.f64 2/3 x) (*.f64 -6 (-.f64 z y)) z)","(+.f64 x (*.f64 (*.f64 (-.f64 z x) 6) (-.f64 (/.f64 2 3) y)))","(fma.f64 (*.f64 -6 (-.f64 x z)) (-.f64 2/3 y) x)"]],"symmetry":[[]],"time":86.87109375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","(fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)"]],"time":26.239013671875,"type":"simplify"},{"compiler":[[26,18]],"time":0.572021484375,"type":"eval"},{"alts":[["(fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)","fresh",0.3574600586106521],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","next",0.3551750488422101]],"compiler":[[13,9],[16,12],[13,9],[16,12]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.3161125488422101],"time":1.594970703125,"type":"prune"},{"compiler":[[49,31]],"locations":[["(-.f64 (/.f64 2 3) z)",0.015625,true],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))",0.02734375,true],["(*.f64 (-.f64 y x) 6)",0.02734375,true],["(*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z))",0.28744125976844204,true]],"time":11.9150390625,"type":"localize"},{"count":[[4,108]],"series":[["(-.f64 (/.f64 2 3) z)","z","-inf",0.782958984375],["(-.f64 (/.f64 2 3) z)","z","inf",0.162841796875],["(-.f64 (/.f64 2 3) z)","z","0",0.150146484375],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","z","-inf",0.200927734375],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","z","inf",0.18408203125],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","z","0",0.18896484375],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","y","-inf",0.203125],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","y","inf",0.206787109375],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","y","0",0.218017578125],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","x","-inf",0.259033203125],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","x","inf",0.214111328125],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","x","0",0.208984375],["(*.f64 (-.f64 y x) 6)","x","-inf",0.238037109375],["(*.f64 (-.f64 y x) 6)","x","inf",0.22412109375],["(*.f64 (-.f64 y x) 6)","x","0",0.22314453125],["(*.f64 (-.f64 y x) 6)","y","-inf",0.2041015625],["(*.f64 (-.f64 y x) 6)","y","inf",0.22802734375],["(*.f64 (-.f64 y x) 6)","y","0",0.216064453125],["(*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z))","z","-inf",0.345947265625],["(*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z))","z","inf",0.68896484375],["(*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z))","z","0",0.407958984375],["(*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z))","x","-inf",0.342041015625],["(*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z))","x","inf",0.47802734375],["(*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z))","x","0",0.536865234375],["(*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z))","y","-inf",0.406982421875],["(*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z))","y","inf",0.586181640625],["(*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z))","y","0",0.578125]],"time":9.076904296875,"type":"series"},{"count":[[4,228]],"inputs":[["(*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z))","(*.f64 (-.f64 y x) 6)","(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","(-.f64 (/.f64 2 3) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2/3 (*.f64 -6 (-.f64 x y))) (neg.f64 (*.f64 z (*.f64 -6 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2/3 (*.f64 -6 (-.f64 x y))) (neg.f64 (*.f64 (*.f64 -6 (-.f64 x y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (*.f64 -6 (-.f64 x y)) z)) (*.f64 2/3 (*.f64 -6 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 z (*.f64 -6 (-.f64 x y)))) (*.f64 2/3 (*.f64 -6 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 0) (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) (*.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 2/3 z) (-.f64 y x)) 3) (*.f64 (*.f64 (-.f64 2/3 z) (-.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 2/3 (*.f64 -6 (-.f64 x y)))) (*.f64 1 (neg.f64 (*.f64 (*.f64 -6 (-.f64 x y)) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 2/3 (*.f64 -6 (-.f64 x y)))) (*.f64 1 (neg.f64 (*.f64 z (*.f64 -6 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 6 (-.f64 2/3 z)) (neg.f64 x)) (*.f64 (*.f64 6 (-.f64 2/3 z)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 6 (-.f64 2/3 z)) y) (*.f64 (*.f64 6 (-.f64 2/3 z)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 2/3 z) (*.f64 6 y)) (*.f64 (-.f64 2/3 z) (neg.f64 (*.f64 6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 2/3 z) (*.f64 y 6)) (*.f64 (-.f64 2/3 z) (neg.f64 (*.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z))) (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) (*.f64 0 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (*.f64 (-.f64 2/3 z) (-.f64 y x))) (*.f64 3 (*.f64 (-.f64 2/3 z) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 (-.f64 y x)) (*.f64 (neg.f64 (*.f64 z 6)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 2/3 (*.f64 -6 (-.f64 x y))) 1) (*.f64 (neg.f64 (*.f64 (*.f64 -6 (-.f64 x y)) z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 2/3 (*.f64 -6 (-.f64 x y))) 1) (*.f64 (neg.f64 (*.f64 z (*.f64 -6 (-.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 x) (*.f64 6 (-.f64 2/3 z))) (*.f64 y (*.f64 6 (-.f64 2/3 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 6 (-.f64 2/3 z))) (*.f64 (neg.f64 x) (*.f64 6 (-.f64 2/3 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 6 y) (-.f64 2/3 z)) (*.f64 (neg.f64 (*.f64 6 x)) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y 6) (-.f64 2/3 z)) (*.f64 (neg.f64 (*.f64 x 6)) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (*.f64 6 (+.f64 z -2/3)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (*.f64 6 (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z))) (pow.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (pow.f64 (-.f64 y x) 2/3) (*.f64 6 (-.f64 2/3 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -6 (-.f64 x y))) (*.f64 (pow.f64 (*.f64 -6 (-.f64 x y)) 2/3) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 2/3 z)) (*.f64 (pow.f64 (-.f64 2/3 z) 2/3) (*.f64 -6 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 (-.f64 2/3 z)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 2/3) (cbrt.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 2/3 z) (cbrt.f64 (*.f64 -6 (-.f64 x y)))) (pow.f64 (*.f64 -6 (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (cbrt.f64 (-.f64 2/3 z))) (pow.f64 (-.f64 2/3 z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 2/3 z) (-.f64 y x)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 6 (*.f64 (-.f64 y x) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 6 (+.f64 z -2/3)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 x y) 6) (+.f64 z -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 z -2/3) (*.f64 (-.f64 x y) 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (*.f64 6 (+.f64 z -2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 8/27 (pow.f64 z 3))) (/.f64 1 (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 8/27 (pow.f64 z 3))) (cbrt.f64 (fma.f64 z (+.f64 2/3 z) 4/9))) (pow.f64 (cbrt.f64 (fma.f64 z (+.f64 2/3 z) 4/9)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 8/27 (pow.f64 z 3))) (fma.f64 z (+.f64 2/3 z) 4/9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) (*.f64 6 (-.f64 8/27 (pow.f64 z 3)))) (fma.f64 z (+.f64 2/3 z) 4/9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 8/27 (pow.f64 z 3)))) (fma.f64 z (+.f64 2/3 z) 4/9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 (pow.f64 z 3) 8/27)) (neg.f64 (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 6 (-.f64 8/27 (pow.f64 z 3))) (-.f64 y x)) (fma.f64 z (+.f64 2/3 z) 4/9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 8/27 (pow.f64 z 3))) (*.f64 (pow.f64 (-.f64 2/3 z) 2/3) (*.f64 -6 (-.f64 x y)))) (cbrt.f64 (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 z 3) 8/27) (*.f64 -6 (-.f64 x y))) (neg.f64 (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 8/27 (pow.f64 z 3))) 1) (fma.f64 z (+.f64 2/3 z) 4/9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 8/27 (pow.f64 z 3))) 1) (fma.f64 z (+.f64 2/3 z) 4/9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 8/27 (pow.f64 z 3)))) (neg.f64 (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 8/27 (pow.f64 z 3))) (+.f64 4/9 (*.f64 (neg.f64 z) (-.f64 (neg.f64 z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 6 (+.f64 z -2/3)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2/3 (*.f64 -6 (-.f64 x y)) (neg.f64 (*.f64 z (*.f64 -6 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 (-.f64 x y)) 2/3 (neg.f64 (*.f64 (*.f64 -6 (-.f64 x y)) z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -6 (-.f64 x y)) 0) (*.f64 -6 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (-.f64 x y)) (*.f64 (*.f64 -6 (-.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) 3) (*.f64 (-.f64 y x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 6 y) (neg.f64 (*.f64 6 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 6 y)) (*.f64 1 (neg.f64 (*.f64 6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 y 6)) (*.f64 1 (neg.f64 (*.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -6 (-.f64 x y))) (*.f64 -6 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (-.f64 x y)) (*.f64 0 (*.f64 -6 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (-.f64 y x)) (*.f64 3 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y 6) (neg.f64 (*.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 6 y) 1) (*.f64 (neg.f64 (*.f64 6 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y 6) 1) (*.f64 (neg.f64 (*.f64 x 6)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 6 x)) (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 x 6)) (*.f64 y 6))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 x y) 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 6) (*.f64 (cbrt.f64 36) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (pow.f64 (-.f64 y x) 2/3) 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 (cbrt.f64 (-.f64 y x))) (pow.f64 (-.f64 y x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -6 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -6 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -6 (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) -6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -6 (-.f64 x y))) (pow.f64 (*.f64 -6 (-.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 -6 (-.f64 x y)) 2/3) (cbrt.f64 (*.f64 -6 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (sqrt.f64 6)) (sqrt.f64 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (cbrt.f64 6)) (cbrt.f64 36))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 6) (*.f64 (sqrt.f64 6) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) 6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 6 (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 x y) 6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -6 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -6 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -6 (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -6 (-.f64 x y))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -6 (-.f64 x y))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -6 (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 x y) 6))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -6 (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y 6 (neg.f64 (*.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 6 y (neg.f64 (*.f64 6 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 2/3 (*.f64 -6 (-.f64 x y)))) (neg.f64 (*.f64 (*.f64 -6 (-.f64 x y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 2/3 (*.f64 -6 (-.f64 x y)))) (neg.f64 (*.f64 z (*.f64 -6 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2/3 (*.f64 -6 (-.f64 x y))) (+.f64 (neg.f64 (*.f64 (*.f64 -6 (-.f64 x y)) z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2/3 (*.f64 -6 (-.f64 x y))) (+.f64 (neg.f64 (*.f64 z (*.f64 -6 (-.f64 x y)))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) 0) (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) (*.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)) (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) (*.f64 0 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 (*.f64 6 (+.f64 z -2/3)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)) (pow.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 2/3) (-.f64 (pow.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 2/3) (cbrt.f64 (*.f64 x (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))) (+.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 2/3) (-.f64 (pow.f64 x 2/3) (cbrt.f64 (*.f64 x (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))) (+.f64 (cbrt.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) 2/3) (cbrt.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 x 2/3) (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 x) (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 2/3) (cbrt.f64 x) (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y x) (*.f64 6 (-.f64 2/3 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z))) (pow.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 2/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 2/3) (cbrt.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 6 (*.f64 (-.f64 y x) (-.f64 2/3 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (*.f64 6 (+.f64 z -2/3)) (-.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 2/3 z) (cbrt.f64 (*.f64 -6 (-.f64 x y)))) (pow.f64 (*.f64 -6 (-.f64 x y)) 2/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 2/3 z)) (*.f64 (pow.f64 (-.f64 2/3 z) 2/3) (*.f64 -6 (-.f64 x y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 6 (-.f64 2/3 z)) (-.f64 y x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 2/3 z) (-.f64 y x)) 6 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -6 (-.f64 x y))) (*.f64 (pow.f64 (*.f64 -6 (-.f64 x y)) 2/3) (-.f64 2/3 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (pow.f64 (-.f64 y x) 2/3) (*.f64 6 (-.f64 2/3 z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (cbrt.f64 (-.f64 2/3 z))) (pow.f64 (-.f64 2/3 z) 2/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (*.f64 -6 (-.f64 x y)) (-.f64 2/3 z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 2/3 z) 0) (-.f64 2/3 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 2/3 z) (*.f64 (-.f64 2/3 z) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 2/3 z)) (-.f64 2/3 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 2/3 z) (*.f64 0 (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 2/3 (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 z) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 2/3 z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 8/27 (fma.f64 z (+.f64 2/3 z) 4/9)) (neg.f64 (/.f64 (pow.f64 z 3) (fma.f64 z (+.f64 2/3 z) 4/9))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (+.f64 z -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 8/27 (fma.f64 z (+.f64 2/3 z) 4/9)) (/.f64 (pow.f64 z 3) (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (neg.f64 z) -2/3)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 2/3 z)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 2/3 0) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 2/3 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 2/3 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 -2/3 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (+.f64 z -2/3))) (pow.f64 (cbrt.f64 (+.f64 z -2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 2/3 z)) (pow.f64 (-.f64 2/3 z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 4/9) (+.f64 (pow.f64 z 2/3) (cbrt.f64 (*.f64 2/3 z)))) (-.f64 (cbrt.f64 2/3) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 2/3 z) 2/3) (cbrt.f64 (-.f64 2/3 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 z -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 8/27 (pow.f64 z 3)) (/.f64 1 (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 z -2/3)) (neg.f64 (pow.f64 (cbrt.f64 (+.f64 z -2/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 z 3) 8/27) (/.f64 1 (neg.f64 (fma.f64 z (+.f64 2/3 z) 4/9))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 8/27 (pow.f64 z 3)) (/.f64 1 (+.f64 4/9 (*.f64 (neg.f64 z) (-.f64 (neg.f64 z) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 2/3 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 512/19683 (pow.f64 (pow.f64 z 3) 3)) (/.f64 1 (fma.f64 z (+.f64 2/3 z) 4/9))) (+.f64 (+.f64 64/729 (pow.f64 z 6)) (pow.f64 (*.f64 2/3 z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 8/27 (pow.f64 z 3)) (cbrt.f64 (fma.f64 z (+.f64 2/3 z) 4/9))) (pow.f64 (cbrt.f64 (fma.f64 z (+.f64 2/3 z) 4/9)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 8/27 (fma.f64 z (+.f64 2/3 z) 4/9)) (*.f64 (fma.f64 z (+.f64 2/3 z) 4/9) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 2/3 z) 4/9) (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 8/27 (pow.f64 z 3)) (fma.f64 z (+.f64 2/3 z) 4/9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 3) 8/27) (neg.f64 (+.f64 4/9 (*.f64 (neg.f64 z) (-.f64 (neg.f64 z) 2/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 3) 8/27) (neg.f64 (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 8/27 (pow.f64 z 3)) 1) (fma.f64 z (+.f64 2/3 z) 4/9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (-.f64 2/3 z) 2/3) (cbrt.f64 (-.f64 8/27 (pow.f64 z 3)))) (cbrt.f64 (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 8/27 (pow.f64 z 3))) (pow.f64 (-.f64 2/3 z) 2/3)) (cbrt.f64 (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 z 3) 8/27) 1) (neg.f64 (fma.f64 z (+.f64 2/3 z) 4/9)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 8/27 (pow.f64 z 3)) (+.f64 4/9 (*.f64 (neg.f64 z) (-.f64 (neg.f64 z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 8/27 (pow.f64 z 3)) (+.f64 (*.f64 z z) (-.f64 4/9 (*.f64 (neg.f64 z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 8/27 (pow.f64 z 3)) 1) (+.f64 4/9 (*.f64 (neg.f64 z) (-.f64 (neg.f64 z) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 2/3 z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 2/3 z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 2/3 z)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 2/3 z)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 2/3 z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (+.f64 z -2/3))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (+.f64 z -2/3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 2/3 z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2/3) (sqrt.f64 2/3) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2/3) (cbrt.f64 4/9) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 1/3 (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 2/3 (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 2) (cbrt.f64 1/3)) (/.f64 (sqrt.f64 2) (cbrt.f64 9)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 2) (sqrt.f64 1/3)) (*.f64 (cbrt.f64 4) (sqrt.f64 1/3)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4/9) (cbrt.f64 2/3) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 1/3) (sqrt.f64 4/3) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 2) (sqrt.f64 (/.f64 2 9)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 1/3) (cbrt.f64 (/.f64 8 9)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 2) (cbrt.f64 (/.f64 4 27)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 2 (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2/3 1 (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 -2/3 (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 -1/3 (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 z)) (pow.f64 z 2/3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (neg.f64 (pow.f64 z 2/3)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 z) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (-.f64 2/3 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (-.f64 2/3 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (-.f64 2/3 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (-.f64 2/3 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (-.f64 2/3 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 2/3)) (neg.f64 (sqrt.f64 2/3)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 z 2/3)))))"]],"rules":[["egg-rr",72],["egg-rr",49],["egg-rr",40],["egg-rr",67]],"time":44.55712890625,"type":"rewrite"},{"count":[[336,259]],"inputs":[["(*.f64 -6 (*.f64 (-.f64 2/3 z) x))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 -6 (*.f64 (-.f64 2/3 z) x))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 -6 (*.f64 (-.f64 2/3 z) x))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 4 (-.f64 y x))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x)","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 (-.f64 2/3 z)) 1) x))","(+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 (-.f64 2/3 z)) 1) x)))","(+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 (-.f64 2/3 z)) 1) x)))","(+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 (-.f64 2/3 z)) 1) x)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) x)","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) x))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) x))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) x))","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(+.f64 (*.f64 4 (-.f64 y x)) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","2/3","(+.f64 (*.f64 -1 z) 2/3)","(+.f64 (*.f64 -1 z) 2/3)","(+.f64 (*.f64 -1 z) 2/3)","(*.f64 -1 z)","(+.f64 (*.f64 -1 z) 2/3)","(+.f64 (*.f64 -1 z) 2/3)","(+.f64 (*.f64 -1 z) 2/3)","(*.f64 -1 z)","(+.f64 (*.f64 -1 z) 2/3)","(+.f64 (*.f64 -1 z) 2/3)","(+.f64 (*.f64 -1 z) 2/3)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -6 (*.f64 (-.f64 2/3 z) x))","(*.f64 x (*.f64 -6 (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(*.f64 -6 (*.f64 (-.f64 2/3 z) x))","(*.f64 x (*.f64 -6 (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(*.f64 -6 (*.f64 (-.f64 2/3 z) x))","(*.f64 x (*.f64 -6 (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y)))","(*.f64 4 (-.f64 y x))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 (*.f64 -6 (-.f64 y x)) z)","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 (*.f64 -6 (-.f64 y x)) z)","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z)))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x)","(fma.f64 (*.f64 -6 (-.f64 2/3 z)) x x)","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 (-.f64 2/3 z)) 1) x))","(fma.f64 (*.f64 -6 (-.f64 2/3 z)) x x)","(+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 (-.f64 2/3 z)) 1) x)))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 (-.f64 2/3 z)) 1) x)))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 (-.f64 2/3 z)) 1) x)))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) x)","(fma.f64 (*.f64 -6 (-.f64 2/3 z)) x x)","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) x))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) x))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 (*.f64 6 (*.f64 y (-.f64 2/3 z))) x))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(*.f64 6 (*.f64 y (-.f64 2/3 z)))","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 -6 (*.f64 (-.f64 2/3 z) x)) (+.f64 x (*.f64 6 (*.f64 y (-.f64 2/3 z)))))","(+.f64 (*.f64 (-.f64 2/3 z) (fma.f64 -6 x (*.f64 6 y))) x)","(+.f64 (*.f64 4 (-.f64 y x)) x)","(fma.f64 4 (-.f64 y x) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z))) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z))) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z))) x)","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 (*.f64 -6 (-.f64 y x)) z)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z))) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z))) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z))) x)","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 (*.f64 -6 (-.f64 y x)) z)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z))) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z))) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z))) x)","2/3","(+.f64 (*.f64 -1 z) 2/3)","(-.f64 2/3 z)","(+.f64 (*.f64 -1 z) 2/3)","(-.f64 2/3 z)","(+.f64 (*.f64 -1 z) 2/3)","(-.f64 2/3 z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 -1 z) 2/3)","(-.f64 2/3 z)","(+.f64 (*.f64 -1 z) 2/3)","(-.f64 2/3 z)","(+.f64 (*.f64 -1 z) 2/3)","(-.f64 2/3 z)","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 -1 z) 2/3)","(-.f64 2/3 z)","(+.f64 (*.f64 -1 z) 2/3)","(-.f64 2/3 z)","(+.f64 (*.f64 -1 z) 2/3)","(-.f64 2/3 z)"]],"time":408.90576171875,"type":"simplify"},{"compiler":[[4333,2742]],"time":53.085205078125,"type":"eval"},{"alts":[["(+.f64 x (*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z))))","fresh",0.19369125976844204],["(fma.f64 (*.f64 (-.f64 2/3 z) (-.f64 y x)) 6 x)","fresh",0.4466400390737681],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","next",0.16796875],["(pow.f64 (cbrt.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)) 3)","fresh",0.8372004395798914],["(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","fresh",0.28353500976844204],["(+.f64 x (*.f64 (*.f64 (*.f64 (-.f64 y x) (cbrt.f64 6)) (cbrt.f64 36)) (-.f64 (/.f64 2 3) z)))","fresh",0.43853383791597816],["(fma.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (cbrt.f64 (-.f64 2/3 z))) (pow.f64 (-.f64 2/3 z) 2/3) x)","fresh",14.707635927774254],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","done",0.3551750488422101]],"compiler":[[14,10],[13,9],[19,12],[16,12],[20,16],[20,16],[20,15],[16,12],[14,10],[13,9],[19,12],[16,12],[20,16],[20,16],[20,15]],"count":[[261,8]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[259,7],"picked":[1,1]}],"min-error":[0.01171875],"time":87.794921875,"type":"prune"},{"compiler":[[61,32]],"locations":[["(+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))",0.01171875,true],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))",0.02734375,true],["(*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))",0.265625,true]],"time":12.382080078125,"type":"localize"},{"count":[[3,108]],"series":[["(+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))","z","-inf",0.1650390625],["(+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))","z","inf",0.18212890625],["(+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))","z","0",0.166015625],["(+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))","x","-inf",0.212158203125],["(+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))","x","inf",0.18212890625],["(+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))","x","0",0.198974609375],["(+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))","y","-inf",0.17822265625],["(+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))","y","inf",0.177978515625],["(+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))","y","0",0.2060546875],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","z","-inf",0.232177734375],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","z","inf",0.2021484375],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","z","0",0.23291015625],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","y","-inf",0.283935546875],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","y","inf",0.27099609375],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","y","0",0.261962890625],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","x","-inf",0.287841796875],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","x","inf",0.252197265625],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","x","0",0.27001953125],["(*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))","z","-inf",0.26611328125],["(*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))","z","inf",0.4169921875],["(*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))","z","0",0.434814453125],["(*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))","x","-inf",0.7900390625],["(*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))","x","inf",0.31396484375],["(*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))","x","0",0.31396484375],["(*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))","y","-inf",0.344970703125],["(*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))","y","inf",0.2998046875],["(*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))","y","0",0.4150390625]],"time":7.926025390625,"type":"series"},{"count":[[3,173]],"inputs":[["(*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))","(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","(+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z -6) y) (neg.f64 (*.f64 (*.f64 z -6) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 z -6)) (neg.f64 (*.f64 x (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 (*.f64 z -6) x)) (*.f64 (*.f64 z -6) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 y (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 (*.f64 z -6) y)) (*.f64 1 (neg.f64 (*.f64 (*.f64 z -6) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1 (*.f64 y (*.f64 z -6))) (*.f64 1 (neg.f64 (*.f64 x (*.f64 z -6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) 0) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 (-.f64 y x) z)) 3) (*.f64 (neg.f64 (*.f64 (-.f64 y x) z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) (*.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 0) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 z -6) y) 1) (*.f64 (neg.f64 (*.f64 (*.f64 z -6) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (*.f64 z -6)) 1) (*.f64 (neg.f64 (*.f64 x (*.f64 z -6))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (-.f64 y x)) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 3 (neg.f64 (*.f64 (-.f64 y x) z))) (*.f64 3 (neg.f64 (*.f64 (-.f64 y x) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) (*.f64 0 (*.f64 (*.f64 (-.f64 y x) z) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (*.f64 (-.f64 y x) z) -6)) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 x y) (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 y x) z) -6)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (*.f64 z -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z -6) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 2)) (cbrt.f64 (*.f64 (*.f64 (-.f64 y x) z) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (cbrt.f64 (*.f64 z -6))) (cbrt.f64 (*.f64 36 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) z) -6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z -6) (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 -6 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (*.f64 6 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (*.f64 z 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (-.f64 x y) (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z -6)) (*.f64 (cbrt.f64 (*.f64 36 (*.f64 z z))) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (-.f64 y x) z)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z 6) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (-.f64 y x) 6)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (-.f64 y x))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (*.f64 z 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (-.f64 y x) (cbrt.f64 (*.f64 z 6)))) (cbrt.f64 (*.f64 36 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) 6) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 x y) (*.f64 z -6))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (cbrt.f64 (*.f64 z 6))) (neg.f64 (cbrt.f64 (*.f64 36 (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 y x) z) -6)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 y x) z) -6)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 y x) z) -6)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 x y) (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (-.f64 x y) (*.f64 z -6)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (*.f64 (*.f64 (-.f64 y x) z) -6))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 -4 (-.f64 x y))) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) (+.f64 x (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 (*.f64 (-.f64 y x) z) -6)) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (-.f64 x y)) (+.f64 x (*.f64 (*.f64 (-.f64 y x) z) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x (*.f64 -4 (-.f64 x y))) (*.f64 y (*.f64 z -6))) (neg.f64 (*.f64 x (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x (*.f64 -4 (-.f64 x y))) (*.f64 (*.f64 z -6) y)) (neg.f64 (*.f64 (*.f64 z -6) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x (*.f64 (*.f64 (-.f64 y x) z) -6)) (*.f64 y 4)) (neg.f64 (*.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x (*.f64 (*.f64 (-.f64 y x) z) -6)) (*.f64 4 y)) (neg.f64 (*.f64 4 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z -6) y) (+.f64 (neg.f64 (*.f64 (*.f64 z -6) x)) (+.f64 x (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (+.f64 x (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y 4) (+.f64 (neg.f64 (*.f64 x 4)) (+.f64 x (*.f64 (*.f64 (-.f64 y x) z) -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 y) (+.f64 (neg.f64 (*.f64 4 x)) (+.f64 x (*.f64 (*.f64 (-.f64 y x) z) -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) (*.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) 0) (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x (*.f64 (*.f64 (-.f64 y x) z) -6)) 1) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (-.f64 x y)) (*.f64 (+.f64 x (*.f64 (*.f64 (-.f64 y x) z) -6)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) (*.f64 0 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x)) (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x (*.f64 -4 (-.f64 x y))) (*.f64 (-.f64 x y) (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 x (*.f64 -4 (-.f64 x y))) 0) (*.f64 (-.f64 x y) (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 (-.f64 x y) (*.f64 z -6)) (+.f64 x (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -4 (-.f64 x y)) (-.f64 (*.f64 (-.f64 x y) (*.f64 z -6)) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x (*.f64 (*.f64 (-.f64 y x) z) -6)) (*.f64 (-.f64 x y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 (+.f64 4 (*.f64 z -6)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 2)) (cbrt.f64 (*.f64 (*.f64 x (-.f64 y x)) (+.f64 4 (*.f64 z -6)))))) (+.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (*.f64 (*.f64 x (-.f64 y x)) (+.f64 4 (*.f64 z -6)))))) (+.f64 (cbrt.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) 2)) (cbrt.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (-.f64 x y) (*.f64 z -6)) (+.f64 x (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x (*.f64 -4 (-.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 x (*.f64 -4 (-.f64 x y)))) 2) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 x (*.f64 -4 (-.f64 x y))) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (-.f64 x y)) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 y (*.f64 z -6))) (neg.f64 (*.f64 x (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 (*.f64 z -6) y)) (neg.f64 (*.f64 (*.f64 z -6) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) (*.f64 y 4)) (neg.f64 (*.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) (*.f64 4 y)) (neg.f64 (*.f64 4 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z -6) y) (+.f64 (neg.f64 (*.f64 (*.f64 z -6) x)) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y 4) (+.f64 (neg.f64 (*.f64 x 4)) (*.f64 (*.f64 (-.f64 y x) z) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 y) (+.f64 (neg.f64 (*.f64 4 x)) (*.f64 (*.f64 (-.f64 y x) z) -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y 4) (-.f64 (neg.f64 (*.f64 x 4)) (*.f64 (-.f64 x y) (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 y) (-.f64 (neg.f64 (*.f64 4 x)) (*.f64 (-.f64 x y) (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) (*.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 0) (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 4 (*.f64 z -6)) y) (*.f64 (+.f64 4 (*.f64 z -6)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 4 (*.f64 z -6)) (neg.f64 x)) (*.f64 (+.f64 4 (*.f64 z -6)) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) (*.f64 0 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)))) (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (+.f64 4 (*.f64 z -6))) (*.f64 (neg.f64 x) (+.f64 4 (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 x) (+.f64 4 (*.f64 z -6))) (*.f64 y (+.f64 4 (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -4 (-.f64 x y)) (*.f64 (-.f64 x y) (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 -4 (-.f64 x y)) 0) (*.f64 (-.f64 x y) (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 (-.f64 x y) (*.f64 z -6)) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) (*.f64 (-.f64 x y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (+.f64 4 (*.f64 z -6)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (+.f64 4 (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 4 (*.f64 z -6)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 y x)) (-.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) 4) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (*.f64 z 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (neg.f64 (+.f64 4 (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)))) (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 -4 (-.f64 x y)) 2)) (cbrt.f64 (*.f64 (*.f64 (-.f64 x y) 4) (*.f64 (-.f64 x y) (*.f64 z -6)))))) (+.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 y x) z) -6)) (cbrt.f64 (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 -4 (-.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 2)) (cbrt.f64 (*.f64 (*.f64 (-.f64 x y) 4) (*.f64 (-.f64 x y) (*.f64 z -6)))))) (+.f64 (cbrt.f64 (*.f64 -4 (-.f64 x y))) (cbrt.f64 (*.f64 (*.f64 (-.f64 y x) z) -6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 2)) (cbrt.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (+.f64 4 (*.f64 z -6)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (+.f64 (*.f64 4 (cbrt.f64 (-.f64 y x))) (*.f64 (*.f64 z -6) (cbrt.f64 (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (+.f64 (*.f64 (*.f64 z -6) (cbrt.f64 (-.f64 y x))) (*.f64 4 (cbrt.f64 (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) (+.f64 64 (pow.f64 (*.f64 z -6) 3))) (+.f64 16 (*.f64 (*.f64 z -6) (-.f64 (*.f64 z -6) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 64 (pow.f64 (*.f64 z -6) 3)) (-.f64 y x)) (+.f64 16 (*.f64 (*.f64 z -6) (-.f64 (*.f64 z -6) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 4 (*.f64 z -6)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 (-.f64 x y) (*.f64 z -6)) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -4 (-.f64 x y))) (cbrt.f64 (pow.f64 (*.f64 -4 (-.f64 x y)) 2)) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z -6) (-.f64 y x) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y x) (*.f64 z -6) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 (-.f64 y x) z) -6)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 (-.f64 y x) z) -6) 2)) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -4 (-.f64 x y)) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 (-.f64 y x) z) -6) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y x) 4 (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 (-.f64 y x) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (-.f64 x y)) 1 (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 16) (-.f64 y x)) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 (cbrt.f64 (-.f64 y x))) (cbrt.f64 (pow.f64 (-.f64 y x) 2)) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (-.f64 x y) 4) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 -4 (-.f64 x y)) 2)) (cbrt.f64 (*.f64 -4 (-.f64 x y))) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y x) (cbrt.f64 4)) (cbrt.f64 16) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 y x) 2)) 4) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 2 (-.f64 y x)) (*.f64 (*.f64 (-.f64 y x) z) -6))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y x) 2) 2 (*.f64 (*.f64 (-.f64 y x) z) -6))))))"]],"rules":[["egg-rr",67],["egg-rr",51],["egg-rr",55]],"time":37.40087890625,"type":"rewrite"},{"count":[[281,219]],"inputs":[["(*.f64 6 (*.f64 z x))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(*.f64 -6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(*.f64 -6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(*.f64 -6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(*.f64 6 (*.f64 z x))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(*.f64 6 (*.f64 z x))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 -4 x) (+.f64 (*.f64 6 (*.f64 z x)) x))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(*.f64 (+.f64 4 (*.f64 -6 z)) y)","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)))","(+.f64 (*.f64 4 (-.f64 y x)) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 -4 x) (*.f64 6 (*.f64 z x)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(*.f64 (+.f64 4 (*.f64 -6 z)) y)","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))))","(+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z))))","(*.f64 (-.f64 (*.f64 6 z) 4) x)","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (*.f64 -6 (*.f64 y z))))","(*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(*.f64 4 (-.f64 y x))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 6 (*.f64 z x))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(*.f64 -6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(*.f64 -6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(*.f64 -6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(*.f64 6 (*.f64 z x))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(*.f64 6 (*.f64 z x))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 6 (*.f64 z x)) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 (*.f64 z x) (*.f64 -6 (*.f64 y z)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z)))","(fma.f64 4 y (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(*.f64 (fma.f64 6 z -3) x)","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","(*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x))","(*.f64 (neg.f64 x) (fma.f64 z -6 3))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 (neg.f64 (fma.f64 z -6 3)) x (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 (neg.f64 (fma.f64 z -6 3)) x (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 (neg.f64 (fma.f64 z -6 3)) x (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 -4 x) (+.f64 (*.f64 6 (*.f64 z x)) x))","(+.f64 (*.f64 (fma.f64 6 z -4) x) x)","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (fma.f64 y (fma.f64 z -6 4) x))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (fma.f64 y (fma.f64 z -6 4) x))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (fma.f64 y (fma.f64 z -6 4) x))","(*.f64 (+.f64 4 (*.f64 -6 z)) y)","(*.f64 (fma.f64 z -6 4) y)","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (fma.f64 y (fma.f64 z -6 4) x))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (fma.f64 y (fma.f64 z -6 4) x))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (fma.f64 y (fma.f64 z -6 4) x))","(*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))","(*.f64 y (-.f64 4 (*.f64 6 z)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (fma.f64 (neg.f64 y) (fma.f64 6 z -4) x))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (fma.f64 (neg.f64 y) (fma.f64 6 z -4) x))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (fma.f64 (neg.f64 y) (fma.f64 6 z -4) x))","(+.f64 (*.f64 4 (-.f64 y x)) x)","(fma.f64 4 (-.f64 y x) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (fma.f64 z -6 4)) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (fma.f64 z -6 4)) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (fma.f64 z -6 4)) x)","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (fma.f64 z -6 4)) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (fma.f64 z -6 4)) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (fma.f64 z -6 4)) x)","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (fma.f64 z -6 4)) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (fma.f64 z -6 4)) x)","(+.f64 (*.f64 4 (-.f64 y x)) (+.f64 (*.f64 -6 (*.f64 z (-.f64 y x))) x))","(+.f64 (*.f64 (-.f64 y x) (fma.f64 z -6 4)) x)","(+.f64 (*.f64 -4 x) (*.f64 6 (*.f64 z x)))","(*.f64 (fma.f64 6 z -4) x)","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (*.f64 (fma.f64 z -6 4) y))","(*.f64 (+.f64 4 (*.f64 -6 z)) y)","(*.f64 (fma.f64 z -6 4) y)","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 (+.f64 4 (*.f64 -6 z)) y)))","(+.f64 (*.f64 (fma.f64 6 z -4) x) (*.f64 (fma.f64 z -6 4) y))","(*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))","(*.f64 y (-.f64 4 (*.f64 6 z)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))))","(-.f64 (*.f64 (fma.f64 6 z -4) x) (*.f64 y (fma.f64 6 z -4)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))))","(-.f64 (*.f64 (fma.f64 6 z -4) x) (*.f64 y (fma.f64 6 z -4)))","(+.f64 (*.f64 6 (*.f64 z x)) (+.f64 (*.f64 -4 x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))))","(-.f64 (*.f64 (fma.f64 6 z -4) x) (*.f64 y (fma.f64 6 z -4)))","(+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z)))","(fma.f64 4 y (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z))))","(fma.f64 x (fma.f64 6 z -4) (fma.f64 4 y (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z))))","(fma.f64 x (fma.f64 6 z -4) (fma.f64 4 y (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z))))","(fma.f64 x (fma.f64 6 z -4) (fma.f64 4 y (*.f64 -6 (*.f64 y z))))","(*.f64 (-.f64 (*.f64 6 z) 4) x)","(*.f64 (fma.f64 6 z -4) x)","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 x (fma.f64 6 z -4) (fma.f64 4 y (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 x (fma.f64 6 z -4) (fma.f64 4 y (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 4) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 x (fma.f64 6 z -4) (fma.f64 4 y (*.f64 -6 (*.f64 y z))))","(*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x))","(*.f64 (neg.f64 x) (fma.f64 z -6 4))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 (neg.f64 (fma.f64 z -6 4)) x (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 (neg.f64 (fma.f64 z -6 4)) x (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 4 y (fma.f64 (neg.f64 (fma.f64 z -6 4)) x (*.f64 -6 (*.f64 y z))))","(*.f64 4 (-.f64 y x))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (fma.f64 z -6 4))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (fma.f64 z -6 4))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (fma.f64 z -6 4))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (fma.f64 z -6 4))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (fma.f64 z -6 4))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (fma.f64 z -6 4))","(*.f64 -6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (fma.f64 z -6 4))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (fma.f64 z -6 4))","(+.f64 (*.f64 4 (-.f64 y x)) (*.f64 -6 (*.f64 z (-.f64 y x))))","(*.f64 (-.f64 y x) (fma.f64 z -6 4))"]],"time":329.260009765625,"type":"simplify"},{"compiler":[[3849,2102]],"time":43.998046875,"type":"eval"},{"alts":[["(fma.f64 (*.f64 (-.f64 2/3 z) (-.f64 y x)) 6 x)","fresh",0.4466400390737681],["(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (cbrt.f64 (*.f64 z -6)) (*.f64 (cbrt.f64 (*.f64 36 (*.f64 z z))) (-.f64 y x)))))","fresh",7.17578125],["(fma.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (cbrt.f64 (-.f64 2/3 z))) (pow.f64 (-.f64 2/3 z) 2/3) x)","fresh",14.707635927774254],["(fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))))","fresh",14.526546357001035],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","next",0.16015625],["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","fresh",0.1640625],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","done",0.3551750488422101]],"compiler":[[13,9],[26,17],[20,15],[19,13],[23,16],[17,12],[16,12],[13,9],[26,17],[20,15],[19,13],[23,16],[17,12]],"count":[[227,7]],"kept":[{"done":[1,1],"fresh":[6,2],"new":[219,4],"picked":[1,0]}],"min-error":[0],"time":93.049072265625,"type":"prune"},{"compiler":[[85,50]],"locations":[["(+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))",0.0078125,true],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))",0.02734375,true],["(*.f64 y (*.f64 z -6))",0.2265625,true],["(*.f64 x (*.f64 z -6))",0.2578125,true]],"time":18.2177734375,"type":"localize"},{"count":[[4,120]],"series":[["(+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))","y","-inf",0.18505859375],["(+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))","y","inf",0.18994140625],["(+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))","y","0",0.198974609375],["(+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))","z","-inf",0.169921875],["(+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))","z","inf",0.184814453125],["(+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))","z","0",0.177978515625],["(+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))","x","-inf",0.18798828125],["(+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))","x","inf",0.18798828125],["(+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))","x","0",0.180908203125],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","z","-inf",0.254150390625],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","z","inf",0.226806640625],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","z","0",0.31298828125],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","y","-inf",0.248046875],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","y","inf",0.303955078125],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","y","0",1.610107421875],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","x","-inf",0.243896484375],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","x","inf",0.317138671875],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","x","0",0.4560546875],["(*.f64 y (*.f64 z -6))","z","-inf",0.261962890625],["(*.f64 y (*.f64 z -6))","z","inf",0.458984375],["(*.f64 y (*.f64 z -6))","z","0",0.635986328125],["(*.f64 y (*.f64 z -6))","y","-inf",0.248046875],["(*.f64 y (*.f64 z -6))","y","inf",0.31787109375],["(*.f64 y (*.f64 z -6))","y","0",0.340087890625],["(*.f64 x (*.f64 z -6))","z","-inf",0.264892578125],["(*.f64 x (*.f64 z -6))","z","inf",0.43115234375],["(*.f64 x (*.f64 z -6))","z","0",0.447021484375],["(*.f64 x (*.f64 z -6))","x","-inf",0.254150390625],["(*.f64 x (*.f64 z -6))","x","inf",0.440185546875],["(*.f64 x (*.f64 z -6))","x","0",0.51904296875]],"time":10.635986328125,"type":"series"},{"count":[[4,206]],"inputs":[["(*.f64 x (*.f64 z -6))","(*.f64 y (*.f64 z -6))","(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","(+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 z -6)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 z -6)) (*.f64 (*.f64 x (*.f64 z -6)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (*.f64 z -6)) 0) (*.f64 x (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (*.f64 6 z)) 0) (*.f64 x (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 -1) (*.f64 x (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 x (*.f64 6 z))) (*.f64 x (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (*.f64 z -6)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2)) (*.f64 0 (cbrt.f64 (*.f64 x (*.f64 z -6)))))) (+.f64 0 (cbrt.f64 (*.f64 x (*.f64 z -6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2)) (+.f64 0 (*.f64 (cbrt.f64 (*.f64 x (*.f64 z -6))) 0))) (-.f64 (cbrt.f64 (*.f64 x (*.f64 z -6))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z -6)) (*.f64 (cbrt.f64 (*.f64 (*.f64 z z) 36)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 z -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z -6) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x z) -6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -6 (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 x z) (cbrt.f64 -6)) (cbrt.f64 36))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 6 z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z -6) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (cbrt.f64 (*.f64 z -6))) (cbrt.f64 (*.f64 (*.f64 z z) 36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x -6) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 z -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 x (*.f64 6 z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (neg.f64 x) (cbrt.f64 (*.f64 z -6)))) (cbrt.f64 (*.f64 (*.f64 z z) 36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x z)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (neg.f64 (*.f64 x -6))) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (*.f64 6 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2))) (cbrt.f64 (*.f64 x (*.f64 6 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 6 z) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (*.f64 6 z))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 x) (cbrt.f64 (*.f64 z -6))) (neg.f64 (cbrt.f64 (*.f64 (*.f64 z z) 36))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 6 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x -6)) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (*.f64 z -6))) (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2)) (cbrt.f64 (*.f64 x (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (*.f64 z -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 z -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 z -6))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 z -6)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 z -6))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 z -6))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 z -6)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (*.f64 z -6)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z -6)) (*.f64 (cbrt.f64 (*.f64 (*.f64 z z) 36)) x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (*.f64 z -6)) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (*.f64 z -6))) (cbrt.f64 (*.f64 (*.f64 z z) 36)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -6 (*.f64 x z) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 -6 x) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 z -6)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 x (*.f64 6 z)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 z -6) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x z) -6 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x -6) z 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x z) (cbrt.f64 -6)) (cbrt.f64 36) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 z -6) (cbrt.f64 x)) (cbrt.f64 (*.f64 x x)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z -6) x 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2)) (cbrt.f64 (*.f64 x (*.f64 z -6))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (*.f64 z -6))) (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2)) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 z -6)) (*.f64 (*.f64 y (*.f64 z -6)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (*.f64 z -6)) 0) (*.f64 y (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 z -6)) (*.f64 0 (*.f64 y (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 y (*.f64 z -6))) (*.f64 y (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 z -6)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 y (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z -6)) (*.f64 (cbrt.f64 (*.f64 (*.f64 z z) 36)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y z) -6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -6 (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y z) (cbrt.f64 -6)) (cbrt.f64 36))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (cbrt.f64 (*.f64 z -6))) (cbrt.f64 (*.f64 (*.f64 z z) 36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y -6) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 z -6) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 (*.f64 6 z) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 -6 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 y (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (*.f64 z -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (+.f64 (*.f64 (*.f64 6 z) y) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 z -6)) 2)) (-.f64 0 (*.f64 (cbrt.f64 (*.f64 y (*.f64 z -6))) 0))) (+.f64 (cbrt.f64 (*.f64 y (*.f64 z -6))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 y) (*.f64 (cbrt.f64 (*.f64 y y)) (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 z -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z -6) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (*.f64 z -6))) (cbrt.f64 (pow.f64 (*.f64 y (*.f64 z -6)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 y (*.f64 z -6)) 2)) (cbrt.f64 (*.f64 y (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (*.f64 z -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 z -6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 z -6))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (*.f64 z -6)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 z -6))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 z -6))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (*.f64 6 z) y))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (*.f64 z -6)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))) (*.f64 y (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 z -6)) (+.f64 x (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (-.f64 x y)) (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) (*.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) 0) (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 (+.f64 x (*.f64 -4 (-.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) 1) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 z -6)) (*.f64 (+.f64 x (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) (*.f64 0 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y)))) (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 y (*.f64 z -6))) (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) (+.f64 x (*.f64 y (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x (*.f64 y (*.f64 z -6))) (*.f64 -4 (-.f64 x y))) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (+.f64 x (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 -4 (-.f64 x y))) (*.f64 (*.f64 z -6) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 6 z)) (+.f64 (+.f64 x (*.f64 y (*.f64 z -6))) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 x (*.f64 x (*.f64 6 z))) (+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 y (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 (+.f64 x (*.f64 y (*.f64 z -6))) (*.f64 -4 (-.f64 x y))) 0) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 x -4)) (neg.f64 (*.f64 y -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 x)) (neg.f64 (*.f64 -4 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 6 z)) (+.f64 (+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 y (*.f64 z -6))) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 y (*.f64 z -6))) (+.f64 (*.f64 x (*.f64 6 z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 x (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))) 1) (*.f64 y (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (+.f64 x (*.f64 y (*.f64 z -6))) (*.f64 -4 (-.f64 x y))) 1) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -4 (-.f64 x y)) (-.f64 (*.f64 x (*.f64 z -6)) (+.f64 x (*.f64 y (*.f64 z -6)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 y (*.f64 z -6)) (-.f64 (*.f64 x (*.f64 z -6)) (+.f64 x (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 (+.f64 x (*.f64 y (*.f64 z -6))) (*.f64 -4 (-.f64 x y))) 0) (*.f64 x (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 x (*.f64 y (*.f64 z -6))) (*.f64 -4 (-.f64 x y))) (*.f64 x (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (+.f64 x (*.f64 y (*.f64 z -6))) 0) (fma.f64 -6 (*.f64 x z) (*.f64 (-.f64 y x) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (fma.f64 -6 (*.f64 x z) (*.f64 (-.f64 y x) -4)) (+.f64 x (*.f64 y (*.f64 z -6)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 (-.f64 y x) -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) 2)) (cbrt.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))) 2)) (-.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y)))) (cbrt.f64 x)))) (+.f64 (cbrt.f64 (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y)))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (*.f64 x x)) (-.f64 (cbrt.f64 (pow.f64 (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))) 2)) (*.f64 (cbrt.f64 x) (cbrt.f64 (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))))))) (+.f64 (cbrt.f64 x) (cbrt.f64 (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (neg.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (+.f64 x (*.f64 (*.f64 z -6) (-.f64 y x))) (*.f64 -4 (-.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y)))) (cbrt.f64 (pow.f64 (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 6 z)) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 (-.f64 x y)) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 x (*.f64 6 z)) (*.f64 x -4)) (neg.f64 (*.f64 y -4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 x (*.f64 6 z)) (*.f64 -4 x)) (neg.f64 (*.f64 -4 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x -4) (+.f64 (neg.f64 (*.f64 y -4)) (*.f64 x (*.f64 6 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 x) (+.f64 (neg.f64 (*.f64 -4 y)) (*.f64 x (*.f64 6 z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x -4) (-.f64 (neg.f64 (*.f64 y -4)) (*.f64 x (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -4 x) (-.f64 (neg.f64 (*.f64 -4 y)) (*.f64 x (*.f64 z -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) (*.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) 0) (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) (*.f64 0 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))) (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -4 (-.f64 x y)) (*.f64 x (*.f64 z -6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (fma.f64 -6 (*.f64 x z) (*.f64 (-.f64 y x) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (*.f64 6 z)) (*.f64 (-.f64 y x) -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))) (cbrt.f64 (pow.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) 2)) (cbrt.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 (-.f64 y x) -4) (*.f64 x (*.f64 6 z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 -4 (-.f64 x y)) 2)) (*.f64 (cbrt.f64 (*.f64 x (*.f64 6 z))) (cbrt.f64 (*.f64 -4 (-.f64 x y)))))) (+.f64 (cbrt.f64 (*.f64 x (*.f64 6 z))) (cbrt.f64 (*.f64 -4 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 -4 (-.f64 x y)) 2)) (-.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2)) (*.f64 (cbrt.f64 (*.f64 -4 (-.f64 x y))) (cbrt.f64 (*.f64 x (*.f64 6 z)))))) (+.f64 (cbrt.f64 (*.f64 -4 (-.f64 x y))) (cbrt.f64 (*.f64 x (*.f64 6 z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (*.f64 -4 (-.f64 x y)) 2)) (+.f64 (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2)) (*.f64 (cbrt.f64 (*.f64 -4 (-.f64 x y))) (cbrt.f64 (*.f64 x (*.f64 z -6)))))) (-.f64 (cbrt.f64 (*.f64 -4 (-.f64 x y))) (cbrt.f64 (*.f64 x (*.f64 z -6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (fma.f64 -6 (*.f64 x z) (*.f64 (-.f64 y x) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (fma.f64 -6 (*.f64 x z) (*.f64 (-.f64 y x) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (fma.f64 -6 (*.f64 x z) (*.f64 (-.f64 y x) -4)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -4 (-.f64 x y))) (cbrt.f64 (pow.f64 (*.f64 -4 (-.f64 x y)) 2)) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (*.f64 z -6) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 x (*.f64 z -6)) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x y) -4 (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -4 (-.f64 x y) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -4 (-.f64 x y)) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (*.f64 6 z)) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 (-.f64 x y) 2)) -4) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (-.f64 y x) -4) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -4) (*.f64 (cbrt.f64 16) (-.f64 x y)) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (-.f64 x y)) 1 (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -4 (cbrt.f64 (-.f64 x y))) (cbrt.f64 (pow.f64 (-.f64 x y) 2)) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 -4 (-.f64 x y)) 2)) (cbrt.f64 (*.f64 -4 (-.f64 x y))) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 x y) (cbrt.f64 -4)) (cbrt.f64 16) (*.f64 x (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (*.f64 6 z))) (cbrt.f64 (pow.f64 (*.f64 x (*.f64 6 z)) 2)) (*.f64 -4 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (fma.f64 x (*.f64 6 z) (*.f64 -4 (-.f64 x y))))))))"]],"rules":[["egg-rr",55],["egg-rr",55],["egg-rr",32],["egg-rr",64]],"time":44.47412109375,"type":"rewrite"},{"count":[[326,245]],"inputs":[["(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(*.f64 -1 (*.f64 (-.f64 3 (*.f64 6 z)) x))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 3 (*.f64 6 z)) x))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 3 (*.f64 6 z)) x))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 3 (*.f64 6 z)) x))))","(-.f64 (+.f64 (*.f64 -4 x) x) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(*.f64 (+.f64 4 (*.f64 -6 z)) y)","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)) (*.f64 -6 (*.f64 z x)))","(+.f64 (*.f64 -4 (-.f64 x y)) x)","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z)","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 y) (*.f64 6 x)) z))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 x (*.f64 -1 (*.f64 (-.f64 (*.f64 6 y) (*.f64 6 x)) z))))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 x (*.f64 -1 (*.f64 (-.f64 (*.f64 6 y) (*.f64 6 x)) z))))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 x (*.f64 -1 (*.f64 (-.f64 (*.f64 6 y) (*.f64 6 x)) z))))","(*.f64 4 y)","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(*.f64 -1 (*.f64 (-.f64 4 (*.f64 6 z)) x))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (-.f64 4 (*.f64 6 z)) x)))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (-.f64 4 (*.f64 6 z)) x)))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (-.f64 4 (*.f64 6 z)) x)))","(*.f64 -4 (-.f64 x y))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(*.f64 6 (*.f64 z x))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(*.f64 6 (*.f64 z x))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(-.f64 (*.f64 -4 x) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(*.f64 4 y)","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(*.f64 4 y)","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 z x))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(*.f64 -6 (*.f64 y z))","(+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z)))","(fma.f64 4 y (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 y 4 (fma.f64 -6 (*.f64 y z) (*.f64 x (fma.f64 z 6 (neg.f64 3)))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 y 4 (fma.f64 -6 (*.f64 y z) (*.f64 x (fma.f64 z 6 (neg.f64 3)))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 y 4 (fma.f64 -6 (*.f64 y z) (*.f64 x (fma.f64 z 6 (neg.f64 3)))))","(*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x))","(*.f64 x (fma.f64 z 6 (neg.f64 3)))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 y 4 (fma.f64 -6 (*.f64 y z) (*.f64 x (fma.f64 z 6 (neg.f64 3)))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 y 4 (fma.f64 -6 (*.f64 y z) (*.f64 x (fma.f64 z 6 (neg.f64 3)))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -1 (*.f64 (+.f64 3 (*.f64 -6 z)) x)) (*.f64 -6 (*.f64 y z))))","(fma.f64 y 4 (fma.f64 -6 (*.f64 y z) (*.f64 x (fma.f64 z 6 (neg.f64 3)))))","(*.f64 -1 (*.f64 (-.f64 3 (*.f64 6 z)) x))","(*.f64 x (fma.f64 z 6 (neg.f64 3)))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 3 (*.f64 6 z)) x))))","(fma.f64 y 4 (fma.f64 -6 (*.f64 y z) (*.f64 x (fma.f64 z 6 (neg.f64 3)))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 3 (*.f64 6 z)) x))))","(fma.f64 y 4 (fma.f64 -6 (*.f64 y z) (*.f64 x (fma.f64 z 6 (neg.f64 3)))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 -6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 3 (*.f64 6 z)) x))))","(fma.f64 y 4 (fma.f64 -6 (*.f64 y z) (*.f64 x (fma.f64 z 6 (neg.f64 3)))))","(-.f64 (+.f64 (*.f64 -4 x) x) (*.f64 -6 (*.f64 z x)))","(*.f64 x (+.f64 -3 (*.f64 6 z)))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(+.f64 (fma.f64 (fma.f64 -6 z 4) y x) (*.f64 (fma.f64 6 z -4) x))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(+.f64 (fma.f64 (fma.f64 -6 z 4) y x) (*.f64 (fma.f64 6 z -4) x))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(+.f64 (fma.f64 (fma.f64 -6 z 4) y x) (*.f64 (fma.f64 6 z -4) x))","(*.f64 (+.f64 4 (*.f64 -6 z)) y)","(*.f64 (fma.f64 -6 z 4) y)","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(+.f64 (fma.f64 (fma.f64 -6 z 4) y x) (*.f64 (fma.f64 6 z -4) x))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(+.f64 (fma.f64 (fma.f64 -6 z 4) y x) (*.f64 (fma.f64 6 z -4) x))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 (+.f64 4 (*.f64 -6 z)) y) x)) (*.f64 -6 (*.f64 z x)))","(+.f64 (fma.f64 (fma.f64 -6 z 4) y x) (*.f64 (fma.f64 6 z -4) x))","(*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))","(*.f64 (fma.f64 -6 z 4) y)","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)) (*.f64 -6 (*.f64 z x)))","(+.f64 (fma.f64 (fma.f64 -6 z 4) y x) (*.f64 (fma.f64 6 z -4) x))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)) (*.f64 -6 (*.f64 z x)))","(+.f64 (fma.f64 (fma.f64 -6 z 4) y x) (*.f64 (fma.f64 6 z -4) x))","(-.f64 (+.f64 (*.f64 -4 x) (+.f64 (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))) x)) (*.f64 -6 (*.f64 z x)))","(+.f64 (fma.f64 (fma.f64 -6 z 4) y x) (*.f64 (fma.f64 6 z -4) x))","(+.f64 (*.f64 -4 (-.f64 x y)) x)","(fma.f64 -4 (-.f64 x y) x)","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(fma.f64 -4 (-.f64 x y) (fma.f64 (*.f64 -6 (-.f64 y x)) z x))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(fma.f64 -4 (-.f64 x y) (fma.f64 (*.f64 -6 (-.f64 y x)) z x))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(fma.f64 -4 (-.f64 x y) (fma.f64 (*.f64 -6 (-.f64 y x)) z x))","(*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z)","(*.f64 (*.f64 -6 (-.f64 y x)) z)","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(fma.f64 -4 (-.f64 x y) (fma.f64 (*.f64 -6 (-.f64 y x)) z x))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(fma.f64 -4 (-.f64 x y) (fma.f64 (*.f64 -6 (-.f64 y x)) z x))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 (*.f64 (-.f64 (*.f64 -6 y) (*.f64 -6 x)) z) x))","(fma.f64 -4 (-.f64 x y) (fma.f64 (*.f64 -6 (-.f64 y x)) z x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 y) (*.f64 6 x)) z))","(*.f64 (*.f64 -6 (-.f64 y x)) z)","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 x (*.f64 -1 (*.f64 (-.f64 (*.f64 6 y) (*.f64 6 x)) z))))","(fma.f64 -4 (-.f64 x y) (fma.f64 (*.f64 -6 (-.f64 y x)) z x))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 x (*.f64 -1 (*.f64 (-.f64 (*.f64 6 y) (*.f64 6 x)) z))))","(fma.f64 -4 (-.f64 x y) (fma.f64 (*.f64 -6 (-.f64 y x)) z x))","(+.f64 (*.f64 -4 (-.f64 x y)) (+.f64 x (*.f64 -1 (*.f64 (-.f64 (*.f64 6 y) (*.f64 6 x)) z))))","(fma.f64 -4 (-.f64 x y) (fma.f64 (*.f64 -6 (-.f64 y x)) z x))","(*.f64 4 y)","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x))","(*.f64 (fma.f64 6 z -4) x)","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (+.f64 4 (*.f64 -6 z)) x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(*.f64 -1 (*.f64 (-.f64 4 (*.f64 6 z)) x))","(*.f64 (fma.f64 6 z -4) x)","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (-.f64 4 (*.f64 6 z)) x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (-.f64 4 (*.f64 6 z)) x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 (-.f64 4 (*.f64 6 z)) x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(*.f64 -4 (-.f64 x y))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(fma.f64 -4 (-.f64 x y) (*.f64 (*.f64 6 z) x))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(fma.f64 -4 (-.f64 x y) (*.f64 (*.f64 6 z) x))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(fma.f64 -4 (-.f64 x y) (*.f64 (*.f64 6 z) x))","(*.f64 6 (*.f64 z x))","(*.f64 (*.f64 6 z) x)","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(fma.f64 -4 (-.f64 x y) (*.f64 (*.f64 6 z) x))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(fma.f64 -4 (-.f64 x y) (*.f64 (*.f64 6 z) x))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(fma.f64 -4 (-.f64 x y) (*.f64 (*.f64 6 z) x))","(*.f64 6 (*.f64 z x))","(*.f64 (*.f64 6 z) x)","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(fma.f64 -4 (-.f64 x y) (*.f64 (*.f64 6 z) x))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(fma.f64 -4 (-.f64 x y) (*.f64 (*.f64 6 z) x))","(+.f64 (*.f64 -4 (-.f64 x y)) (*.f64 6 (*.f64 z x)))","(fma.f64 -4 (-.f64 x y) (*.f64 (*.f64 6 z) x))","(-.f64 (*.f64 -4 x) (*.f64 -6 (*.f64 z x)))","(*.f64 (fma.f64 6 z -4) x)","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(*.f64 4 y)","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(*.f64 4 y)","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))","(-.f64 (+.f64 (*.f64 4 y) (*.f64 -4 x)) (*.f64 -6 (*.f64 z x)))","(fma.f64 (fma.f64 6 z -4) x (*.f64 4 y))"]],"time":373.7109375,"type":"simplify"},{"compiler":[[5418,3286]],"time":59.5830078125,"type":"eval"},{"alts":[["(fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))))","fresh",14.510921357001035],["(fma.f64 (*.f64 (-.f64 2/3 z) (-.f64 y x)) 6 x)","fresh",0.4466400390737681],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))","done",0.3551750488422101],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (neg.f64 (fma.f64 -6 (*.f64 x z) (*.f64 (-.f64 y x) -4)))))","fresh",0.17578125],["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","next",0.1640625],["(+.f64 x (+.f64 (*.f64 (*.f64 (*.f64 y z) (cbrt.f64 -6)) (cbrt.f64 36)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","fresh",0.16634750976844204],["(fma.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (cbrt.f64 (-.f64 2/3 z))) (pow.f64 (-.f64 2/3 z) 2/3) x)","fresh",14.707635927774254]],"compiler":[[23,15],[13,9],[16,12],[22,15],[17,12],[27,20],[20,15],[23,15],[13,9],[22,15],[17,12],[27,20],[20,15]],"count":[[252,7]],"kept":[{"done":[1,1],"fresh":[5,3],"new":[245,3],"picked":[1,0]}],"min-error":[0],"time":99.85205078125,"type":"prune"},{"compiler":[[47,27]],"locations":[["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))",0.00390625,true],["(fma.f64 6 z -3)",0.0546875,true],["(fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))",0.10546875,true],["(*.f64 -6 (*.f64 y z))",0.270195019536884,true]],"time":10.7880859375,"type":"localize"},{"count":[[4,84]],"series":[["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","z","-inf",0.218994140625],["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","z","inf",0.18310546875],["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","z","0",0.2470703125],["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","x","-inf",0.181884765625],["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","x","inf",0.18212890625],["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","x","0",0.260009765625],["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","y","-inf",0.303955078125],["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","y","inf",0.22900390625],["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","y","0",0.2529296875],["(fma.f64 6 z -3)","z","-inf",0.13818359375],["(fma.f64 6 z -3)","z","inf",0.137939453125],["(fma.f64 6 z -3)","z","0",0.166015625],["(fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))","y","-inf",0.1708984375],["(fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))","y","inf",0.197998046875],["(fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))","y","0",0.264892578125],["(fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))","z","-inf",0.404052734375],["(fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))","z","inf",0.341796875],["(fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))","z","0",0.345947265625],["(fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))","x","-inf",0.323974609375],["(fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))","x","inf",0.2470703125],["(fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))","x","0",0.366943359375],["(*.f64 -6 (*.f64 y z))","z","-inf",0.152099609375],["(*.f64 -6 (*.f64 y z))","z","inf",0.15283203125],["(*.f64 -6 (*.f64 y z))","z","0",0.1708984375],["(*.f64 -6 (*.f64 y z))","y","-inf",0.157958984375],["(*.f64 -6 (*.f64 y z))","y","inf",0.169921875],["(*.f64 -6 (*.f64 y z))","y","0",0.219970703125]],"time":6.54296875,"type":"series"},{"count":[[4,147]],"inputs":[["(*.f64 -6 (*.f64 y z))","(fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))","(fma.f64 6 z -3)","(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (*.f64 y z)) (*.f64 (*.f64 -6 (*.f64 y z)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -6 (*.f64 y z)) 0) (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (*.f64 y z)) (*.f64 0 (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (*.f64 -6 (*.f64 y z))) (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -6 (*.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y z) -6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -6 y) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 -6 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -6 z) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 -6 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y z)) (*.f64 (pow.f64 (*.f64 y z) 2/3) -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (*.f64 y z) 2/3) -6) (cbrt.f64 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 36) (*.f64 y z)) (cbrt.f64 -6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -6 (*.f64 y z))) (pow.f64 (*.f64 -6 (*.f64 y z)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 -6 (*.f64 y z)) 2/3) (cbrt.f64 (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 y z) (cbrt.f64 -6)) (cbrt.f64 36))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -6 y) (cbrt.f64 z)) (pow.f64 z 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -216 (*.f64 y z))) (pow.f64 (*.f64 y z) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 y z) 2/3) (cbrt.f64 (*.f64 -216 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 36) (*.f64 (*.f64 y z) (cbrt.f64 -6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 z 2/3) (*.f64 (*.f64 -6 y) (cbrt.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 -6 (*.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -6 (*.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -6 (*.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -6 (*.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -6 (*.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -6 (*.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -6 (*.f64 y z)) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 -6 (*.f64 y z)) (*.f64 x (*.f64 6 z))) (*.f64 x -3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) (*.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 0) (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (fma.f64 6 z -3)) (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) (*.f64 0 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (*.f64 y z)) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 6 z)) (+.f64 (*.f64 x -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) (pow.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 2/3) (cbrt.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (fma.f64 6 z -3))) (cbrt.f64 (pow.f64 (*.f64 x (fma.f64 6 z -3)) 2)) (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (fma.f64 6 z -3))) (pow.f64 (fma.f64 6 z -3) 2/3) (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) (fma.f64 6 z -3)) (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 6 z -3) x (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 -6 (*.f64 y z)) 2/3) (cbrt.f64 (*.f64 -6 (*.f64 y z))) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y z)) (*.f64 (pow.f64 (*.f64 y z) 2/3) -6) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 y) z (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -6 (*.f64 y z))) (pow.f64 (*.f64 -6 (*.f64 y z)) 2/3) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 -6 z) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -216 (*.f64 y z))) (pow.f64 (*.f64 y z) 2/3) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 z) y (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 y z) (cbrt.f64 -6)) (cbrt.f64 36) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 -6 y) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -6) (*.f64 (cbrt.f64 36) (*.f64 y z)) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y z) -6 (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -6 (*.f64 y z) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 -6 y) (cbrt.f64 z)) (pow.f64 z 2/3) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 -6 (*.f64 y z))) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (fma.f64 6 z -3)) (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (fma.f64 6 z -3)) 1 (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -6 (*.f64 y z)) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 (*.f64 y z)) 1 (*.f64 x (fma.f64 6 z -3)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 6 z -3) (*.f64 (fma.f64 6 z -3) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 6 z -3) 0) (fma.f64 6 z -3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 6 z -3) (*.f64 0 (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 6 z -3)) (fma.f64 6 z -3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 6 z) -3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -3 (*.f64 6 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 6 z) 3) -27) (/.f64 1 (-.f64 (+.f64 (*.f64 (*.f64 z z) 36) 9) (*.f64 (*.f64 6 z) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 6 z -3)) (pow.f64 (fma.f64 6 z -3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 6 z -3) 2/3) (cbrt.f64 (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 6 z -3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 6 z -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 6 z -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 6 z) 3) -27) (+.f64 9 (-.f64 (*.f64 (*.f64 z z) 36) (*.f64 (*.f64 6 z) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 6 z) 3) -27)) (neg.f64 (-.f64 (+.f64 (*.f64 (*.f64 z z) 36) 9) (*.f64 (*.f64 6 z) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 6 z) 3) -27) (-.f64 (+.f64 (*.f64 (*.f64 z z) 36) 9) (*.f64 (*.f64 6 z) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (*.f64 6 z) 3) -27) 1) (-.f64 (+.f64 (*.f64 (*.f64 z z) 36) 9) (*.f64 (*.f64 6 z) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 6 z -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 6 z -3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 6 z -3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 6 z -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 6 z -3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 -3) (cbrt.f64 9) (*.f64 6 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 9) (cbrt.f64 -3) (*.f64 6 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 6 z -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 6) (*.f64 (sqrt.f64 6) z) -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z 6 -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 6) (*.f64 (cbrt.f64 36) z) -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 216 z)) (pow.f64 z 2/3) -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 6 z)) (cbrt.f64 (*.f64 (*.f64 z z) 36)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 6 z) 1 -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 6 z) -3)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -3 1 (*.f64 6 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 3 (*.f64 6 z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 -3 (*.f64 6 z))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 4 y (*.f64 x (fma.f64 6 z -3))) (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) (*.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) 0) (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 y) (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 4 y (*.f64 x (fma.f64 6 z -3))) 1) (*.f64 -6 (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) (*.f64 0 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))) (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) (*.f64 4 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 (*.f64 y z)) (fma.f64 4 y (*.f64 x (fma.f64 6 z -3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z))) (*.f64 x (fma.f64 6 z -3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (fma.f64 6 z -3)) (+.f64 (*.f64 -6 (*.f64 y z)) (*.f64 4 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))) (pow.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) 2/3) (cbrt.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 2/3) (cbrt.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) (*.f64 4 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) (pow.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 2/3) (*.f64 4 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 4 y)) (cbrt.f64 (*.f64 16 (*.f64 y y))) (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 64 y)) (pow.f64 y 2/3) (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y 4 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 4) (*.f64 (cbrt.f64 16) y) (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z)))) (*.f64 4 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 2 y) (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) (*.f64 4 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))) 1 (*.f64 4 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 4 y) 1 (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 4 y) (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))))))"]],"rules":[["egg-rr",36],["egg-rr",36],["egg-rr",43],["egg-rr",32]],"time":34.69287109375,"type":"rewrite"},{"count":[[231,177]],"inputs":[["(*.f64 -6 (*.f64 y z))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(*.f64 -3 x)","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z)","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(+.f64 (*.f64 -3 x) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))))","(+.f64 (*.f64 -3 x) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))))","(+.f64 (*.f64 -3 x) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(*.f64 -6 (*.f64 y z))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(*.f64 -6 (*.f64 y z))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","-3","(-.f64 (*.f64 6 z) 3)","(-.f64 (*.f64 6 z) 3)","(-.f64 (*.f64 6 z) 3)","(*.f64 6 z)","(-.f64 (*.f64 6 z) 3)","(-.f64 (*.f64 6 z) 3)","(-.f64 (*.f64 6 z) 3)","(*.f64 6 z)","(-.f64 (*.f64 6 z) 3)","(-.f64 (*.f64 6 z) 3)","(-.f64 (*.f64 6 z) 3)","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(*.f64 (+.f64 4 (*.f64 -6 z)) y)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))))","(+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z)))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(+.f64 (*.f64 -3 x) (*.f64 4 y))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z)","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(+.f64 (*.f64 -3 x) (+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))))","(+.f64 (*.f64 -3 x) (+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))))","(+.f64 (*.f64 -3 x) (+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -6 (*.f64 y z))","(*.f64 (*.f64 -6 z) y)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(*.f64 (fma.f64 6 z -3) x)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(*.f64 (fma.f64 6 z -3) x)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(*.f64 -3 x)","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (*.f64 -3 x))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (*.f64 -3 x))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (*.f64 -3 x))","(*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z)","(*.f64 (fma.f64 6 x (*.f64 -6 y)) z)","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (*.f64 -3 x))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (*.f64 -3 x))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (*.f64 -3 x))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (*.f64 -3 x))","(*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(*.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x)))","(+.f64 (*.f64 -3 x) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))))","(fma.f64 -3 x (*.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x))))","(+.f64 (*.f64 -3 x) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))))","(fma.f64 -3 x (*.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x))))","(+.f64 (*.f64 -3 x) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))))","(fma.f64 -3 x (*.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x))))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(*.f64 (fma.f64 6 z -3) x)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(*.f64 -6 (*.f64 y z))","(*.f64 (*.f64 -6 z) y)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(*.f64 -6 (*.f64 y z))","(*.f64 (*.f64 -6 z) y)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z)))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (*.f64 -6 z) y))","-3","(-.f64 (*.f64 6 z) 3)","(fma.f64 6 z -3)","(-.f64 (*.f64 6 z) 3)","(fma.f64 6 z -3)","(-.f64 (*.f64 6 z) 3)","(fma.f64 6 z -3)","(*.f64 6 z)","(-.f64 (*.f64 6 z) 3)","(fma.f64 6 z -3)","(-.f64 (*.f64 6 z) 3)","(fma.f64 6 z -3)","(-.f64 (*.f64 6 z) 3)","(fma.f64 6 z -3)","(*.f64 6 z)","(-.f64 (*.f64 6 z) 3)","(fma.f64 6 z -3)","(-.f64 (*.f64 6 z) 3)","(fma.f64 6 z -3)","(-.f64 (*.f64 6 z) 3)","(fma.f64 6 z -3)","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(*.f64 (fma.f64 6 z -3) x)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(*.f64 (+.f64 4 (*.f64 -6 z)) y)","(*.f64 (fma.f64 z -6 4) y)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 (+.f64 4 (*.f64 -6 z)) y))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4)))","(*.f64 (fma.f64 z -6 4) y)","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -1 (*.f64 y (-.f64 (*.f64 6 z) 4))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 4 y) (*.f64 -6 (*.f64 y z)))","(*.f64 (fma.f64 z -6 4) y)","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(*.f64 (fma.f64 6 z -3) x)","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(*.f64 (-.f64 (*.f64 6 z) 3) x)","(*.f64 (fma.f64 6 z -3) x)","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 4 y) (+.f64 (*.f64 (-.f64 (*.f64 6 z) 3) x) (*.f64 -6 (*.f64 y z))))","(fma.f64 (fma.f64 6 z -3) x (*.f64 (fma.f64 z -6 4) y))","(+.f64 (*.f64 -3 x) (*.f64 4 y))","(fma.f64 -3 x (*.f64 4 y))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (fma.f64 -3 x (*.f64 4 y)))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (fma.f64 -3 x (*.f64 4 y)))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (fma.f64 -3 x (*.f64 4 y)))","(*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z)","(*.f64 (fma.f64 6 x (*.f64 -6 y)) z)","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (fma.f64 -3 x (*.f64 4 y)))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (fma.f64 -3 x (*.f64 4 y)))","(+.f64 (*.f64 (+.f64 (*.f64 6 x) (*.f64 -6 y)) z) (+.f64 (*.f64 -3 x) (*.f64 4 y)))","(fma.f64 (fma.f64 6 x (*.f64 -6 y)) z (fma.f64 -3 x (*.f64 4 y)))","(*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(*.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x)))","(+.f64 (*.f64 -3 x) (+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))))","(fma.f64 x -3 (fma.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x)) (*.f64 4 y)))","(+.f64 (*.f64 -3 x) (+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))))","(fma.f64 x -3 (fma.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x)) (*.f64 4 y)))","(+.f64 (*.f64 -3 x) (+.f64 (*.f64 4 y) (*.f64 -1 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))))","(fma.f64 x -3 (fma.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x)) (*.f64 4 y)))"]],"time":233.550048828125,"type":"simplify"},{"compiler":[[3160,2005]],"time":45.0009765625,"type":"eval"},{"alts":[["(fma.f64 x -3 (fma.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x)) (*.f64 4 y)))","fresh",0.10546875],["(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (neg.f64 (fma.f64 -6 (*.f64 x z) (*.f64 (-.f64 y x) -4)))))","fresh",0.17578125],["(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","done",0.1640625],["(+.f64 x (+.f64 (*.f64 (*.f64 (*.f64 y z) (cbrt.f64 -6)) (cbrt.f64 36)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","fresh",0.16634750976844204]],"compiler":[[18,13],[22,15],[17,12],[27,20]],"count":[[184,4]],"kept":[{"done":[1,0],"fresh":[5,2],"new":[177,1],"picked":[1,1]}],"min-error":[0],"time":56.373046875,"type":"prune"},{"accuracy":[0.10546875],"baseline":[0.10546875],"branch":[["x",0.10546875,1],["y",0.10546875,1],["z",0.10546875,1],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))",0.10546875,1],["(-.f64 (/.f64 2 3) z)",0.10546875,1],["(-.f64 (/.f64 2 3) z)",0.10546875,1]],"compiler":[[4,3],[4,3],[4,3],[16,12],[8,7],[8,7],[278,167]],"count":[[17,1]],"inputs":[["(fma.f64 x -3 (fma.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x)) (*.f64 4 y)))","(fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (+.f64 (*.f64 (*.f64 z -6) (-.f64 y x)) (*.f64 -4 (-.f64 x y))))","(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (neg.f64 (fma.f64 -6 (*.f64 x z) (*.f64 (-.f64 y x) -4)))))","(+.f64 x (+.f64 (*.f64 (*.f64 (*.f64 y z) (cbrt.f64 -6)) (cbrt.f64 36)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (cbrt.f64 (*.f64 z -6)) (*.f64 (cbrt.f64 (*.f64 36 (*.f64 z z))) (-.f64 y x)))))","(fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (-.f64 y x) (+.f64 4 (*.f64 z -6))))","(+.f64 x (+.f64 (*.f64 y (*.f64 z -6)) (+.f64 (neg.f64 (*.f64 x (*.f64 z -6))) (*.f64 -4 (-.f64 x y)))))","(fma.f64 4 y (fma.f64 x (fma.f64 6 z -3) (*.f64 -6 (*.f64 y z))))","(+.f64 x (*.f64 (-.f64 y x) (+.f64 4 (*.f64 -6 z))))","(fma.f64 (*.f64 (-.f64 2/3 z) (-.f64 y x)) 6 x)","(+.f64 x (+.f64 (*.f64 (-.f64 y x) 4) (*.f64 (-.f64 y x) (neg.f64 (*.f64 z 6)))))","(pow.f64 (cbrt.f64 (fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)) 3)","(+.f64 (*.f64 (+.f64 1 (*.f64 -6 (-.f64 2/3 z))) x) (*.f64 6 (*.f64 y (-.f64 2/3 z))))","(+.f64 x (*.f64 (*.f64 (*.f64 (-.f64 y x) (cbrt.f64 6)) (cbrt.f64 36)) (-.f64 (/.f64 2 3) z)))","(fma.f64 (*.f64 (*.f64 -6 (-.f64 x y)) (cbrt.f64 (-.f64 2/3 z))) (pow.f64 (-.f64 2/3 z) 2/3) x)","(fma.f64 (-.f64 2/3 z) (*.f64 -6 (-.f64 x y)) x)","(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))"]],"link":["."],"name":["Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, D"],"oracle":[29.65301042807311],"outputs":[["(fma.f64 x -3 (fma.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x)) (*.f64 4 y)))"]],"time":36.214111328125,"times":[["x",5.8251953125],["y",5.72607421875],["z",5.842041015625],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) (-.f64 (/.f64 2 3) z)))",6.031005859375],["(-.f64 (/.f64 2 3) z)",3.751953125],["(-.f64 (/.f64 2 3) z)",4.06494140625]],"type":"regimes"},{"compiler":[[18,13]],"inputs":[["(fma.f64 x -3 (fma.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x)) (*.f64 4 y)))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 x -3 (fma.f64 (neg.f64 z) (fma.f64 6 y (*.f64 -6 x)) (*.f64 4 y)))","(fma.f64 x -3 (fma.f64 (neg.f64 z) (fma.f64 -6 x (*.f64 6 y)) (*.f64 4 y)))"]],"stop":[["fuel",1]],"time":20.101806640625,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[18,13]],"remove-preprocessing":[[]],"time":11.198974609375,"type":"end"}]