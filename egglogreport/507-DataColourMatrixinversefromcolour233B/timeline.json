[{"compiler":[[15,10]],"method":["search"],"sampling":[[12,0.046760670786183844,0.9508003059857382,0.0024390232280779856],[11,0.031173780524122563,0.9663871962477995,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":161.882080078125,"type":"analyze"},{"outcomes":[["body",256,"invalid",156.1923828125,3159],["body",256,"valid",417.6376953125,8256]],"time":584.554931640625,"type":"sample"},{"compiler":[[14,9]],"inputs":[["0","1","2","3","4"],["(/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 z t)) a)","(/.f64 (-.f64 (*.f64 z y) (*.f64 x t)) a)","(/.f64 (-.f64 (*.f64 t y) (*.f64 z x)) a)","(/.f64 (-.f64 (*.f64 a y) (*.f64 z t)) x)","(/.f64 (-.f64 (*.f64 x z) (*.f64 y t)) a)","(/.f64 (-.f64 (*.f64 x t) (*.f64 z y)) a)","(/.f64 (-.f64 (*.f64 x a) (*.f64 z t)) y)","(/.f64 (-.f64 (*.f64 x y) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 x y) (*.f64 a t)) z)","(/.f64 (-.f64 (*.f64 x y) (*.f64 z a)) t)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)","(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 z t)) a)","(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","(/.f64 (-.f64 (*.f64 z y) (*.f64 x t)) a)","(/.f64 (fma.f64 z y (neg.f64 (*.f64 x t))) a)","(/.f64 (-.f64 (*.f64 t y) (*.f64 z x)) a)","(/.f64 (fma.f64 t y (neg.f64 (*.f64 z x))) a)","(/.f64 (-.f64 (*.f64 a y) (*.f64 z t)) x)","(/.f64 (fma.f64 a y (neg.f64 (*.f64 z t))) x)","(/.f64 (-.f64 (*.f64 x z) (*.f64 y t)) a)","(/.f64 (fma.f64 x z (neg.f64 (*.f64 t y))) a)","(/.f64 (-.f64 (*.f64 x t) (*.f64 z y)) a)","(/.f64 (fma.f64 x t (neg.f64 (*.f64 z y))) a)","(/.f64 (-.f64 (*.f64 x a) (*.f64 z t)) y)","(/.f64 (fma.f64 x a (neg.f64 (*.f64 z t))) y)","(/.f64 (-.f64 (*.f64 x y) (*.f64 t z)) a)","(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","(/.f64 (-.f64 (*.f64 x y) (*.f64 a t)) z)","(/.f64 (fma.f64 x y (neg.f64 (*.f64 a t))) z)","(/.f64 (-.f64 (*.f64 x y) (*.f64 z a)) t)","(/.f64 (fma.f64 x y (neg.f64 (*.f64 z a))) t)"]],"symmetry":[[]],"time":106.52099609375,"type":"preprocess"},{"count":[[1,2]],"inputs":[["(/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)","(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)"]],"time":18.791015625,"type":"simplify"},{"compiler":[[23,12]],"time":0.381103515625,"type":"eval"},{"alts":[["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","next",8.105806956345557]],"compiler":[[14,9],[14,9]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[8.105806956345557],"time":2.35595703125,"type":"prune"},{"compiler":[[33,9]],"locations":[["(fma.f64 x y (neg.f64 (*.f64 z t)))",0.01171875,true],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)",7.680897692738472,true]],"time":6.421875,"type":"localize"},{"count":[[2,108]],"series":[["(fma.f64 x y (neg.f64 (*.f64 z t)))","t","-inf",0.155029296875],["(fma.f64 x y (neg.f64 (*.f64 z t)))","t","inf",0.15087890625],["(fma.f64 x y (neg.f64 (*.f64 z t)))","t","0",0.175048828125],["(fma.f64 x y (neg.f64 (*.f64 z t)))","z","-inf",0.154052734375],["(fma.f64 x y (neg.f64 (*.f64 z t)))","z","inf",0.177001953125],["(fma.f64 x y (neg.f64 (*.f64 z t)))","z","0",0.155029296875],["(fma.f64 x y (neg.f64 (*.f64 z t)))","y","-inf",0.153076171875],["(fma.f64 x y (neg.f64 (*.f64 z t)))","y","inf",0.175048828125],["(fma.f64 x y (neg.f64 (*.f64 z t)))","y","0",0.164794921875],["(fma.f64 x y (neg.f64 (*.f64 z t)))","x","-inf",0.162109375],["(fma.f64 x y (neg.f64 (*.f64 z t)))","x","inf",0.1728515625],["(fma.f64 x y (neg.f64 (*.f64 z t)))","x","0",0.161865234375],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","a","-inf",0.35009765625],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","a","inf",0.3818359375],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","a","0",0.52197265625],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","t","-inf",0.386962890625],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","t","inf",0.407958984375],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","t","0",0.39794921875],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","z","-inf",0.365966796875],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","z","inf",0.694091796875],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","z","0",0.447021484375],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","y","-inf",0.4521484375],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","y","inf",0.4140625],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","y","0",0.39794921875],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","x","-inf",0.592041015625],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","x","inf",0.48486328125],["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","x","0",0.5771484375]],"time":9.190185546875,"type":"series"},{"count":[[2,113]],"inputs":[["(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","(fma.f64 x y (neg.f64 (*.f64 z t)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))) (*.f64 (/.f64 1 a) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 0) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) (*.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 z t)) (/.f64 1 a)) (*.f64 (*.f64 x y) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x y) (/.f64 1 a)) (*.f64 (neg.f64 (*.f64 z t)) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) (*.f64 0 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x y) a) (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) -1) (/.f64 (neg.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) (cbrt.f64 (neg.f64 a))) (/.f64 (neg.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3)) (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a -1/3) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (*.f64 z t) (*.f64 x y))) 1) (/.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (*.f64 z t) (*.f64 x y))) (cbrt.f64 a)) (/.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) (neg.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) -1) (/.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) (/.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)) (pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (fma.f64 x y (neg.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 2/3) (cbrt.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) a) (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (pow.f64 a 2/3)) (pow.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (-.f64 (*.f64 z t) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 a -1/3)) (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 a -1/3)) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (neg.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) -1) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) -2) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) (pow.f64 a 2/3)) (/.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) a) (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) -1) (/.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) (cbrt.f64 a)) (/.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) (/.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)) (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a 2/3))) (pow.f64 (cbrt.f64 (pow.f64 a 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (cbrt.f64 a)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)) (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 a -1/3) (fma.f64 x y (neg.f64 (*.f64 z t)))) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 2/3) (cbrt.f64 (-.f64 (*.f64 z t) (*.f64 x y)))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 2/3) (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t))))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (cbrt.f64 a)) 1) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (pow.f64 a 2/3)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (*.f64 z t) (*.f64 x y))) (pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 2/3)) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (cbrt.f64 a)) 1) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (cbrt.f64 a)) (neg.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (cbrt.f64 a))) (neg.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 z t)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 0) (fma.f64 x y (neg.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (*.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (neg.f64 (*.f64 x y))) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 x y (neg.f64 (*.f64 z t)))) (fma.f64 x y (neg.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (*.f64 0 (fma.f64 x y (neg.f64 (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 x y)) -1) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x y (neg.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x y) (*.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 z t) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 z t) (*.f64 x y))) (neg.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) -1) (/.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 2/3) -1) (/.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x y (neg.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 z t) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 z t) (*.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z t) (*.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x y (neg.f64 (*.f64 z t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 z t) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x y (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) y) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 y)) (pow.f64 y 2/3) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y x (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z t)) (neg.f64 (pow.f64 (*.f64 z t) 2/3)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 z) (*.f64 (pow.f64 z 2/3) (neg.f64 t)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (cbrt.f64 t)) (pow.f64 t 2/3) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 z t))) (pow.f64 (*.f64 z t) 2/3) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (neg.f64 t) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (neg.f64 z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) t (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 z t) 2/3) (cbrt.f64 (neg.f64 (*.f64 z t))) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 t) z (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 z t) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z t) -1 (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x y) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 z t)) 1 (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 z t)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) 1 (neg.f64 (*.f64 z t)))))))"]],"rules":[["egg-rr",50],["egg-rr",63]],"time":28.8388671875,"type":"rewrite"},{"count":[[221,124]],"inputs":[["(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))"]],"time":324.2041015625,"type":"simplify"},{"compiler":[[1804,501]],"time":14.173828125,"type":"eval"},{"alts":[["(/.f64 (fma.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (neg.f64 (*.f64 z t))) a)","fresh",16.259928619012705],["(/.f64 (neg.f64 (*.f64 t z)) a)","fresh",33.706733746560275],["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)) 3)","fresh",8.536974729861932],["(/.f64 (*.f64 y x) a)","fresh",34.70020266497108],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","next",8.117525706345557],["(+.f64 (*.f64 (*.f64 x y) (/.f64 1 a)) (*.f64 (neg.f64 (*.f64 z t)) (/.f64 1 a)))","fresh",8.205748216114],["(*.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)) (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (cbrt.f64 a)))","fresh",8.525919749398817]],"compiler":[[22,14],[11,8],[17,12],[10,7],[14,9],[21,15],[21,14],[22,14],[11,8],[17,12],[10,7],[14,9],[21,15],[21,14]],"count":[[125,7]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[124,7],"picked":[1,0]}],"min-error":[7.791927694074802],"time":30.26611328125,"type":"prune"},{"compiler":[[31,9]],"locations":[["(fma.f64 (neg.f64 z) t (*.f64 x y))",0.01171875,true],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)",7.680897692738472,true]],"time":6.10791015625,"type":"localize"},{"count":[[2,108]],"series":[["(fma.f64 (neg.f64 z) t (*.f64 x y))","y","-inf",0.14794921875],["(fma.f64 (neg.f64 z) t (*.f64 x y))","y","inf",0.148193359375],["(fma.f64 (neg.f64 z) t (*.f64 x y))","y","0",0.1669921875],["(fma.f64 (neg.f64 z) t (*.f64 x y))","x","-inf",0.14892578125],["(fma.f64 (neg.f64 z) t (*.f64 x y))","x","inf",0.14794921875],["(fma.f64 (neg.f64 z) t (*.f64 x y))","x","0",0.16796875],["(fma.f64 (neg.f64 z) t (*.f64 x y))","t","-inf",0.152099609375],["(fma.f64 (neg.f64 z) t (*.f64 x y))","t","inf",0.16796875],["(fma.f64 (neg.f64 z) t (*.f64 x y))","t","0",0.155029296875],["(fma.f64 (neg.f64 z) t (*.f64 x y))","z","-inf",0.155029296875],["(fma.f64 (neg.f64 z) t (*.f64 x y))","z","inf",0.171142578125],["(fma.f64 (neg.f64 z) t (*.f64 x y))","z","0",0.156982421875],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","a","-inf",0.3369140625],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","a","inf",0.39111328125],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","a","0",0.529052734375],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","y","-inf",0.304931640625],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","y","inf",0.31298828125],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","y","0",0.337890625],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","x","-inf",0.2890625],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","x","inf",0.333984375],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","x","0",0.335205078125],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","t","-inf",0.363037109375],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","t","inf",0.35205078125],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","t","0",0.333984375],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","z","-inf",0.285888671875],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","z","inf",0.35302734375],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","z","0",1.14404296875]],"time":8.213134765625,"type":"series"},{"count":[[2,108]],"inputs":[["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","(fma.f64 (neg.f64 z) t (*.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))) (*.f64 (/.f64 1 a) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 0) (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) (*.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (*.f64 z t)) (/.f64 1 a)) (*.f64 (*.f64 x y) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x y) (/.f64 1 a)) (*.f64 (neg.f64 (*.f64 z t)) (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)) (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) (*.f64 0 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 a -1/3)) (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) (cbrt.f64 (neg.f64 a))) (/.f64 (neg.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3)) (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) -1) (/.f64 (neg.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (*.f64 z t) (*.f64 x y))) (cbrt.f64 a)) (/.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) (neg.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 (*.f64 z t) (*.f64 x y))) 1) (/.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a -1/3) (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 a -1/3)) (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (neg.f64 (pow.f64 a 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) (pow.f64 a 2/3)) (/.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) -1) (/.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) (cbrt.f64 a)) (/.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) (/.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)) (pow.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (fma.f64 (neg.f64 z) t (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 2/3) (cbrt.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (pow.f64 a 2/3)) (pow.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) a) (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (-.f64 (*.f64 z t) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) -2) (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) a) (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) -1) (/.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) -1) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) (/.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)) (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a 2/3))) (pow.f64 (cbrt.f64 (pow.f64 a 2/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (cbrt.f64 a)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)) (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3)) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 a -1/3) (fma.f64 (neg.f64 z) t (*.f64 x y))) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 2/3) (cbrt.f64 (-.f64 (*.f64 z t) (*.f64 x y)))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 2/3) (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (cbrt.f64 a)) 1) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (pow.f64 a 2/3)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (-.f64 (*.f64 z t) (*.f64 x y))) (pow.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 2/3)) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (cbrt.f64 a)) (neg.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (cbrt.f64 a)) 1) (pow.f64 a 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (cbrt.f64 a))) (neg.f64 (pow.f64 a 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) a) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 z t)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 0) (fma.f64 (neg.f64 z) t (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (*.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (fma.f64 (neg.f64 z) t (*.f64 x y))) (fma.f64 (neg.f64 z) t (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (*.f64 0 (fma.f64 (neg.f64 z) t (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x y) (*.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (*.f64 z t) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 z t) (*.f64 x y))) (neg.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) -1) (/.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 2/3) -1) (/.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (neg.f64 z) t (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (*.f64 z t) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 z t) (*.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z t) (*.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (neg.f64 z) t (*.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (*.f64 z t) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) t (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (neg.f64 z) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 z t))) (pow.f64 (cbrt.f64 (neg.f64 (*.f64 z t))) 2) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 z)) (*.f64 (pow.f64 z 2/3) t) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 z) (cbrt.f64 t)) (pow.f64 t 2/3) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (pow.f64 x 2/3) y) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x y)) (pow.f64 (*.f64 x y) 2/3) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 x)) (pow.f64 x 2/3) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 x y) 2/3) (cbrt.f64 (*.f64 x y)) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 y) (*.f64 (pow.f64 y 2/3) x) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y x (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 y)) (pow.f64 y 2/3) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x y (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 z t) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (*.f64 x y)) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 z t)) 1 (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (*.f64 z t)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) 1 (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x y) (neg.f64 (*.f64 z t)))))))"]],"rules":[["egg-rr",46],["egg-rr",62]],"time":30.074951171875,"type":"rewrite"},{"count":[[216,119]],"inputs":[["(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 -1 (*.f64 t z))","(neg.f64 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(*.f64 y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x))","(fma.f64 y x (neg.f64 (*.f64 t z)))"]],"time":322.653076171875,"type":"simplify"},{"compiler":[[1755,487]],"time":13.326904296875,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)) 3)","fresh",8.539259739630374],["(neg.f64 (/.f64 (*.f64 t z) a))","fresh",33.706733746560275],["(/.f64 (fma.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (neg.f64 (*.f64 z t))) a)","fresh",16.259928619012705],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","next",8.205748216114],["(/.f64 (*.f64 y x) a)","fresh",34.70020266497108],["(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","done",8.117525706345557],["(*.f64 (pow.f64 (cbrt.f64 a) -2) (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (cbrt.f64 a)))","fresh",8.525919749398817]],"compiler":[[17,12],[11,8],[22,14],[21,15],[10,7],[14,9],[20,13],[17,12],[11,8],[22,14],[21,15],[10,7],[20,13]],"count":[[126,7]],"kept":[{"done":[0,0],"fresh":[6,2],"new":[119,4],"picked":[1,1]}],"min-error":[7.791927694074802],"time":28.955078125,"type":"prune"},{"compiler":[[55,24]],"locations":[["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))",0.015625,true],["(*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))",5.461276529840044,true],["(*.f64 (/.f64 1 a) (*.f64 x y))",6.901741706456868,true]],"time":10.94287109375,"type":"localize"},{"count":[[3,132]],"series":[["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","t","-inf",0.18212890625],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","t","inf",0.189208984375],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","t","0",0.22119140625],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","z","-inf",0.197998046875],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","z","inf",0.175048828125],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","z","0",0.27197265625],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","y","-inf",0.177001953125],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","y","inf",0.280029296875],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","y","0",0.2509765625],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","x","-inf",0.19287109375],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","x","inf",0.18505859375],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","x","0",0.35498046875],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","a","-inf",0.215087890625],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","a","inf",0.173095703125],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","a","0",0.1728515625],["(*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))","t","-inf",0.171142578125],["(*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))","t","inf",0.39599609375],["(*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))","t","0",1.89990234375],["(*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))","z","-inf",0.156982421875],["(*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))","z","inf",0.39599609375],["(*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))","z","0",0.488037109375],["(*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))","a","-inf",0.214111328125],["(*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))","a","inf",0.431884765625],["(*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))","a","0",0.466064453125],["(*.f64 (/.f64 1 a) (*.f64 x y))","y","-inf",0.294921875],["(*.f64 (/.f64 1 a) (*.f64 x y))","y","inf",0.422119140625],["(*.f64 (/.f64 1 a) (*.f64 x y))","y","0",0.341064453125],["(*.f64 (/.f64 1 a) (*.f64 x y))","x","-inf",0.2958984375],["(*.f64 (/.f64 1 a) (*.f64 x y))","x","inf",0.385009765625],["(*.f64 (/.f64 1 a) (*.f64 x y))","x","0",0.369873046875],["(*.f64 (/.f64 1 a) (*.f64 x y))","a","-inf",0.88818359375],["(*.f64 (/.f64 1 a) (*.f64 x y))","a","inf",0.427978515625],["(*.f64 (/.f64 1 a) (*.f64 x y))","a","0",0.368896484375]],"time":12.047119140625,"type":"series"},{"count":[[3,234]],"inputs":[["(*.f64 (/.f64 1 a) (*.f64 x y))","(*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))","(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) a) (*.f64 (/.f64 (*.f64 x y) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 x y) a) 0) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) a) (*.f64 0 (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (*.f64 x y) a)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)) (cbrt.f64 (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x a) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 a) (cbrt.f64 (*.f64 x y))) (cbrt.f64 (pow.f64 (*.f64 x y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (cbrt.f64 (pow.f64 a -2)) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 x a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 a)) (*.f64 x (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 y a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 a)) (*.f64 y (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x a) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 a) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (*.f64 x y) (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 x y)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x y) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x y)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (cbrt.f64 a)) y) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (cbrt.f64 a)) x) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) (cbrt.f64 (pow.f64 (*.f64 x y) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)) (cbrt.f64 (*.f64 x y))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 x y)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x y) (cbrt.f64 (pow.f64 a -2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x y) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 x y)) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 x y) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x y) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x y) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 a) 0) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 (*.f64 z t) a)) (*.f64 (neg.f64 (/.f64 (*.f64 z t) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (/.f64 (*.f64 z t) a)) 0) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 (*.f64 z t) a)) (*.f64 0 (neg.f64 (/.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (neg.f64 (/.f64 (*.f64 z t) a))) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 a) (cbrt.f64 (neg.f64 (*.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 z t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 a) (neg.f64 z)) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 a) z) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (cbrt.f64 (pow.f64 a -2)) (neg.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 z t) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (neg.f64 (/.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 a)) (*.f64 (neg.f64 t) (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 a)) (*.f64 (*.f64 z t) (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 z) (/.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 z) (cbrt.f64 a)) (*.f64 t (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (*.f64 z t))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 z t)) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (*.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 (pow.f64 a -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 a)) (*.f64 (cbrt.f64 (pow.f64 a -2)) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (/.f64 1 a) t)) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 (/.f64 1 a) (cbrt.f64 (*.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 z t) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z t) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 a) t) (neg.f64 z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 a) (cbrt.f64 (*.f64 z t))) (neg.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 (neg.f64 a)) (neg.f64 (*.f64 a (*.f64 z t)))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z t) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 a)) (neg.f64 t)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (*.f64 z t) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (neg.f64 z) (cbrt.f64 a)) t) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 -1 a)) (*.f64 z t)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))) (cbrt.f64 (pow.f64 (*.f64 z t) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (cbrt.f64 (neg.f64 (*.f64 z t)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (neg.f64 (*.f64 z t))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 (pow.f64 a -2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 z t)) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 0 a) (*.f64 a (*.f64 z t))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a))) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 (/.f64 (*.f64 z t) a) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (/.f64 (*.f64 z t) a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (*.f64 z t) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (neg.f64 (pow.f64 (/.f64 (*.f64 z t) a) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (neg.f64 (/.f64 (*.f64 z t) a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) a) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 (*.f64 z t) a)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) (*.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 0) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) (*.f64 0 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x y) a) (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (*.f64 x y) a) 0) (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 2)) (cbrt.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (cbrt.f64 (pow.f64 a -2)) (fma.f64 x y (neg.f64 (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (+.f64 (*.f64 (cbrt.f64 (pow.f64 a -2)) (neg.f64 (*.f64 z t))) (*.f64 (*.f64 x y) (cbrt.f64 (pow.f64 a -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (+.f64 (*.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 (pow.f64 a -2))) (*.f64 (cbrt.f64 (pow.f64 a -2)) (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (+.f64 (*.f64 (cbrt.f64 (pow.f64 a -2)) (*.f64 x y)) (*.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 (pow.f64 a -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (+.f64 (*.f64 (*.f64 x y) (cbrt.f64 (pow.f64 a -2))) (*.f64 (cbrt.f64 (pow.f64 a -2)) (neg.f64 (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 (*.f64 (cbrt.f64 (pow.f64 a -2)) (*.f64 x y)) (*.f64 (cbrt.f64 (pow.f64 a -2)) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (-.f64 (*.f64 (*.f64 x y) (cbrt.f64 (pow.f64 a -2))) (*.f64 (cbrt.f64 (pow.f64 a -2)) (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 x y) a) (neg.f64 (/.f64 (*.f64 z t) a)))))) (+.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))) (cbrt.f64 (/.f64 (*.f64 x y) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)) (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (cbrt.f64 (*.f64 (/.f64 (*.f64 x y) a) (neg.f64 (/.f64 (*.f64 z t) a)))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (fma.f64 x y (neg.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a -2)) (+.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) (/.f64 (*.f64 x y) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 a -2)) (+.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 x y) a (neg.f64 (*.f64 a (*.f64 z t)))) (/.f64 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (neg.f64 (*.f64 x y)) (*.f64 z t)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (neg.f64 a)) (*.f64 (neg.f64 a) (*.f64 z t))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) a) (*.f64 (neg.f64 a) (neg.f64 (*.f64 z t)))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (neg.f64 a)) (*.f64 a (*.f64 z t))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 (*.f64 a a)) (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)))) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 z t))) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 (*.f64 z t)))) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 (*.f64 x y) (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 z t) (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 (*.f64 x y) (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 (*.f64 a a)) (/.f64 (*.f64 x y) (cbrt.f64 a)))) (*.f64 (cbrt.f64 (*.f64 a a)) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 (*.f64 x y)))) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 x y))) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 z t)) (neg.f64 a)) (*.f64 a (neg.f64 (*.f64 x y)))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 z t) (neg.f64 a)) (*.f64 (neg.f64 a) (neg.f64 (*.f64 x y)))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 z t) a) (*.f64 (neg.f64 a) (*.f64 x y))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 x y)) (neg.f64 a)) (*.f64 (neg.f64 a) (neg.f64 (*.f64 z t)))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 x y)) a) (*.f64 (neg.f64 a) (*.f64 z t))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x y) (neg.f64 a)) (neg.f64 (*.f64 a (*.f64 z t)))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 (*.f64 z t)))) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 z t))) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (*.f64 x y) a (neg.f64 (*.f64 a (*.f64 z t))))) (neg.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 x y)) (*.f64 z t)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 x y) a (neg.f64 (*.f64 a (*.f64 z t)))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1 (+.f64 (neg.f64 (*.f64 x y)) (*.f64 z t))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (cbrt.f64 (/.f64 1 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) -1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (neg.f64 (*.f64 x y)) (*.f64 z t)) (cbrt.f64 (neg.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (neg.f64 (*.f64 x y)) (*.f64 z t)) 1) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (neg.f64 (*.f64 x y)) (*.f64 z t)) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 (neg.f64 (*.f64 x y)) (*.f64 z t)) -1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 (*.f64 x y) a (neg.f64 (*.f64 a (*.f64 z t)))) a) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (*.f64 x y)) (neg.f64 (*.f64 z t))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) (/.f64 (*.f64 x y) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x y) a) (*.f64 a (*.f64 z t))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 1 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 -1 a) (fma.f64 x y (neg.f64 (*.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) -1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) (/.f64 -1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (*.f64 x y) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (neg.f64 (*.f64 z t)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 z t)) (/.f64 1 a) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x a) y (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) (/.f64 1 a) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (/.f64 (*.f64 z t) a)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x y) a) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x y)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 x y) 2)) a) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (*.f64 x y) (cbrt.f64 (pow.f64 a -2))) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)) (cbrt.f64 (/.f64 (*.f64 x y) a)) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (cbrt.f64 a)) (*.f64 y (cbrt.f64 (pow.f64 a -2))) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 x a) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (cbrt.f64 (pow.f64 a -2)) (*.f64 x y)) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x y) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (*.f64 x y) a)) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 x a) (cbrt.f64 y)) (cbrt.f64 (*.f64 y y)) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x y) a) 1 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (cbrt.f64 a)) (*.f64 x (cbrt.f64 (pow.f64 a -2))) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 1 a) (cbrt.f64 (*.f64 x y))) (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 1 a) y) x (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 (pow.f64 a -2))) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 1 a) (neg.f64 z)) t (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (neg.f64 (/.f64 t a)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 1 a) (cbrt.f64 (neg.f64 (*.f64 z t)))) (cbrt.f64 (pow.f64 (*.f64 z t) 2)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (*.f64 z t))) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) a) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 1 a) z) (neg.f64 t) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 a) (*.f64 z t) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) (cbrt.f64 (pow.f64 a -2)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 z) (/.f64 t a) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 (*.f64 z t) a)) 1 (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 (cbrt.f64 (pow.f64 a -2)) (neg.f64 (*.f64 z t))) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (cbrt.f64 a)) (*.f64 (neg.f64 t) (cbrt.f64 (pow.f64 a -2))) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (neg.f64 z) (cbrt.f64 a)) (*.f64 t (cbrt.f64 (pow.f64 a -2))) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 a)) (*.f64 (*.f64 z t) (cbrt.f64 (pow.f64 a -2))) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 x y) a))))))"]],"rules":[["egg-rr",123],["egg-rr",65],["egg-rr",46]],"time":39.370849609375,"type":"rewrite"},{"count":[[366,241]],"inputs":[["(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 t z) (*.f64 -1 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 t z) (*.f64 -1 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 t z) (*.f64 -1 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (+.f64 (*.f64 t z) (*.f64 -1 (*.f64 y x))) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(/.f64 (*.f64 y x) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y x)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 t z) (*.f64 -1 (*.f64 y x))) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 t z) (*.f64 -1 (*.f64 y x))) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 t z) (*.f64 -1 (*.f64 y x))) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (+.f64 (*.f64 t z) (*.f64 -1 (*.f64 y x))) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)"]],"time":389.107177734375,"type":"simplify"},{"compiler":[[4365,1408]],"time":34.333984375,"type":"eval"},{"alts":[["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","done",8.205748216114],["(fma.f64 (*.f64 (/.f64 1 a) y) x (neg.f64 (/.f64 (*.f64 z t) a)))","fresh",7.864626215312632],["(/.f64 (fma.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (neg.f64 (*.f64 z t))) a)","fresh",16.259928619012705],["(fma.f64 z (neg.f64 (/.f64 t a)) (/.f64 (*.f64 x y) a))","fresh",8.028278531127743],["(fma.f64 (*.f64 (/.f64 1 a) (neg.f64 z)) t (/.f64 (*.f64 x y) a))","fresh",9.204387023070424],["(*.f64 (pow.f64 (cbrt.f64 a) -2) (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (cbrt.f64 a)))","fresh",8.525919749398817],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","next",7.806032465312632],["(fma.f64 y (/.f64 x a) (neg.f64 (/.f64 (*.f64 z t) a)))","fresh",8.391091459275835]],"compiler":[[21,15],[18,12],[22,14],[16,10],[18,12],[20,13],[16,10],[16,10],[18,12],[22,14],[16,10],[18,12],[20,13],[16,10],[16,10]],"count":[[248,8]],"kept":[{"done":[1,0],"fresh":[5,2],"new":[241,5],"picked":[1,1]}],"min-error":[0.5078125],"time":81.724853515625,"type":"prune"},{"compiler":[[38,10]],"locations":[["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))",4.046772615473299,true],["(/.f64 (*.f64 z t) a)",5.3792452798400445,true]],"time":7.2880859375,"type":"localize"},{"count":[[2,96]],"series":[["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","t","-inf",0.18701171875],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","t","inf",0.179931640625],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","t","0",0.27490234375],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","z","-inf",0.18994140625],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","z","inf",0.181884765625],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","z","0",0.304931640625],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","a","-inf",0.4580078125],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","a","inf",0.427978515625],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","a","0",0.364990234375],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","y","-inf",0.364013671875],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","y","inf",0.303955078125],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","y","0",0.341064453125],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","x","-inf",0.222900390625],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","x","inf",0.23193359375],["(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","x","0",0.347900390625],["(/.f64 (*.f64 z t) a)","a","-inf",0.169921875],["(/.f64 (*.f64 z t) a)","a","inf",0.14794921875],["(/.f64 (*.f64 z t) a)","a","0",0.166015625],["(/.f64 (*.f64 z t) a)","t","-inf",0.155029296875],["(/.f64 (*.f64 z t) a)","t","inf",0.150146484375],["(/.f64 (*.f64 z t) a)","t","0",0.1650390625],["(/.f64 (*.f64 z t) a)","z","-inf",0.159912109375],["(/.f64 (*.f64 z t) a)","z","inf",0.157958984375],["(/.f64 (*.f64 z t) a)","z","0",0.2109375]],"time":6.1689453125,"type":"series"},{"count":[[2,148]],"inputs":[["(/.f64 (*.f64 z t) a)","(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 z t) a) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 z t) a) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (neg.f64 a)) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 0 (-.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (*.f64 0 (cbrt.f64 (/.f64 (*.f64 z t) a))))) (+.f64 0 (cbrt.f64 (/.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (+.f64 0 (*.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) 0))) (-.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (*.f64 z t)) (/.f64 -1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 t (/.f64 z a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 a)) (/.f64 z (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 z t)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (/.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 a)) (/.f64 t (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z t) (/.f64 1 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (cbrt.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (*.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 a)) (/.f64 (*.f64 z t) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z t) (cbrt.f64 (*.f64 a a))) (cbrt.f64 (/.f64 1 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t a) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z a) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 a) (neg.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (*.f64 z t) a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) a) (cbrt.f64 (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 t (cbrt.f64 (*.f64 a a))) (/.f64 z (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (*.f64 a a))) (/.f64 t (cbrt.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (-.f64 (neg.f64 (/.f64 (*.f64 z t) a)) 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2))) (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) (pow.f64 (cbrt.f64 a) -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2)) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z t) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 z t)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 t (cbrt.f64 a)) z) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 1 a)) (*.f64 z t)) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 z (cbrt.f64 a)) t) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (cbrt.f64 (neg.f64 (*.f64 z t)))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (cbrt.f64 (*.f64 z t))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (cbrt.f64 (pow.f64 (*.f64 z t) 2))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (/.f64 t (cbrt.f64 (*.f64 a a)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 z t) (cbrt.f64 (*.f64 a a))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (neg.f64 (*.f64 z t))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2))) (cbrt.f64 (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (*.f64 z t)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (/.f64 z (cbrt.f64 (*.f64 a a)))) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (*.f64 z t) (cbrt.f64 a)) 1) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) (neg.f64 (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a))) (cbrt.f64 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 z t) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z t) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 0 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 0 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 3 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (neg.f64 (/.f64 (*.f64 z t) a)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z t)) (/.f64 (cbrt.f64 (pow.f64 (*.f64 z t) 2)) a) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (/.f64 z a) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 a) (*.f64 z t) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 z (cbrt.f64 a)) (/.f64 t (cbrt.f64 (*.f64 a a))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 t (cbrt.f64 a)) (/.f64 z (cbrt.f64 (*.f64 a a))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 z t)) (/.f64 -1 a) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 t a) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 a)) (/.f64 (*.f64 z t) (cbrt.f64 (*.f64 a a))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z t) (/.f64 1 a) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (cbrt.f64 (/.f64 (*.f64 z t) a)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 0 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 0 1 (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 z t) a) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 z t) a) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a) 0) (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a) (*.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a) 0))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 0 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)) (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a) (*.f64 0 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 x y) a) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (/.f64 (*.f64 z t) a)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x y) a) (/.f64 (*.f64 z t) a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (-.f64 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)) (cbrt.f64 (pow.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a) 2)) (cbrt.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (neg.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (+.f64 (*.f64 x y) (neg.f64 (*.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (+.f64 (neg.f64 (*.f64 z t)) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 a) (-.f64 (*.f64 x y) (*.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) (neg.f64 a)) (*.f64 (neg.f64 a) (*.f64 z t))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 x y)) a) (*.f64 (neg.f64 a) (neg.f64 (*.f64 z t)))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) (neg.f64 a)) (*.f64 a (*.f64 z t))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) (neg.f64 a)) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 (*.f64 x y)))) (*.f64 (cbrt.f64 (*.f64 a a)) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (neg.f64 (*.f64 z t)) (cbrt.f64 a)) a) (*.f64 (cbrt.f64 (*.f64 a a)) (*.f64 x y))) (*.f64 (cbrt.f64 (*.f64 a a)) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 z t) (neg.f64 a)) (*.f64 (neg.f64 a) (neg.f64 (*.f64 x y)))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 z t) a) (*.f64 (neg.f64 a) (*.f64 x y))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 z t)) (neg.f64 a)) (*.f64 a (neg.f64 (*.f64 x y)))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 x y)) (neg.f64 a)) (*.f64 (neg.f64 a) (neg.f64 (*.f64 z t)))) (*.f64 (neg.f64 a) (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 x y)) a) (*.f64 (neg.f64 a) (*.f64 z t))) (*.f64 (neg.f64 a) a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 (*.f64 x y)) (cbrt.f64 (*.f64 a a))) (*.f64 (neg.f64 a) (/.f64 (*.f64 z t) (cbrt.f64 a)))) (*.f64 (neg.f64 a) (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x y) (neg.f64 a)) (*.f64 a (neg.f64 (*.f64 z t)))) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x y) (cbrt.f64 (*.f64 a a))) (*.f64 a (/.f64 (*.f64 z t) (cbrt.f64 a)))) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (*.f64 x y)) (neg.f64 (*.f64 z t))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 z t) (neg.f64 (*.f64 x y))) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 z t)) (*.f64 x y)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (neg.f64 (*.f64 x y)) (*.f64 z t)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 x y) (neg.f64 (*.f64 z t))) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (*.f64 x y) a) (*.f64 a (neg.f64 (*.f64 z t)))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (neg.f64 (*.f64 z t)) a) (*.f64 a (*.f64 x y))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x y) a) (*.f64 a (*.f64 z t))) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)) (+.f64 2 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)) (+.f64 1 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (neg.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (-.f64 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 x y) a)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))) (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) (neg.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2))) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 z t) a) -1 (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (*.f64 z t) a) 2)) (cbrt.f64 (neg.f64 (/.f64 (*.f64 z t) a))) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (*.f64 z t) a) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z t) (/.f64 -1 a) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (*.f64 z t)) (/.f64 1 a) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y a) x (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (*.f64 x x)) (/.f64 y a)) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) (/.f64 1 a) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (*.f64 x y) a)) (cbrt.f64 (pow.f64 (/.f64 (*.f64 x y) a) 2)) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2)) (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 x y) a) 1 (neg.f64 (/.f64 (*.f64 z t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (/.f64 (*.f64 z t) a)) 1 (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (/.f64 (*.f64 z t) a)) (/.f64 (*.f64 x y) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (*.f64 x y) a) (neg.f64 (/.f64 (*.f64 z t) a)))))))"]],"rules":[["egg-rr",68],["egg-rr",80]],"time":28.447998046875,"type":"rewrite"},{"count":[[244,156]],"inputs":[["(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t z))) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t z))) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t z))) a))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t z))) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(*.f64 -1 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(/.f64 (*.f64 t z) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (-.f64 (*.f64 y x) (*.f64 t z)) a)","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t z))) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t z))) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t z))) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (-.f64 (*.f64 -1 (*.f64 y x)) (*.f64 -1 (*.f64 t z))) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(/.f64 (*.f64 y x) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(*.f64 -1 (/.f64 (*.f64 t z) a))","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)","(+.f64 (*.f64 -1 (/.f64 (*.f64 t z) a)) (/.f64 (*.f64 y x) a))","(/.f64 (fma.f64 y x (neg.f64 (*.f64 t z))) a)"]],"time":291.2861328125,"type":"simplify"},{"compiler":[[2504,670]],"time":19.017822265625,"type":"eval"},{"alts":[["(fma.f64 (*.f64 x (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2)) (neg.f64 (/.f64 (*.f64 z t) a)))","fresh",18.25101454392065],["(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","done",8.205748216114],["(fma.f64 (*.f64 (/.f64 1 a) y) x (neg.f64 (/.f64 (*.f64 z t) a)))","fresh",7.864626215312632],["(fma.f64 x (/.f64 y a) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) 3)))","fresh",8.011812543460167],["(fma.f64 y (/.f64 x a) (neg.f64 (/.f64 (*.f64 z t) a)))","fresh",8.391091459275835],["(fma.f64 x (/.f64 y a) (neg.f64 (*.f64 (/.f64 t a) z)))","fresh",6.701953176670872],["(/.f64 (fma.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (neg.f64 (*.f64 z t))) a)","fresh",16.259928619012705],["(fma.f64 (*.f64 (/.f64 1 a) (neg.f64 z)) t (/.f64 (*.f64 x y) a))","fresh",9.204387023070424],["(fma.f64 x (/.f64 y a) (neg.f64 (*.f64 (/.f64 z a) t)))","fresh",8.145955669324035]],"compiler":[[24,15],[21,15],[18,12],[19,13],[16,10],[16,10],[22,14],[18,12],[16,10]],"count":[[164,9]],"kept":[{"done":[1,1],"fresh":[6,4],"new":[156,4],"picked":[1,0]}],"min-error":[0.00390625],"time":46.93896484375,"type":"prune"},{"accuracy":[0.8636194563455579],"baseline":[6.701953176670872],"branch":[["x",3.693167187938,3],["y",3.6955948541309724,4],["z",4.269863048478902,4],["t",3.6303175683576887,4],["a",2.8624476330164303,3],["(/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)",0.8909632063455579,3],["(-.f64 (*.f64 x y) (*.f64 z t))",0.8636194563455579,3],["(*.f64 x y)",3.019820795607538,3],["(*.f64 x y)",3.019820795607538,3],["(*.f64 z t)",2.203708514078287,5],["(*.f64 z t)",2.203708514078287,5]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[14,9],[12,8],[8,6],[8,6],[8,6],[8,6],[267,95]],"count":[[22,3]],"inputs":[["(fma.f64 (*.f64 x (cbrt.f64 (/.f64 y a))) (cbrt.f64 (pow.f64 (/.f64 y a) 2)) (neg.f64 (/.f64 (*.f64 z t) a)))","(fma.f64 x (/.f64 y a) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 z t) a)) 3)))","(fma.f64 x (/.f64 y a) (neg.f64 (*.f64 (/.f64 t a) z)))","(fma.f64 x (/.f64 y a) (neg.f64 (*.f64 (/.f64 z a) t)))","(fma.f64 (*.f64 (/.f64 1 a) y) x (neg.f64 (/.f64 (*.f64 z t) a)))","(fma.f64 z (neg.f64 (/.f64 t a)) (/.f64 (*.f64 x y) a))","(fma.f64 (*.f64 (/.f64 1 a) (neg.f64 z)) t (/.f64 (*.f64 x y) a))","(fma.f64 x (/.f64 y a) (neg.f64 (/.f64 (*.f64 z t) a)))","(fma.f64 y (/.f64 x a) (neg.f64 (/.f64 (*.f64 z t) a)))","(pow.f64 (cbrt.f64 (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)) 3)","(neg.f64 (/.f64 (*.f64 t z) a))","(+.f64 (*.f64 (/.f64 1 a) (*.f64 x y)) (*.f64 (/.f64 1 a) (neg.f64 (*.f64 z t))))","(*.f64 (pow.f64 (cbrt.f64 a) -2) (/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) (cbrt.f64 a)))","(/.f64 (fma.f64 (cbrt.f64 (*.f64 x y)) (cbrt.f64 (pow.f64 (*.f64 x y) 2)) (neg.f64 (*.f64 z t))) a)","(/.f64 (neg.f64 (*.f64 t z)) a)","(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)) 3)","(/.f64 (*.f64 y x) a)","(/.f64 (fma.f64 (neg.f64 z) t (*.f64 x y)) a)","(+.f64 (*.f64 (*.f64 x y) (/.f64 1 a)) (*.f64 (neg.f64 (*.f64 z t)) (/.f64 1 a)))","(*.f64 (neg.f64 (pow.f64 (cbrt.f64 a) -2)) (/.f64 (-.f64 (*.f64 z t) (*.f64 x y)) (cbrt.f64 a)))","(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","(/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)"]],"link":["."],"name":["Data.Colour.Matrix:inverse from colour-2.3.3, B"],"oracle":[59.31804582304456],"outputs":[["(fma.f64 x (/.f64 y a) (neg.f64 (*.f64 (/.f64 z a) t)))","(/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)","(fma.f64 x (/.f64 y a) (neg.f64 (*.f64 (/.f64 t a) z)))"]],"time":254.05322265625,"times":[["x",19.830810546875],["y",25.828857421875],["z",26.337890625],["t",28.970947265625],["a",19.89306640625],["(/.f64 (-.f64 (*.f64 x y) (*.f64 z t)) a)",16.8662109375],["(-.f64 (*.f64 x y) (*.f64 z t))",18.2412109375],["(*.f64 x y)",17.445068359375],["(*.f64 x y)",17.758056640625],["(*.f64 z t)",29.041015625],["(*.f64 z t)",28.283935546875]],"type":"regimes"},{"bstep":[[4.796295154141509e+112,1.4910238696155714e+113,0.031982421875],[-8.748485812496196e+281,-4.3036466202472725e+277,0.115966796875]],"compiler":[[10,8],[12,8]],"method":["left-value","left-value"],"time":0.31884765625,"type":"bsearch"},{"compiler":[[56,26]],"inputs":[["(if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z t)) -500000000000000016391122991431049124285352641510746782131666788720471301598687167963967189336205896526908748790912075409350817338455347847996995550646521260562389402122810032907636636177574798245164274456255150314546300696222417826065474282413002311039392838405427552850632350105600) (fma.f64 x (/.f64 y a) (neg.f64 (*.f64 (/.f64 z a) t))) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z t)) 50000000000000000777970806473342151213410069846053071668488529021541689058237785163249269495752372383810314043392) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) (fma.f64 x (/.f64 y a) (neg.f64 (*.f64 (/.f64 t a) z)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z t)) -500000000000000016391122991431049124285352641510746782131666788720471301598687167963967189336205896526908748790912075409350817338455347847996995550646521260562389402122810032907636636177574798245164274456255150314546300696222417826065474282413002311039392838405427552850632350105600) (fma.f64 x (/.f64 y a) (neg.f64 (*.f64 (/.f64 z a) t))) (if (<=.f64 (-.f64 (*.f64 x y) (*.f64 z t)) 50000000000000000777970806473342151213410069846053071668488529021541689058237785163249269495752372383810314043392) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) (fma.f64 x (/.f64 y a) (neg.f64 (*.f64 (/.f64 t a) z)))))","(if (<=.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) -500000000000000016391122991431049124285352641510746782131666788720471301598687167963967189336205896526908748790912075409350817338455347847996995550646521260562389402122810032907636636177574798245164274456255150314546300696222417826065474282413002311039392838405427552850632350105600) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) (if (<=.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) 50000000000000000777970806473342151213410069846053071668488529021541689058237785163249269495752372383810314043392) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a) (/.f64 (fma.f64 x y (neg.f64 (*.f64 z t))) a)))"]],"stop":[["fuel",1]],"time":23.096923828125,"type":"simplify"},{"time":0.024169921875,"type":"soundness"},{"compiler":[[56,26]],"remove-preprocessing":[[]],"time":14.958984375,"type":"end"}]